

Microchip Technology PIC LITE Macro Assembler V1.21 build 54009 
                                                                                               Mon Apr 07 16:34:12 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2
    40                           	psect	text30,local,class=CODE,merge=1,delta=2
    41                           	psect	text31,local,class=CODE,merge=1,delta=2
    42                           	psect	text32,local,class=CODE,merge=1,delta=2
    43                           	psect	text33,local,class=CODE,merge=1,delta=2
    44                           	dabs	1,0x7E,2
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0007                     	;# 
    53  0008                     	;# 
    54  0009                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000D                     	;# 
    59  000E                     	;# 
    60  000E                     	;# 
    61  000F                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0014                     	;# 
    67  0015                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  001D                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  0081                     	;# 
    81  0085                     	;# 
    82  0086                     	;# 
    83  0087                     	;# 
    84  0088                     	;# 
    85  0089                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  008E                     	;# 
    89  008F                     	;# 
    90  0090                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0093                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0095                     	;# 
    98  0096                     	;# 
    99  0097                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009A                     	;# 
   103  009B                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  0105                     	;# 
   109  0107                     	;# 
   110  0108                     	;# 
   111  0109                     	;# 
   112  010C                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  0185                     	;# 
   118  0187                     	;# 
   119  0188                     	;# 
   120  0189                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123  0000                     	;# 
   124  0001                     	;# 
   125  0002                     	;# 
   126  0003                     	;# 
   127  0004                     	;# 
   128  0005                     	;# 
   129  0006                     	;# 
   130  0007                     	;# 
   131  0008                     	;# 
   132  0009                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000D                     	;# 
   137  000E                     	;# 
   138  000E                     	;# 
   139  000F                     	;# 
   140  0010                     	;# 
   141  0011                     	;# 
   142  0012                     	;# 
   143  0013                     	;# 
   144  0014                     	;# 
   145  0015                     	;# 
   146  0015                     	;# 
   147  0016                     	;# 
   148  0017                     	;# 
   149  0018                     	;# 
   150  0019                     	;# 
   151  001A                     	;# 
   152  001B                     	;# 
   153  001B                     	;# 
   154  001C                     	;# 
   155  001D                     	;# 
   156  001E                     	;# 
   157  001F                     	;# 
   158  0081                     	;# 
   159  0085                     	;# 
   160  0086                     	;# 
   161  0087                     	;# 
   162  0088                     	;# 
   163  0089                     	;# 
   164  008C                     	;# 
   165  008D                     	;# 
   166  008E                     	;# 
   167  008F                     	;# 
   168  0090                     	;# 
   169  0091                     	;# 
   170  0092                     	;# 
   171  0093                     	;# 
   172  0093                     	;# 
   173  0093                     	;# 
   174  0094                     	;# 
   175  0095                     	;# 
   176  0096                     	;# 
   177  0097                     	;# 
   178  0098                     	;# 
   179  0099                     	;# 
   180  009A                     	;# 
   181  009B                     	;# 
   182  009C                     	;# 
   183  009D                     	;# 
   184  009E                     	;# 
   185  009F                     	;# 
   186  0105                     	;# 
   187  0107                     	;# 
   188  0108                     	;# 
   189  0109                     	;# 
   190  010C                     	;# 
   191  010C                     	;# 
   192  010D                     	;# 
   193  010E                     	;# 
   194  010F                     	;# 
   195  0185                     	;# 
   196  0187                     	;# 
   197  0188                     	;# 
   198  0189                     	;# 
   199  018C                     	;# 
   200  018D                     	;# 
   201  0000                     	;# 
   202  0001                     	;# 
   203  0002                     	;# 
   204  0003                     	;# 
   205  0004                     	;# 
   206  0005                     	;# 
   207  0006                     	;# 
   208  0007                     	;# 
   209  0008                     	;# 
   210  0009                     	;# 
   211  000A                     	;# 
   212  000B                     	;# 
   213  000C                     	;# 
   214  000D                     	;# 
   215  000E                     	;# 
   216  000E                     	;# 
   217  000F                     	;# 
   218  0010                     	;# 
   219  0011                     	;# 
   220  0012                     	;# 
   221  0013                     	;# 
   222  0014                     	;# 
   223  0015                     	;# 
   224  0015                     	;# 
   225  0016                     	;# 
   226  0017                     	;# 
   227  0018                     	;# 
   228  0019                     	;# 
   229  001A                     	;# 
   230  001B                     	;# 
   231  001B                     	;# 
   232  001C                     	;# 
   233  001D                     	;# 
   234  001E                     	;# 
   235  001F                     	;# 
   236  0081                     	;# 
   237  0085                     	;# 
   238  0086                     	;# 
   239  0087                     	;# 
   240  0088                     	;# 
   241  0089                     	;# 
   242  008C                     	;# 
   243  008D                     	;# 
   244  008E                     	;# 
   245  008F                     	;# 
   246  0090                     	;# 
   247  0091                     	;# 
   248  0092                     	;# 
   249  0093                     	;# 
   250  0093                     	;# 
   251  0093                     	;# 
   252  0094                     	;# 
   253  0095                     	;# 
   254  0096                     	;# 
   255  0097                     	;# 
   256  0098                     	;# 
   257  0099                     	;# 
   258  009A                     	;# 
   259  009B                     	;# 
   260  009C                     	;# 
   261  009D                     	;# 
   262  009E                     	;# 
   263  009F                     	;# 
   264  0105                     	;# 
   265  0107                     	;# 
   266  0108                     	;# 
   267  0109                     	;# 
   268  010C                     	;# 
   269  010C                     	;# 
   270  010D                     	;# 
   271  010E                     	;# 
   272  010F                     	;# 
   273  0185                     	;# 
   274  0187                     	;# 
   275  0188                     	;# 
   276  0189                     	;# 
   277  018C                     	;# 
   278  018D                     	;# 
   279  0006                     _PORTB	set	6
   280  0007                     _PORTC	set	7
   281  0008                     _PORTD	set	8
   282  0013                     _SSPBUF	set	19
   283  0014                     _SSPCONbits	set	20
   284  0030                     _RB0	set	48
   285  0031                     _RB1	set	49
   286  0034                     _RB4	set	52
   287  0035                     _RB5	set	53
   288  0093                     _SSPADD	set	147
   289  0091                     _SSPCON2bits	set	145
   290  0094                     _SSPSTATbits	set	148
   291  0086                     _TRISB	set	134
   292  0087                     _TRISCbits	set	135
   293  0088                     _TRISD	set	136
   294  0189                     _ANSELH	set	393
   295                           
   296                           	psect	strings
   297  0003                     __pstrings:	
   298  0003                     stringtab:	
   299  0003                     __stringtab:	
   300  0003                     stringcode:	
   301                           ;	String table - string pointers are 1 byte each
   302                           
   303  0003                     stringdir:	
   304  0003  3000               	movlw	high stringdir
   305  0004  008A               	movwf	10
   306  0005  0804               	movf	4,w
   307  0006  0A84               	incf	4,f
   308  0007  0782               	addwf	2,f
   309  0008                     __stringbase:	
   310  0008  3400               	retlw	0
   311  0009                     __end_of__stringtab:	
   312  0009                     __stringdata:	
   313  0009                     STR_1:	
   314  0009  3446               	retlw	70	;'F'
   315  000A  3472               	retlw	114	;'r'
   316  000B  3465               	retlw	101	;'e'
   317  000C  3471               	retlw	113	;'q'
   318  000D  343A               	retlw	58	;':'
   319  000E  3420               	retlw	32	;' '
   320  000F  3420               	retlw	32	;' '
   321  0010  3420               	retlw	32	;' '
   322  0011  342E               	retlw	46	;'.'
   323  0012  3420               	retlw	32	;' '
   324  0013  3400               	retlw	0
   325  0014                     __end_of__stringdata:	
   326                           
   327                           ; #config settings
   328  0000                     
   329                           	psect	cinit
   330  07F0                     start_initialization:	
   331  07F0                     __initialization:	
   332                           
   333                           ; Clear objects allocated to BANK1
   334  07F0  1683               	bsf	3,5	;RP0=1, select bank1
   335  07F1  1303               	bcf	3,6	;RP1=0, select bank1
   336  07F2  01D9               	clrf	__pbssBANK1& (0+127)
   337  07F3  01DA               	clrf	(__pbssBANK1+1)& (0+127)
   338  07F4  01DB               	clrf	(__pbssBANK1+2)& (0+127)
   339  07F5  01DC               	clrf	(__pbssBANK1+3)& (0+127)
   340  07F6  01DD               	clrf	(__pbssBANK1+4)& (0+127)
   341  07F7  01DE               	clrf	(__pbssBANK1+5)& (0+127)
   342  07F8  01DF               	clrf	(__pbssBANK1+6)& (0+127)
   343  07F9  01E0               	clrf	(__pbssBANK1+7)& (0+127)
   344  07FA  01E1               	clrf	(__pbssBANK1+8)& (0+127)
   345  07FB  01E2               	clrf	(__pbssBANK1+9)& (0+127)
   346  07FC                     end_of_initialization:	
   347                           ;End of C runtime variable initialization code
   348                           
   349  07FC                     __end_of__initialization:	
   350  07FC  0183               	clrf	3
   351  07FD  120A  158A  2D8E   	ljmp	_main	;jump to C main() function
   352                           
   353                           	psect	bssBANK1
   354  00D9                     __pbssBANK1:	
   355  00D9                     lcd_bcd@F1677:	
   356  00D9                     	ds	10
   357                           
   358                           	psect	cstackBANK1
   359  00A0                     __pcstackBANK1:	
   360  00A0                     ?___ftmul:	
   361  00A0                     ___ftmul@f1:	
   362                           ; 3 bytes @ 0x0
   363                           
   364                           
   365                           ; 3 bytes @ 0x0
   366  00A0                     	ds	3
   367  00A3                     ___ftmul@f2:	
   368                           
   369                           ; 3 bytes @ 0x3
   370  00A3                     	ds	9
   371  00AC                     ___ftmul@exp:	
   372                           
   373                           ; 1 bytes @ 0xC
   374  00AC                     	ds	1
   375  00AD                     ___ftmul@f3_as_product:	
   376                           
   377                           ; 3 bytes @ 0xD
   378  00AD                     	ds	3
   379  00B0                     ___ftmul@cntr:	
   380                           
   381                           ; 1 bytes @ 0x10
   382  00B0                     	ds	1
   383  00B1                     ___ftmul@sign:	
   384                           
   385                           ; 1 bytes @ 0x11
   386  00B1                     	ds	1
   387  00B2                     ??_Freq_Available:	
   388  00B2                     _SetFrequency$809:	
   389                           ; 0 bytes @ 0x12
   390                           
   391                           
   392                           ; 3 bytes @ 0x12
   393  00B2                     	ds	3
   394  00B5                     SetFrequency@frequencyH:	
   395                           
   396                           ; 1 bytes @ 0x15
   397  00B5                     	ds	1
   398  00B6                     SetFrequency@frequencyL:	
   399                           
   400                           ; 1 bytes @ 0x16
   401  00B6                     	ds	1
   402  00B7                     SetFrequency@frequencyB:	
   403                           
   404                           ; 2 bytes @ 0x17
   405  00B7                     	ds	4
   406  00BB                     Freq_Available@buffer:	
   407                           
   408                           ; 5 bytes @ 0x1B
   409  00BB                     	ds	5
   410  00C0                     Freq_Available@freq_available:	
   411                           
   412                           ; 3 bytes @ 0x20
   413  00C0                     	ds	3
   414  00C3                     Freq_Available@i:	
   415                           
   416                           ; 1 bytes @ 0x23
   417  00C3                     	ds	1
   418  00C4                     ?_lcd_bcd:	
   419  00C4                     lcd_bcd@ui_number:	
   420                           ; 0 bytes @ 0x24
   421                           
   422  00C4                     _SearchUp$810:	
   423                           ; 2 bytes @ 0x24
   424                           
   425  00C4                     _SearchDown$811:	
   426                           ; 3 bytes @ 0x24
   427                           
   428                           
   429                           ; 3 bytes @ 0x24
   430  00C4                     	ds	2
   431  00C6                     ??_lcd_bcd:	
   432                           
   433                           ; 0 bytes @ 0x26
   434  00C6                     	ds	1
   435  00C7                     SearchUp@frequency:	
   436  00C7                     SearchDown@frequency:	
   437                           ; 3 bytes @ 0x27
   438                           
   439                           
   440                           ; 3 bytes @ 0x27
   441  00C7                     	ds	3
   442  00CA                     SearchUp@frequencyH:	
   443  00CA                     SearchDown@frequencyH:	
   444                           ; 1 bytes @ 0x2A
   445                           
   446  00CA                     lcd_bcd@ui_decimal:	
   447                           ; 1 bytes @ 0x2A
   448                           
   449                           
   450                           ; 10 bytes @ 0x2A
   451  00CA                     	ds	1
   452  00CB                     SearchUp@frequencyL:	
   453  00CB                     SearchDown@frequencyL:	
   454                           ; 1 bytes @ 0x2B
   455                           
   456                           
   457                           ; 1 bytes @ 0x2B
   458  00CB                     	ds	1
   459  00CC                     SearchUp@frequencyB:	
   460  00CC                     SearchDown@frequencyB:	
   461                           ; 2 bytes @ 0x2C
   462                           
   463                           
   464                           ; 2 bytes @ 0x2C
   465  00CC                     	ds	8
   466  00D4                     lcd_bcd@uc_digit:	
   467                           
   468                           ; 1 bytes @ 0x34
   469  00D4                     	ds	1
   470  00D5                     _Freq_Display$808:	
   471                           
   472                           ; 2 bytes @ 0x35
   473  00D5                     	ds	2
   474  00D7                     Freq_Display@freq_available:	
   475                           
   476                           ; 2 bytes @ 0x37
   477  00D7                     	ds	2
   478                           
   479                           	psect	cstackCOMMON
   480  0070                     __pcstackCOMMON:	
   481  0070                     ?_i2c_initialize:	
   482  0070                     ??_i2c_initialize:	
   483                           ; 0 bytes @ 0x0
   484                           
   485  0070                     ?_lcd_initialize:	
   486                           ; 0 bytes @ 0x0
   487                           
   488  0070                     ?_lcd_clear:	
   489                           ; 0 bytes @ 0x0
   490                           
   491  0070                     ?_lcd_home:	
   492                           ; 0 bytes @ 0x0
   493                           
   494  0070                     ?_lcd_putstr:	
   495                           ; 0 bytes @ 0x0
   496                           
   497  0070                     ?_SearchUp:	
   498                           ; 0 bytes @ 0x0
   499                           
   500  0070                     ?_SearchDown:	
   501                           ; 0 bytes @ 0x0
   502                           
   503  0070                     ?_Freq_Display:	
   504                           ; 0 bytes @ 0x0
   505                           
   506  0070                     ?_lcd_goto:	
   507                           ; 0 bytes @ 0x0
   508                           
   509  0070                     ?_I2C_Start:	
   510                           ; 0 bytes @ 0x0
   511                           
   512  0070                     ??_I2C_Start:	
   513                           ; 0 bytes @ 0x0
   514                           
   515  0070                     ?_I2C_Write_Byte:	
   516                           ; 0 bytes @ 0x0
   517                           
   518  0070                     ??_I2C_Write_Byte:	
   519                           ; 1 bit 
   520                           
   521  0070                     ?_I2C_Send_ACK:	
   522                           ; 0 bytes @ 0x0
   523                           
   524  0070                     ??_I2C_Send_ACK:	
   525                           ; 0 bytes @ 0x0
   526                           
   527  0070                     ?_I2C_Send_NACK:	
   528                           ; 0 bytes @ 0x0
   529                           
   530  0070                     ??_I2C_Send_NACK:	
   531                           ; 0 bytes @ 0x0
   532                           
   533  0070                     ?_I2C_Stop:	
   534                           ; 0 bytes @ 0x0
   535                           
   536  0070                     ??_I2C_Stop:	
   537                           ; 0 bytes @ 0x0
   538                           
   539  0070                     ??_I2C_Read_Byte:	
   540                           ; 0 bytes @ 0x0
   541                           
   542  0070                     ?_set_lcd_e:	
   543                           ; 0 bytes @ 0x0
   544                           
   545  0070                     ??_set_lcd_e:	
   546                           ; 0 bytes @ 0x0
   547                           
   548  0070                     ?_set_lcd_rs:	
   549                           ; 0 bytes @ 0x0
   550                           
   551  0070                     ??_set_lcd_rs:	
   552                           ; 0 bytes @ 0x0
   553                           
   554  0070                     ?_set_lcd_data:	
   555                           ; 0 bytes @ 0x0
   556                           
   557  0070                     ??_set_lcd_data:	
   558                           ; 0 bytes @ 0x0
   559                           
   560  0070                     ?_main:	
   561                           ; 0 bytes @ 0x0
   562                           
   563  0070                     ?_lcd_2ndline:	
   564                           ; 0 bytes @ 0x0
   565                           
   566  0070                     ?_lcd_putchar:	
   567                           ; 0 bytes @ 0x0
   568                           
   569  0070                     ??___aldiv:	
   570                           ; 0 bytes @ 0x0
   571                           
   572  0070                     ?_I2C_Read_Byte:	
   573                           ; 0 bytes @ 0x0
   574                           
   575  0070                     ?___lwdiv:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ?___lwmod:	
   579                           ; 2 bytes @ 0x0
   580                           
   581  0070                     ?___ftpack:	
   582                           ; 2 bytes @ 0x0
   583                           
   584  0070                     set_lcd_e@b_output:	
   585                           ; 3 bytes @ 0x0
   586                           
   587  0070                     set_lcd_rs@b_output:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     set_lcd_data@uc_data:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ___lwdiv@divisor:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ___lwmod@divisor:	
   597                           ; 2 bytes @ 0x0
   598                           
   599  0070                     ___ftpack@arg:	
   600                           ; 2 bytes @ 0x0
   601                           
   602                           
   603                           ; 3 bytes @ 0x0
   604  0070                     	ds	1
   605  0071                     ?_send_lcd_data:	
   606  0071                     I2C_Write_Byte@Byte:	
   607                           ; 0 bytes @ 0x1
   608                           
   609  0071                     send_lcd_data@uc_data:	
   610                           ; 1 bytes @ 0x1
   611                           
   612                           
   613                           ; 1 bytes @ 0x1
   614  0071                     	ds	1
   615  0072                     ??_send_lcd_data:	
   616  0072                     ___lwdiv@dividend:	
   617                           ; 0 bytes @ 0x2
   618                           
   619  0072                     ___lwmod@dividend:	
   620                           ; 2 bytes @ 0x2
   621                           
   622                           
   623                           ; 2 bytes @ 0x2
   624  0072                     	ds	1
   625  0073                     ___ftpack@exp:	
   626                           
   627                           ; 1 bytes @ 0x3
   628  0073                     	ds	1
   629  0074                     ??___lwdiv:	
   630  0074                     ??___lwmod:	
   631                           ; 0 bytes @ 0x4
   632                           
   633  0074                     send_lcd_data@b_rs:	
   634                           ; 0 bytes @ 0x4
   635                           
   636  0074                     ___ftpack@sign:	
   637                           ; 1 bytes @ 0x4
   638                           
   639                           
   640                           ; 1 bytes @ 0x4
   641  0074                     	ds	1
   642  0075                     ??_lcd_initialize:	
   643  0075                     ??_lcd_clear:	
   644                           ; 0 bytes @ 0x5
   645                           
   646  0075                     ??_lcd_home:	
   647                           ; 0 bytes @ 0x5
   648                           
   649  0075                     ??_lcd_goto:	
   650                           ; 0 bytes @ 0x5
   651                           
   652  0075                     ??___ftpack:	
   653                           ; 0 bytes @ 0x5
   654                           
   655  0075                     ??_lcd_2ndline:	
   656                           ; 0 bytes @ 0x5
   657                           
   658  0075                     ??_lcd_putchar:	
   659                           ; 0 bytes @ 0x5
   660                           
   661  0075                     ___lwmod@counter:	
   662                           ; 0 bytes @ 0x5
   663                           
   664  0075                     ___lwdiv@quotient:	
   665                           ; 1 bytes @ 0x5
   666                           
   667                           
   668                           ; 2 bytes @ 0x5
   669  0075                     	ds	1
   670  0076                     lcd_goto@uc_position:	
   671  0076                     lcd_putchar@c_data:	
   672                           ; 1 bytes @ 0x6
   673                           
   674                           
   675                           ; 1 bytes @ 0x6
   676  0076                     	ds	1
   677  0077                     ??_lcd_putstr:	
   678  0077                     ___aldiv@counter:	
   679                           ; 0 bytes @ 0x7
   680                           
   681  0077                     ___lwdiv@counter:	
   682                           ; 1 bytes @ 0x7
   683                           
   684                           
   685                           ; 1 bytes @ 0x7
   686  0077                     	ds	1
   687  0078                     lcd_putstr@csz_string:	
   688  0078                     ___aldiv@sign:	
   689                           ; 1 bytes @ 0x8
   690                           
   691                           
   692                           ; 1 bytes @ 0x8
   693  0078                     	ds	1
   694  0079                     ___aldiv@quotient:	
   695                           
   696                           ; 4 bytes @ 0x9
   697  0079                     	ds	4
   698  007D                     ??_SetFrequency:	
   699  007D                     ??_SearchUp:	
   700                           ; 0 bytes @ 0xD
   701                           
   702  007D                     ??_SearchDown:	
   703                           ; 0 bytes @ 0xD
   704                           
   705  007D                     ??_Freq_Display:	
   706                           ; 0 bytes @ 0xD
   707                           
   708                           
   709                           ; 0 bytes @ 0xD
   710  007D                     	ds	1
   711  007E                     ??_main:	
   712                           
   713                           	psect	cstackBANK0
   714  0020                     __pcstackBANK0:	
   715                           ; 0 bytes @ 0xE
   716                           
   717  0020                     ?___aldiv:	
   718  0020                     ___aldiv@divisor:	
   719                           ; 4 bytes @ 0x0
   720                           
   721                           
   722                           ; 4 bytes @ 0x0
   723  0020                     	ds	4
   724  0024                     ___aldiv@dividend:	
   725                           
   726                           ; 4 bytes @ 0x4
   727  0024                     	ds	4
   728  0028                     ?___fttol:	
   729  0028                     ___fttol@f1:	
   730                           ; 4 bytes @ 0x8
   731                           
   732                           
   733                           ; 3 bytes @ 0x8
   734  0028                     	ds	4
   735  002C                     ??___fttol:	
   736                           
   737                           ; 0 bytes @ 0xC
   738  002C                     	ds	10
   739  0036                     ___fttol@sign1:	
   740                           
   741                           ; 1 bytes @ 0x16
   742  0036                     	ds	1
   743  0037                     ___fttol@lval:	
   744                           
   745                           ; 4 bytes @ 0x17
   746  0037                     	ds	4
   747  003B                     ___fttol@exp1:	
   748                           
   749                           ; 1 bytes @ 0x1B
   750  003B                     	ds	1
   751  003C                     ?___altoft:	
   752  003C                     ?___ftadd:	
   753                           ; 3 bytes @ 0x1C
   754                           
   755  003C                     ___ftadd@f1:	
   756                           ; 3 bytes @ 0x1C
   757                           
   758  003C                     ___altoft@c:	
   759                           ; 3 bytes @ 0x1C
   760                           
   761                           
   762                           ; 4 bytes @ 0x1C
   763  003C                     	ds	3
   764  003F                     ___ftadd@f2:	
   765                           
   766                           ; 3 bytes @ 0x1F
   767  003F                     	ds	1
   768  0040                     ??___altoft:	
   769                           
   770                           ; 0 bytes @ 0x20
   771  0040                     	ds	2
   772  0042                     ??___ftadd:	
   773                           
   774                           ; 0 bytes @ 0x22
   775  0042                     	ds	2
   776  0044                     ___altoft@exp:	
   777                           
   778                           ; 1 bytes @ 0x24
   779  0044                     	ds	1
   780  0045                     ___altoft@sign:	
   781                           
   782                           ; 1 bytes @ 0x25
   783  0045                     	ds	4
   784  0049                     ___ftadd@sign:	
   785                           
   786                           ; 1 bytes @ 0x29
   787  0049                     	ds	1
   788  004A                     ___ftadd@exp2:	
   789                           
   790                           ; 1 bytes @ 0x2A
   791  004A                     	ds	1
   792  004B                     ___ftadd@exp1:	
   793                           
   794                           ; 1 bytes @ 0x2B
   795  004B                     	ds	1
   796  004C                     ?___ftdiv:	
   797  004C                     ___ftdiv@f2:	
   798                           ; 3 bytes @ 0x2C
   799                           
   800                           
   801                           ; 3 bytes @ 0x2C
   802  004C                     	ds	3
   803  004F                     ___ftdiv@f1:	
   804                           
   805                           ; 3 bytes @ 0x2F
   806  004F                     	ds	3
   807  0052                     ??___ftdiv:	
   808                           
   809                           ; 0 bytes @ 0x32
   810  0052                     	ds	10
   811  005C                     ___ftdiv@cntr:	
   812                           
   813                           ; 1 bytes @ 0x3C
   814  005C                     	ds	1
   815  005D                     ___ftdiv@exp:	
   816                           
   817                           ; 1 bytes @ 0x3D
   818  005D                     	ds	1
   819  005E                     ___ftdiv@f3:	
   820                           
   821                           ; 3 bytes @ 0x3E
   822  005E                     	ds	3
   823  0061                     ___ftdiv@sign:	
   824                           
   825                           ; 1 bytes @ 0x41
   826  0061                     	ds	1
   827  0062                     ??___ftmul:	
   828                           
   829                           ; 0 bytes @ 0x42
   830  0062                     	ds	4
   831  0066                     ?_SetFrequency:	
   832  0066                     ?_Freq_Available:	
   833                           ; 0 bytes @ 0x46
   834                           
   835  0066                     SetFrequency@frequency:	
   836                           ; 3 bytes @ 0x46
   837                           
   838                           
   839                           ; 3 bytes @ 0x46
   840  0066                     	ds	3
   841                           
   842                           	psect	maintext
   843  0D8E                     __pmaintext:	
   844 ;;
   845 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   846 ;;
   847 ;; *************** function _main *****************
   848 ;; Defined at:
   849 ;;		line 34 in file "Main.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;		None
   852 ;; Auto vars:     Size  Location     Type
   853 ;;		None
   854 ;; Return value:  Size  Location     Type
   855 ;;		None               void
   856 ;; Registers used:
   857 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   858 ;; Tracked objects:
   859 ;;		On entry : 17F/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   863 ;;      Params:         0       0       0       0       0
   864 ;;      Locals:         0       0       0       0       0
   865 ;;      Temps:          0       0       0       0       0
   866 ;;      Totals:         0       0       0       0       0
   867 ;;Total ram usage:        0 bytes
   868 ;; Hardware stack levels required when called:    5
   869 ;; This function calls:
   870 ;;		_i2c_initialize
   871 ;;		_lcd_initialize
   872 ;;		_lcd_clear
   873 ;;		_lcd_home
   874 ;;		_lcd_putstr
   875 ;;		_SetFrequency
   876 ;;		_SearchUp
   877 ;;		_SearchDown
   878 ;;		_Freq_Display
   879 ;; This function is called by:
   880 ;;		Startup code after reset
   881 ;; This function uses a non-reentrant model
   882 ;;
   883                           
   884                           
   885                           ;psect for function _main
   886  0D8E                     _main:	
   887                           
   888                           ;Main.c: 36: PORTB = 0;
   889                           
   890                           ;incstack = 0
   891                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   892  0D8E  1283               	bcf	3,5	;RP0=0, select bank0
   893  0D8F  1303               	bcf	3,6	;RP1=0, select bank0
   894  0D90  0186               	clrf	6	;volatile
   895                           
   896                           ;Main.c: 37: PORTC = 0;
   897  0D91  0187               	clrf	7	;volatile
   898                           
   899                           ;Main.c: 38: PORTD = 0;
   900  0D92  0188               	clrf	8	;volatile
   901                           
   902                           ;Main.c: 40: TRISB = 0b00000011;
   903  0D93  3003               	movlw	3
   904  0D94  1683               	bsf	3,5	;RP0=1, select bank1
   905  0D95  1303               	bcf	3,6	;RP1=0, select bank1
   906  0D96  0086               	movwf	6	;volatile
   907                           
   908                           ;Main.c: 41: TRISD = 0;
   909  0D97  0188               	clrf	8	;volatile
   910                           
   911                           ;Main.c: 43: ANSELH = 0;
   912  0D98  1683               	bsf	3,5	;RP0=1, select bank3
   913  0D99  1703               	bsf	3,6	;RP1=1, select bank3
   914  0D9A  0189               	clrf	9	;volatile
   915                           
   916                           ;Main.c: 46: i2c_initialize();
   917  0D9B  120A  118A  201A   	fcall	_i2c_initialize
      +       120A  158A         
   918                           
   919                           ;Main.c: 47: lcd_initialize();
   920  0DA0  120A  158A  243E   	fcall	_lcd_initialize
      +       120A  158A         
   921                           
   922                           ;Main.c: 48: lcd_clear();
   923  0DA5  120A  158A  23CF   	fcall	_lcd_clear
      +       120A  158A         
   924                           
   925                           ;Main.c: 50: lcd_home();
   926  0DAA  120A  158A  23D6   	fcall	_lcd_home
      +       120A  158A         
   927                           
   928                           ;Main.c: 51: lcd_putstr("Freq:   . ");
   929  0DAF  3001               	movlw	(STR_1-__stringbase)& (0+255)
   930  0DB0  120A  158A  24D8   	fcall	_lcd_putstr
      +       120A  158A         
   931                           
   932                           ;Main.c: 53: SetFrequency(92.8);
   933  0DB5  309A               	movlw	154
   934  0DB6  1283               	bcf	3,5	;RP0=0, select bank0
   935  0DB7  1303               	bcf	3,6	;RP1=0, select bank0
   936  0DB8  00E6               	movwf	?_SetFrequency
   937  0DB9  30B9               	movlw	185
   938  0DBA  00E7               	movwf	?_SetFrequency+1
   939  0DBB  3042               	movlw	66
   940  0DBC  00E8               	movwf	?_SetFrequency+2
   941  0DBD  120A  118A  20E2   	fcall	_SetFrequency
      +       120A  158A         
   942  0DC2                     l4224:	
   943                           ;Main.c: 55: while(1) {
   944                           
   945                           
   946                           ;Main.c: 56: if(RB0 == 0) {
   947  0DC2  1283               	bcf	3,5	;RP0=0, select bank0
   948  0DC3  1303               	bcf	3,6	;RP1=0, select bank0
   949  0DC4  1806               	btfsc	6,0	;volatile
   950  0DC5  2DCB               	goto	l4228
   951                           
   952                           ;Main.c: 57: SearchUp();
   953  0DC6  120A  118A  22AC   	fcall	_SearchUp
      +       120A  158A         
   954  0DCB                     l4228:	
   955                           
   956                           ;Main.c: 58: }
   957                           ;Main.c: 59: if(RB1 == 0) {
   958  0DCB  1283               	bcf	3,5	;RP0=0, select bank0
   959  0DCC  1303               	bcf	3,6	;RP1=0, select bank0
   960  0DCD  1886               	btfsc	6,1	;volatile
   961  0DCE  2DD4               	goto	l57
   962                           
   963                           ;Main.c: 60: SearchDown();
   964  0DCF  120A  118A  23AD   	fcall	_SearchDown
      +       120A  158A         
   965  0DD4                     l57:	
   966                           
   967                           ;Main.c: 61: }
   968                           ;Main.c: 62: Freq_Display();
   969  0DD4  120A  158A  275F   	fcall	_Freq_Display
      +       120A  158A         
   970  0DD9  2DC2               	goto	l4224
   971  0DDA                     __end_of_main:	
   972                           
   973                           	psect	text1
   974  0F5F                     __ptext1:	
   975 ;; *************** function _Freq_Display *****************
   976 ;; Defined at:
   977 ;;		line 67 in file "Main.c"
   978 ;; Parameters:    Size  Location     Type
   979 ;;		None
   980 ;; Auto vars:     Size  Location     Type
   981 ;;  freq_availab    2   55[BANK1 ] unsigned int 
   982 ;; Return value:  Size  Location     Type
   983 ;;		None               void
   984 ;; Registers used:
   985 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   986 ;; Tracked objects:
   987 ;;		On entry : 0/0
   988 ;;		On exit  : 0/0
   989 ;;		Unchanged: 0/0
   990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   991 ;;      Params:         0       0       0       0       0
   992 ;;      Locals:         0       0       4       0       0
   993 ;;      Temps:          0       0       0       0       0
   994 ;;      Totals:         0       0       4       0       0
   995 ;;Total ram usage:        4 bytes
   996 ;; Hardware stack levels used:    1
   997 ;; Hardware stack levels required when called:    4
   998 ;; This function calls:
   999 ;;		_lcd_goto
  1000 ;;		_Freq_Available
  1001 ;;		_lcd_bcd
  1002 ;;		___ftmul
  1003 ;;		___fttol
  1004 ;;		___lwmod
  1005 ;; This function is called by:
  1006 ;;		_main
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           
  1011                           ;psect for function _Freq_Display
  1012  0F5F                     _Freq_Display:	
  1013                           
  1014                           ;Main.c: 68: unsigned int freq_available = 0;
  1015                           
  1016                           ;incstack = 0
  1017                           ; Regs used in _Freq_Display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1018  0F5F  1683               	bsf	3,5	;RP0=1, select bank1
  1019  0F60  1303               	bcf	3,6	;RP1=0, select bank1
  1020  0F61  01D7               	clrf	Freq_Display@freq_available^(0+128)
  1021  0F62  01D8               	clrf	(Freq_Display@freq_available+1)^(0+128)
  1022                           
  1023                           ;Main.c: 70: lcd_goto(0x05);
  1024  0F63  3005               	movlw	5
  1025  0F64  120A  158A  2427   	fcall	_lcd_goto
      +       120A  158A         
  1026                           
  1027                           ;Main.c: 71: lcd_bcd(3,Freq_Available());
  1028  0F69  120A  118A  26D0   	fcall	_Freq_Available
      +       120A  158A         
  1029  0F6E  1283               	bcf	3,5	;RP0=0, select bank0
  1030  0F6F  1303               	bcf	3,6	;RP1=0, select bank0
  1031  0F70  0866               	movf	?_Freq_Available,w
  1032  0F71  00A8               	movwf	?___fttol
  1033  0F72  0867               	movf	?_Freq_Available+1,w
  1034  0F73  00A9               	movwf	?___fttol+1
  1035  0F74  0868               	movf	?_Freq_Available+2,w
  1036  0F75  00AA               	movwf	?___fttol+2
  1037  0F76  120A  158A  2642   	fcall	___fttol
      +       120A  158A         
  1038  0F7B  1283               	bcf	3,5	;RP0=0, select bank0
  1039  0F7C  1303               	bcf	3,6	;RP1=0, select bank0
  1040  0F7D  0829               	movf	?___fttol+1,w
  1041  0F7E  1683               	bsf	3,5	;RP0=1, select bank1
  1042  0F7F  1303               	bcf	3,6	;RP1=0, select bank1
  1043  0F80  01C5               	clrf	(?_lcd_bcd+1)^(0+128)
  1044  0F81  07C5               	addwf	(?_lcd_bcd+1)^(0+128),f
  1045  0F82  1283               	bcf	3,5	;RP0=0, select bank0
  1046  0F83  1303               	bcf	3,6	;RP1=0, select bank0
  1047  0F84  0828               	movf	?___fttol,w
  1048  0F85  1683               	bsf	3,5	;RP0=1, select bank1
  1049  0F86  1303               	bcf	3,6	;RP1=0, select bank1
  1050  0F87  01C4               	clrf	?_lcd_bcd^(0+128)
  1051  0F88  07C4               	addwf	?_lcd_bcd^(0+128),f
  1052  0F89  3003               	movlw	3
  1053  0F8A  120A  118A  21BE   	fcall	_lcd_bcd
      +       120A  158A         
  1054                           
  1055                           ;Main.c: 73: freq_available = Freq_Available() * 10;
  1056  0F8F  120A  118A  26D0   	fcall	_Freq_Available
      +       120A  158A         
  1057  0F94  1283               	bcf	3,5	;RP0=0, select bank0
  1058  0F95  1303               	bcf	3,6	;RP1=0, select bank0
  1059  0F96  0866               	movf	?_Freq_Available,w
  1060  0F97  1683               	bsf	3,5	;RP0=1, select bank1
  1061  0F98  1303               	bcf	3,6	;RP1=0, select bank1
  1062  0F99  00A3               	movwf	(?___ftmul^(0+128)+3)
  1063  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  1064  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  1065  0F9C  0867               	movf	?_Freq_Available+1,w
  1066  0F9D  1683               	bsf	3,5	;RP0=1, select bank1
  1067  0F9E  1303               	bcf	3,6	;RP1=0, select bank1
  1068  0F9F  00A4               	movwf	((?___ftmul+1)^(0+128)+3)
  1069  0FA0  1283               	bcf	3,5	;RP0=0, select bank0
  1070  0FA1  1303               	bcf	3,6	;RP1=0, select bank0
  1071  0FA2  0868               	movf	?_Freq_Available+2,w
  1072  0FA3  1683               	bsf	3,5	;RP0=1, select bank1
  1073  0FA4  1303               	bcf	3,6	;RP1=0, select bank1
  1074  0FA5  00A5               	movwf	((?___ftmul+2)^(0+128)+3)
  1075  0FA6  3000               	movlw	0
  1076  0FA7  00A0               	movwf	?___ftmul^(0+128)
  1077  0FA8  3020               	movlw	32
  1078  0FA9  00A1               	movwf	(?___ftmul+1)^(0+128)
  1079  0FAA  3041               	movlw	65
  1080  0FAB  00A2               	movwf	(?___ftmul+2)^(0+128)
  1081  0FAC  120A  118A  25B7   	fcall	___ftmul
      +       120A  158A         
  1082  0FB1  1683               	bsf	3,5	;RP0=1, select bank1
  1083  0FB2  1303               	bcf	3,6	;RP1=0, select bank1
  1084  0FB3  0820               	movf	?___ftmul^(0+128),w
  1085  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  1086  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  1087  0FB6  00A8               	movwf	?___fttol
  1088  0FB7  1683               	bsf	3,5	;RP0=1, select bank1
  1089  0FB8  1303               	bcf	3,6	;RP1=0, select bank1
  1090  0FB9  0821               	movf	(?___ftmul+1)^(0+128),w
  1091  0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  1092  0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  1093  0FBC  00A9               	movwf	?___fttol+1
  1094  0FBD  1683               	bsf	3,5	;RP0=1, select bank1
  1095  0FBE  1303               	bcf	3,6	;RP1=0, select bank1
  1096  0FBF  0822               	movf	(?___ftmul+2)^(0+128),w
  1097  0FC0  1283               	bcf	3,5	;RP0=0, select bank0
  1098  0FC1  1303               	bcf	3,6	;RP1=0, select bank0
  1099  0FC2  00AA               	movwf	?___fttol+2
  1100  0FC3  120A  158A  2642   	fcall	___fttol
      +       120A  158A         
  1101  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  1102  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  1103  0FCA  0829               	movf	?___fttol+1,w
  1104  0FCB  1683               	bsf	3,5	;RP0=1, select bank1
  1105  0FCC  1303               	bcf	3,6	;RP1=0, select bank1
  1106  0FCD  01D8               	clrf	(Freq_Display@freq_available+1)^(0+128)
  1107  0FCE  07D8               	addwf	(Freq_Display@freq_available+1)^(0+128),f
  1108  0FCF  1283               	bcf	3,5	;RP0=0, select bank0
  1109  0FD0  1303               	bcf	3,6	;RP1=0, select bank0
  1110  0FD1  0828               	movf	?___fttol,w
  1111  0FD2  1683               	bsf	3,5	;RP0=1, select bank1
  1112  0FD3  1303               	bcf	3,6	;RP1=0, select bank1
  1113  0FD4  01D7               	clrf	Freq_Display@freq_available^(0+128)
  1114  0FD5  07D7               	addwf	Freq_Display@freq_available^(0+128),f
  1115                           
  1116                           ;Main.c: 74: lcd_goto(0x09);
  1117  0FD6  3009               	movlw	9
  1118  0FD7  120A  158A  2427   	fcall	_lcd_goto
      +       120A  158A         
  1119                           
  1120                           ;Main.c: 75: lcd_bcd(1,freq_available%10);
  1121  0FDC  300A               	movlw	10
  1122  0FDD  00F0               	movwf	?___lwmod
  1123  0FDE  3000               	movlw	0
  1124  0FDF  00F1               	movwf	?___lwmod+1
  1125  0FE0  1683               	bsf	3,5	;RP0=1, select bank1
  1126  0FE1  1303               	bcf	3,6	;RP1=0, select bank1
  1127  0FE2  0858               	movf	(Freq_Display@freq_available+1)^(0+128),w
  1128  0FE3  01F3               	clrf	?___lwmod+3
  1129  0FE4  07F3               	addwf	?___lwmod+3,f
  1130  0FE5  0857               	movf	Freq_Display@freq_available^(0+128),w
  1131  0FE6  01F2               	clrf	?___lwmod+2
  1132  0FE7  07F2               	addwf	?___lwmod+2,f
  1133  0FE8  120A  158A  246F   	fcall	___lwmod
      +       120A  158A         
  1134  0FED  0871               	movf	?___lwmod+1,w
  1135  0FEE  1683               	bsf	3,5	;RP0=1, select bank1
  1136  0FEF  1303               	bcf	3,6	;RP1=0, select bank1
  1137  0FF0  01D6               	clrf	(_Freq_Display$808+1)^(0+128)
  1138  0FF1  07D6               	addwf	(_Freq_Display$808+1)^(0+128),f
  1139  0FF2  0870               	movf	?___lwmod,w
  1140  0FF3  01D5               	clrf	_Freq_Display$808^(0+128)
  1141  0FF4  07D5               	addwf	_Freq_Display$808^(0+128),f
  1142                           
  1143                           ;Main.c: 75: lcd_bcd(1,freq_available%10);
  1144  0FF5  0856               	movf	(_Freq_Display$808+1)^(0+128),w
  1145  0FF6  01C5               	clrf	(?_lcd_bcd+1)^(0+128)
  1146  0FF7  07C5               	addwf	(?_lcd_bcd+1)^(0+128),f
  1147  0FF8  0855               	movf	_Freq_Display$808^(0+128),w
  1148  0FF9  01C4               	clrf	?_lcd_bcd^(0+128)
  1149  0FFA  07C4               	addwf	?_lcd_bcd^(0+128),f
  1150  0FFB  3001               	movlw	1
  1151  0FFC  120A  118A  21BE   	fcall	_lcd_bcd
  1152  0FFF  0008               	return
  1153  1000                     __end_of_Freq_Display:	
  1154                           
  1155                           	psect	text2
  1156  01BE                     __ptext2:	
  1157 ;; *************** function _lcd_bcd *****************
  1158 ;; Defined at:
  1159 ;;		line 275 in file "lcd.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;  uc_digit        1    wreg     unsigned char 
  1162 ;;  ui_number       2   36[BANK1 ] unsigned int 
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;  uc_digit        1   52[BANK1 ] unsigned char 
  1165 ;;  ui_decimal     10   42[BANK1 ] unsigned int [5]
  1166 ;; Return value:  Size  Location     Type
  1167 ;;		None               void
  1168 ;; Registers used:
  1169 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1170 ;; Tracked objects:
  1171 ;;		On entry : 0/0
  1172 ;;		On exit  : 0/0
  1173 ;;		Unchanged: 0/0
  1174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1175 ;;      Params:         0       0       2       0       0
  1176 ;;      Locals:         0       0      11       0       0
  1177 ;;      Temps:          0       0       4       0       0
  1178 ;;      Totals:         0       0      17       0       0
  1179 ;;Total ram usage:       17 bytes
  1180 ;; Hardware stack levels used:    1
  1181 ;; Hardware stack levels required when called:    3
  1182 ;; This function calls:
  1183 ;;		_lcd_putchar
  1184 ;;		___lwdiv
  1185 ;;		___lwmod
  1186 ;; This function is called by:
  1187 ;;		_Freq_Display
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           
  1191                           
  1192                           ;psect for function _lcd_bcd
  1193  01BE                     _lcd_bcd:	
  1194                           
  1195                           ;incstack = 0
  1196                           ; Regs used in _lcd_bcd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1197                           ;lcd_bcd@uc_digit stored from wreg
  1198  01BE  1683               	bsf	3,5	;RP0=1, select bank1
  1199  01BF  1303               	bcf	3,6	;RP1=0, select bank1
  1200  01C0  00D4               	movwf	lcd_bcd@uc_digit^(0+128)
  1201                           
  1202                           ;lcd.c: 276: unsigned int ui_decimal[5] ={ 0 };
  1203  01C1  30CA               	movlw	lcd_bcd@ui_decimal& (0+255)
  1204  01C2  0084               	movwf	4
  1205  01C3  30D9               	movlw	low lcd_bcd@F1677
  1206  01C4  00C6               	movwf	??_lcd_bcd^(0+128)
  1207  01C5  0804               	movf	4,w
  1208  01C6  00C7               	movwf	(??_lcd_bcd^(0+128)+1)
  1209  01C7  300A               	movlw	10
  1210  01C8  00C8               	movwf	(??_lcd_bcd^(0+128)+2)
  1211  01C9                     u2430:	
  1212  01C9  0846               	movf	??_lcd_bcd^(0+128),w
  1213  01CA  0084               	movwf	4
  1214  01CB  1383               	bcf	3,7	;select IRP bank1
  1215  01CC  0800               	movf	0,w
  1216  01CD  00C9               	movwf	(??_lcd_bcd^(0+128)+3)
  1217  01CE  0AC6               	incf	??_lcd_bcd^(0+128),f
  1218  01CF  0847               	movf	(??_lcd_bcd^(0+128)+1),w
  1219  01D0  0084               	movwf	4
  1220  01D1  0849               	movf	(??_lcd_bcd^(0+128)+3),w
  1221  01D2  0080               	movwf	0
  1222  01D3  0AC7               	incf	(??_lcd_bcd^(0+128)+1),f
  1223  01D4  0BC8               	decfsz	(??_lcd_bcd^(0+128)+2),f
  1224  01D5  29C9               	goto	u2430
  1225                           
  1226                           ;lcd.c: 278: ui_decimal[4] = ui_number/10000;
  1227  01D6  3010               	movlw	16
  1228  01D7  00F0               	movwf	?___lwdiv
  1229  01D8  3027               	movlw	39
  1230  01D9  00F1               	movwf	?___lwdiv+1
  1231  01DA  0845               	movf	(lcd_bcd@ui_number+1)^(0+128),w
  1232  01DB  01F3               	clrf	?___lwdiv+3
  1233  01DC  07F3               	addwf	?___lwdiv+3,f
  1234  01DD  0844               	movf	lcd_bcd@ui_number^(0+128),w
  1235  01DE  01F2               	clrf	?___lwdiv+2
  1236  01DF  07F2               	addwf	?___lwdiv+2,f
  1237  01E0  120A  158A  250E   	fcall	___lwdiv
      +       120A  118A         
  1238  01E5  0871               	movf	?___lwdiv+1,w
  1239  01E6  1683               	bsf	3,5	;RP0=1, select bank1
  1240  01E7  1303               	bcf	3,6	;RP1=0, select bank1
  1241  01E8  01D3               	clrf	((lcd_bcd@ui_decimal+1)^(0+128)+8)
  1242  01E9  07D3               	addwf	((lcd_bcd@ui_decimal+1)^(0+128)+8),f
  1243  01EA  0870               	movf	?___lwdiv,w
  1244  01EB  01D2               	clrf	(lcd_bcd@ui_decimal^(0+128)+8)
  1245  01EC  07D2               	addwf	(lcd_bcd@ui_decimal^(0+128)+8),f
  1246                           
  1247                           ;lcd.c: 279: ui_decimal[3] = ui_number%10000;
  1248  01ED  3010               	movlw	16
  1249  01EE  00F0               	movwf	?___lwmod
  1250  01EF  3027               	movlw	39
  1251  01F0  00F1               	movwf	?___lwmod+1
  1252  01F1  0845               	movf	(lcd_bcd@ui_number+1)^(0+128),w
  1253  01F2  01F3               	clrf	?___lwmod+3
  1254  01F3  07F3               	addwf	?___lwmod+3,f
  1255  01F4  0844               	movf	lcd_bcd@ui_number^(0+128),w
  1256  01F5  01F2               	clrf	?___lwmod+2
  1257  01F6  07F2               	addwf	?___lwmod+2,f
  1258  01F7  120A  158A  246F   	fcall	___lwmod
      +       120A  118A         
  1259  01FC  0871               	movf	?___lwmod+1,w
  1260  01FD  1683               	bsf	3,5	;RP0=1, select bank1
  1261  01FE  1303               	bcf	3,6	;RP1=0, select bank1
  1262  01FF  01D1               	clrf	((lcd_bcd@ui_decimal+1)^(0+128)+6)
  1263  0200  07D1               	addwf	((lcd_bcd@ui_decimal+1)^(0+128)+6),f
  1264  0201  0870               	movf	?___lwmod,w
  1265  0202  01D0               	clrf	(lcd_bcd@ui_decimal^(0+128)+6)
  1266  0203  07D0               	addwf	(lcd_bcd@ui_decimal^(0+128)+6),f
  1267                           
  1268                           ;lcd.c: 280: ui_decimal[2] = ui_decimal[3]%1000;
  1269  0204  30E8               	movlw	232
  1270  0205  00F0               	movwf	?___lwmod
  1271  0206  3003               	movlw	3
  1272  0207  00F1               	movwf	?___lwmod+1
  1273  0208  0851               	movf	((lcd_bcd@ui_decimal+1)^(0+128)+6),w
  1274  0209  01F3               	clrf	?___lwmod+3
  1275  020A  07F3               	addwf	?___lwmod+3,f
  1276  020B  0850               	movf	(lcd_bcd@ui_decimal^(0+128)+6),w
  1277  020C  01F2               	clrf	?___lwmod+2
  1278  020D  07F2               	addwf	?___lwmod+2,f
  1279  020E  120A  158A  246F   	fcall	___lwmod
      +       120A  118A         
  1280  0213  0871               	movf	?___lwmod+1,w
  1281  0214  1683               	bsf	3,5	;RP0=1, select bank1
  1282  0215  1303               	bcf	3,6	;RP1=0, select bank1
  1283  0216  01CF               	clrf	((lcd_bcd@ui_decimal+1)^(0+128)+4)
  1284  0217  07CF               	addwf	((lcd_bcd@ui_decimal+1)^(0+128)+4),f
  1285  0218  0870               	movf	?___lwmod,w
  1286  0219  01CE               	clrf	(lcd_bcd@ui_decimal^(0+128)+4)
  1287  021A  07CE               	addwf	(lcd_bcd@ui_decimal^(0+128)+4),f
  1288                           
  1289                           ;lcd.c: 281: ui_decimal[3] = ui_decimal[3]/1000;
  1290  021B  30E8               	movlw	232
  1291  021C  00F0               	movwf	?___lwdiv
  1292  021D  3003               	movlw	3
  1293  021E  00F1               	movwf	?___lwdiv+1
  1294  021F  0851               	movf	((lcd_bcd@ui_decimal+1)^(0+128)+6),w
  1295  0220  01F3               	clrf	?___lwdiv+3
  1296  0221  07F3               	addwf	?___lwdiv+3,f
  1297  0222  0850               	movf	(lcd_bcd@ui_decimal^(0+128)+6),w
  1298  0223  01F2               	clrf	?___lwdiv+2
  1299  0224  07F2               	addwf	?___lwdiv+2,f
  1300  0225  120A  158A  250E   	fcall	___lwdiv
      +       120A  118A         
  1301  022A  0871               	movf	?___lwdiv+1,w
  1302  022B  1683               	bsf	3,5	;RP0=1, select bank1
  1303  022C  1303               	bcf	3,6	;RP1=0, select bank1
  1304  022D  01D1               	clrf	((lcd_bcd@ui_decimal+1)^(0+128)+6)
  1305  022E  07D1               	addwf	((lcd_bcd@ui_decimal+1)^(0+128)+6),f
  1306  022F  0870               	movf	?___lwdiv,w
  1307  0230  01D0               	clrf	(lcd_bcd@ui_decimal^(0+128)+6)
  1308  0231  07D0               	addwf	(lcd_bcd@ui_decimal^(0+128)+6),f
  1309                           
  1310                           ;lcd.c: 282: ui_decimal[1] = ui_decimal[2]%100;
  1311  0232  3064               	movlw	100
  1312  0233  00F0               	movwf	?___lwmod
  1313  0234  3000               	movlw	0
  1314  0235  00F1               	movwf	?___lwmod+1
  1315  0236  084F               	movf	((lcd_bcd@ui_decimal+1)^(0+128)+4),w
  1316  0237  01F3               	clrf	?___lwmod+3
  1317  0238  07F3               	addwf	?___lwmod+3,f
  1318  0239  084E               	movf	(lcd_bcd@ui_decimal^(0+128)+4),w
  1319  023A  01F2               	clrf	?___lwmod+2
  1320  023B  07F2               	addwf	?___lwmod+2,f
  1321  023C  120A  158A  246F   	fcall	___lwmod
      +       120A  118A         
  1322  0241  0871               	movf	?___lwmod+1,w
  1323  0242  1683               	bsf	3,5	;RP0=1, select bank1
  1324  0243  1303               	bcf	3,6	;RP1=0, select bank1
  1325  0244  01CD               	clrf	((lcd_bcd@ui_decimal+1)^(0+128)+2)
  1326  0245  07CD               	addwf	((lcd_bcd@ui_decimal+1)^(0+128)+2),f
  1327  0246  0870               	movf	?___lwmod,w
  1328  0247  01CC               	clrf	(lcd_bcd@ui_decimal^(0+128)+2)
  1329  0248  07CC               	addwf	(lcd_bcd@ui_decimal^(0+128)+2),f
  1330                           
  1331                           ;lcd.c: 283: ui_decimal[2] = ui_decimal[2]/100;
  1332  0249  3064               	movlw	100
  1333  024A  00F0               	movwf	?___lwdiv
  1334  024B  3000               	movlw	0
  1335  024C  00F1               	movwf	?___lwdiv+1
  1336  024D  084F               	movf	((lcd_bcd@ui_decimal+1)^(0+128)+4),w
  1337  024E  01F3               	clrf	?___lwdiv+3
  1338  024F  07F3               	addwf	?___lwdiv+3,f
  1339  0250  084E               	movf	(lcd_bcd@ui_decimal^(0+128)+4),w
  1340  0251  01F2               	clrf	?___lwdiv+2
  1341  0252  07F2               	addwf	?___lwdiv+2,f
  1342  0253  120A  158A  250E   	fcall	___lwdiv
      +       120A  118A         
  1343  0258  0871               	movf	?___lwdiv+1,w
  1344  0259  1683               	bsf	3,5	;RP0=1, select bank1
  1345  025A  1303               	bcf	3,6	;RP1=0, select bank1
  1346  025B  01CF               	clrf	((lcd_bcd@ui_decimal+1)^(0+128)+4)
  1347  025C  07CF               	addwf	((lcd_bcd@ui_decimal+1)^(0+128)+4),f
  1348  025D  0870               	movf	?___lwdiv,w
  1349  025E  01CE               	clrf	(lcd_bcd@ui_decimal^(0+128)+4)
  1350  025F  07CE               	addwf	(lcd_bcd@ui_decimal^(0+128)+4),f
  1351                           
  1352                           ;lcd.c: 284: ui_decimal[0] = ui_decimal[1]%10;
  1353  0260  300A               	movlw	10
  1354  0261  00F0               	movwf	?___lwmod
  1355  0262  3000               	movlw	0
  1356  0263  00F1               	movwf	?___lwmod+1
  1357  0264  084D               	movf	((lcd_bcd@ui_decimal+1)^(0+128)+2),w
  1358  0265  01F3               	clrf	?___lwmod+3
  1359  0266  07F3               	addwf	?___lwmod+3,f
  1360  0267  084C               	movf	(lcd_bcd@ui_decimal^(0+128)+2),w
  1361  0268  01F2               	clrf	?___lwmod+2
  1362  0269  07F2               	addwf	?___lwmod+2,f
  1363  026A  120A  158A  246F   	fcall	___lwmod
      +       120A  118A         
  1364  026F  0871               	movf	?___lwmod+1,w
  1365  0270  1683               	bsf	3,5	;RP0=1, select bank1
  1366  0271  1303               	bcf	3,6	;RP1=0, select bank1
  1367  0272  01CB               	clrf	(lcd_bcd@ui_decimal+1)^(0+128)
  1368  0273  07CB               	addwf	(lcd_bcd@ui_decimal+1)^(0+128),f
  1369  0274  0870               	movf	?___lwmod,w
  1370  0275  01CA               	clrf	lcd_bcd@ui_decimal^(0+128)
  1371  0276  07CA               	addwf	lcd_bcd@ui_decimal^(0+128),f
  1372                           
  1373                           ;lcd.c: 285: ui_decimal[1] = ui_decimal[1]/10;
  1374  0277  300A               	movlw	10
  1375  0278  00F0               	movwf	?___lwdiv
  1376  0279  3000               	movlw	0
  1377  027A  00F1               	movwf	?___lwdiv+1
  1378  027B  084D               	movf	((lcd_bcd@ui_decimal+1)^(0+128)+2),w
  1379  027C  01F3               	clrf	?___lwdiv+3
  1380  027D  07F3               	addwf	?___lwdiv+3,f
  1381  027E  084C               	movf	(lcd_bcd@ui_decimal^(0+128)+2),w
  1382  027F  01F2               	clrf	?___lwdiv+2
  1383  0280  07F2               	addwf	?___lwdiv+2,f
  1384  0281  120A  158A  250E   	fcall	___lwdiv
      +       120A  118A         
  1385  0286  0871               	movf	?___lwdiv+1,w
  1386  0287  1683               	bsf	3,5	;RP0=1, select bank1
  1387  0288  1303               	bcf	3,6	;RP1=0, select bank1
  1388  0289  01CD               	clrf	((lcd_bcd@ui_decimal+1)^(0+128)+2)
  1389  028A  07CD               	addwf	((lcd_bcd@ui_decimal+1)^(0+128)+2),f
  1390  028B  0870               	movf	?___lwdiv,w
  1391  028C  01CC               	clrf	(lcd_bcd@ui_decimal^(0+128)+2)
  1392  028D  07CC               	addwf	(lcd_bcd@ui_decimal^(0+128)+2),f
  1393                           
  1394                           ;lcd.c: 287: if (uc_digit > 5) uc_digit = 5;
  1395  028E  3006               	movlw	6
  1396  028F  0254               	subwf	lcd_bcd@uc_digit^(0+128),w
  1397  0290  1C03               	skipc
  1398  0291  2A96               	goto	l2476
  1399  0292  3005               	movlw	5
  1400  0293  00C6               	movwf	??_lcd_bcd^(0+128)
  1401  0294  0846               	movf	??_lcd_bcd^(0+128),w
  1402  0295  00D4               	movwf	lcd_bcd@uc_digit^(0+128)
  1403  0296                     l2476:	
  1404                           
  1405                           ;lcd.c: 288: for( ; uc_digit > 0; uc_digit--)
  1406  0296  08D4               	movf	lcd_bcd@uc_digit^(0+128),f
  1407  0297  1903               	btfsc	3,2
  1408  0298  0008               	return
  1409                           
  1410                           ;lcd.c: 289: {
  1411                           ;lcd.c: 290: lcd_putchar(ui_decimal[uc_digit - 1] + 0x30);
  1412  0299  0854               	movf	lcd_bcd@uc_digit^(0+128),w
  1413  029A  00C6               	movwf	??_lcd_bcd^(0+128)
  1414  029B  0746               	addwf	??_lcd_bcd^(0+128),w
  1415  029C  3EFE               	addlw	254
  1416  029D  3ECA               	addlw	lcd_bcd@ui_decimal& (0+255)
  1417  029E  0084               	movwf	4
  1418  029F  1383               	bcf	3,7	;select IRP bank1
  1419  02A0  0800               	movf	0,w
  1420  02A1  3E30               	addlw	48
  1421  02A2  120A  158A  23F2   	fcall	_lcd_putchar
      +       120A  118A         
  1422  02A7  3001               	movlw	1
  1423  02A8  1683               	bsf	3,5	;RP0=1, select bank1
  1424  02A9  1303               	bcf	3,6	;RP1=0, select bank1
  1425  02AA  02D4               	subwf	lcd_bcd@uc_digit^(0+128),f
  1426  02AB  2A96               	goto	l2476
  1427  02AC                     __end_of_lcd_bcd:	
  1428                           
  1429                           	psect	text3
  1430  0C6F                     __ptext3:	
  1431 ;; *************** function ___lwmod *****************
  1432 ;; Defined at:
  1433 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\lwmod.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;  divisor         2    0[COMMON] unsigned int 
  1436 ;;  dividend        2    2[COMMON] unsigned int 
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;  counter         1    5[COMMON] unsigned char 
  1439 ;; Return value:  Size  Location     Type
  1440 ;;                  2    0[COMMON] unsigned int 
  1441 ;; Registers used:
  1442 ;;		wreg, status,2, status,0
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1448 ;;      Params:         4       0       0       0       0
  1449 ;;      Locals:         1       0       0       0       0
  1450 ;;      Temps:          1       0       0       0       0
  1451 ;;      Totals:         6       0       0       0       0
  1452 ;;Total ram usage:        6 bytes
  1453 ;; Hardware stack levels used:    1
  1454 ;; This function calls:
  1455 ;;		Nothing
  1456 ;; This function is called by:
  1457 ;;		_Freq_Display
  1458 ;;		_lcd_bcd
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           
  1463                           ;psect for function ___lwmod
  1464  0C6F                     ___lwmod:	
  1465                           
  1466                           ;incstack = 0
  1467                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1468  0C6F  0871               	movf	___lwmod@divisor+1,w
  1469  0C70  0470               	iorwf	___lwmod@divisor,w
  1470  0C71  1903               	skipnz
  1471  0C72  2C9C               	goto	l2054
  1472  0C73  01F5               	clrf	___lwmod@counter
  1473  0C74  0AF5               	incf	___lwmod@counter,f
  1474  0C75                     l2044:	
  1475  0C75  1BF1               	btfsc	___lwmod@divisor+1,7
  1476  0C76  2C83               	goto	l2046
  1477  0C77  3001               	movlw	1
  1478  0C78                     u1725:	
  1479  0C78  1003               	clrc
  1480  0C79  0DF0               	rlf	___lwmod@divisor,f
  1481  0C7A  0DF1               	rlf	___lwmod@divisor+1,f
  1482  0C7B  3EFF               	addlw	-1
  1483  0C7C  1D03               	skipz
  1484  0C7D  2C78               	goto	u1725
  1485  0C7E  3001               	movlw	1
  1486  0C7F  00F4               	movwf	??___lwmod
  1487  0C80  0874               	movf	??___lwmod,w
  1488  0C81  07F5               	addwf	___lwmod@counter,f
  1489  0C82  2C75               	goto	l2044
  1490  0C83                     l2046:	
  1491  0C83  0871               	movf	___lwmod@divisor+1,w
  1492  0C84  0273               	subwf	___lwmod@dividend+1,w
  1493  0C85  1D03               	skipz
  1494  0C86  2C89               	goto	u1745
  1495  0C87  0870               	movf	___lwmod@divisor,w
  1496  0C88  0272               	subwf	___lwmod@dividend,w
  1497  0C89                     u1745:	
  1498  0C89  1C03               	skipc
  1499  0C8A  2C91               	goto	l2050
  1500  0C8B  0870               	movf	___lwmod@divisor,w
  1501  0C8C  02F2               	subwf	___lwmod@dividend,f
  1502  0C8D  0871               	movf	___lwmod@divisor+1,w
  1503  0C8E  1C03               	skipc
  1504  0C8F  03F3               	decf	___lwmod@dividend+1,f
  1505  0C90  02F3               	subwf	___lwmod@dividend+1,f
  1506  0C91                     l2050:	
  1507  0C91  3001               	movlw	1
  1508  0C92                     u1755:	
  1509  0C92  1003               	clrc
  1510  0C93  0CF1               	rrf	___lwmod@divisor+1,f
  1511  0C94  0CF0               	rrf	___lwmod@divisor,f
  1512  0C95  3EFF               	addlw	-1
  1513  0C96  1D03               	skipz
  1514  0C97  2C92               	goto	u1755
  1515  0C98  3001               	movlw	1
  1516  0C99  02F5               	subwf	___lwmod@counter,f
  1517  0C9A  1D03               	btfss	3,2
  1518  0C9B  2C83               	goto	l2046
  1519  0C9C                     l2054:	
  1520  0C9C  0873               	movf	___lwmod@dividend+1,w
  1521  0C9D  01F1               	clrf	?___lwmod+1
  1522  0C9E  07F1               	addwf	?___lwmod+1,f
  1523  0C9F  0872               	movf	___lwmod@dividend,w
  1524  0CA0  01F0               	clrf	?___lwmod
  1525  0CA1  07F0               	addwf	?___lwmod,f
  1526  0CA2  0008               	return
  1527  0CA3                     __end_of___lwmod:	
  1528                           
  1529                           	psect	text4
  1530  0D0E                     __ptext4:	
  1531 ;; *************** function ___lwdiv *****************
  1532 ;; Defined at:
  1533 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\lwdiv.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;  divisor         2    0[COMMON] unsigned int 
  1536 ;;  dividend        2    2[COMMON] unsigned int 
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;  quotient        2    5[COMMON] unsigned int 
  1539 ;;  counter         1    7[COMMON] unsigned char 
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  2    0[COMMON] unsigned int 
  1542 ;; Registers used:
  1543 ;;		wreg, status,2, status,0
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1549 ;;      Params:         4       0       0       0       0
  1550 ;;      Locals:         3       0       0       0       0
  1551 ;;      Temps:          1       0       0       0       0
  1552 ;;      Totals:         8       0       0       0       0
  1553 ;;Total ram usage:        8 bytes
  1554 ;; Hardware stack levels used:    1
  1555 ;; This function calls:
  1556 ;;		Nothing
  1557 ;; This function is called by:
  1558 ;;		_lcd_bcd
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           
  1563                           ;psect for function ___lwdiv
  1564  0D0E                     ___lwdiv:	
  1565                           
  1566                           ;incstack = 0
  1567                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1568  0D0E  01F5               	clrf	___lwdiv@quotient
  1569  0D0F  01F6               	clrf	___lwdiv@quotient+1
  1570  0D10  0871               	movf	___lwdiv@divisor+1,w
  1571  0D11  0470               	iorwf	___lwdiv@divisor,w
  1572  0D12  1903               	skipnz
  1573  0D13  2D45               	goto	l2032
  1574  0D14  01F7               	clrf	___lwdiv@counter
  1575  0D15  0AF7               	incf	___lwdiv@counter,f
  1576  0D16                     l2020:	
  1577  0D16  1BF1               	btfsc	___lwdiv@divisor+1,7
  1578  0D17  2D24               	goto	l2022
  1579  0D18  3001               	movlw	1
  1580  0D19                     u1655:	
  1581  0D19  1003               	clrc
  1582  0D1A  0DF0               	rlf	___lwdiv@divisor,f
  1583  0D1B  0DF1               	rlf	___lwdiv@divisor+1,f
  1584  0D1C  3EFF               	addlw	-1
  1585  0D1D  1D03               	skipz
  1586  0D1E  2D19               	goto	u1655
  1587  0D1F  3001               	movlw	1
  1588  0D20  00F4               	movwf	??___lwdiv
  1589  0D21  0874               	movf	??___lwdiv,w
  1590  0D22  07F7               	addwf	___lwdiv@counter,f
  1591  0D23  2D16               	goto	l2020
  1592  0D24                     l2022:	
  1593  0D24  3001               	movlw	1
  1594  0D25                     u1675:	
  1595  0D25  1003               	clrc
  1596  0D26  0DF5               	rlf	___lwdiv@quotient,f
  1597  0D27  0DF6               	rlf	___lwdiv@quotient+1,f
  1598  0D28  3EFF               	addlw	-1
  1599  0D29  1D03               	skipz
  1600  0D2A  2D25               	goto	u1675
  1601  0D2B  0871               	movf	___lwdiv@divisor+1,w
  1602  0D2C  0273               	subwf	___lwdiv@dividend+1,w
  1603  0D2D  1D03               	skipz
  1604  0D2E  2D31               	goto	u1685
  1605  0D2F  0870               	movf	___lwdiv@divisor,w
  1606  0D30  0272               	subwf	___lwdiv@dividend,w
  1607  0D31                     u1685:	
  1608  0D31  1C03               	skipc
  1609  0D32  2D3A               	goto	l2028
  1610  0D33  0870               	movf	___lwdiv@divisor,w
  1611  0D34  02F2               	subwf	___lwdiv@dividend,f
  1612  0D35  0871               	movf	___lwdiv@divisor+1,w
  1613  0D36  1C03               	skipc
  1614  0D37  03F3               	decf	___lwdiv@dividend+1,f
  1615  0D38  02F3               	subwf	___lwdiv@dividend+1,f
  1616  0D39  1475               	bsf	___lwdiv@quotient,0
  1617  0D3A                     l2028:	
  1618  0D3A  3001               	movlw	1
  1619  0D3B                     u1695:	
  1620  0D3B  1003               	clrc
  1621  0D3C  0CF1               	rrf	___lwdiv@divisor+1,f
  1622  0D3D  0CF0               	rrf	___lwdiv@divisor,f
  1623  0D3E  3EFF               	addlw	-1
  1624  0D3F  1D03               	skipz
  1625  0D40  2D3B               	goto	u1695
  1626  0D41  3001               	movlw	1
  1627  0D42  02F7               	subwf	___lwdiv@counter,f
  1628  0D43  1D03               	btfss	3,2
  1629  0D44  2D24               	goto	l2022
  1630  0D45                     l2032:	
  1631  0D45  0876               	movf	___lwdiv@quotient+1,w
  1632  0D46  01F1               	clrf	?___lwdiv+1
  1633  0D47  07F1               	addwf	?___lwdiv+1,f
  1634  0D48  0875               	movf	___lwdiv@quotient,w
  1635  0D49  01F0               	clrf	?___lwdiv
  1636  0D4A  07F0               	addwf	?___lwdiv,f
  1637  0D4B  0008               	return
  1638  0D4C                     __end_of___lwdiv:	
  1639                           
  1640                           	psect	text5
  1641  0C27                     __ptext5:	
  1642 ;; *************** function _lcd_goto *****************
  1643 ;; Defined at:
  1644 ;;		line 200 in file "lcd.c"
  1645 ;; Parameters:    Size  Location     Type
  1646 ;;  uc_position     1    wreg     unsigned char 
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;  uc_position     1    6[COMMON] unsigned char 
  1649 ;; Return value:  Size  Location     Type
  1650 ;;		None               void
  1651 ;; Registers used:
  1652 ;;		wreg, status,2, status,0, pclath, cstack
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1658 ;;      Params:         0       0       0       0       0
  1659 ;;      Locals:         1       0       0       0       0
  1660 ;;      Temps:          1       0       0       0       0
  1661 ;;      Totals:         2       0       0       0       0
  1662 ;;Total ram usage:        2 bytes
  1663 ;; Hardware stack levels used:    1
  1664 ;; Hardware stack levels required when called:    2
  1665 ;; This function calls:
  1666 ;;		_send_lcd_data
  1667 ;; This function is called by:
  1668 ;;		_Freq_Display
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           
  1673                           ;psect for function _lcd_goto
  1674  0C27                     _lcd_goto:	
  1675                           
  1676                           ;incstack = 0
  1677                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  1678                           ;lcd_goto@uc_position stored from wreg
  1679  0C27  00F6               	movwf	lcd_goto@uc_position
  1680                           
  1681                           ;lcd.c: 202: send_lcd_data(0, 0b10000000 | uc_position);
  1682  0C28  0876               	movf	lcd_goto@uc_position,w
  1683  0C29  3880               	iorlw	128
  1684  0C2A  00F5               	movwf	??_lcd_goto
  1685  0C2B  0875               	movf	??_lcd_goto,w
  1686  0C2C  00F1               	movwf	?_send_lcd_data
  1687  0C2D  3000               	movlw	0
  1688  0C2E  120A  158A  24A3   	fcall	_send_lcd_data
  1689  0C31  0008               	return
  1690  0C32                     __end_of_lcd_goto:	
  1691                           
  1692                           	psect	text6
  1693  03AD                     __ptext6:	
  1694 ;; *************** function _SearchDown *****************
  1695 ;; Defined at:
  1696 ;;		line 154 in file "Main.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;		None
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;  frequency       3   39[BANK1 ] unsigned char 
  1701 ;;  frequencyB      2   44[BANK1 ] unsigned int 
  1702 ;;  frequencyL      1   43[BANK1 ] unsigned char 
  1703 ;;  frequencyH      1   42[BANK1 ] unsigned char 
  1704 ;; Return value:  Size  Location     Type
  1705 ;;		None               void
  1706 ;; Registers used:
  1707 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1713 ;;      Params:         0       0       0       0       0
  1714 ;;      Locals:         0       0      10       0       0
  1715 ;;      Temps:          1       0       0       0       0
  1716 ;;      Totals:         1       0      10       0       0
  1717 ;;Total ram usage:       11 bytes
  1718 ;; Hardware stack levels used:    1
  1719 ;; Hardware stack levels required when called:    3
  1720 ;; This function calls:
  1721 ;;		_Freq_Available
  1722 ;;		_I2C_Start
  1723 ;;		_I2C_Write_Byte
  1724 ;;		_I2C_Send_ACK
  1725 ;;		_I2C_Send_NACK
  1726 ;;		_I2C_Stop
  1727 ;;		___ftadd
  1728 ;;		___ftdiv
  1729 ;;		___ftmul
  1730 ;;		___fttol
  1731 ;; This function is called by:
  1732 ;;		_main
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736                           
  1737                           ;psect for function _SearchDown
  1738  03AD                     _SearchDown:	
  1739                           
  1740                           ;Main.c: 155: double frequency = 0;
  1741                           
  1742                           ;incstack = 0
  1743                           ; Regs used in _SearchDown: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1744  03AD  3000               	movlw	0
  1745  03AE  1683               	bsf	3,5	;RP0=1, select bank1
  1746  03AF  1303               	bcf	3,6	;RP1=0, select bank1
  1747  03B0  00C7               	movwf	SearchDown@frequency^(0+128)
  1748  03B1  3000               	movlw	0
  1749  03B2  00C8               	movwf	(SearchDown@frequency+1)^(0+128)
  1750  03B3  3000               	movlw	0
  1751  03B4  00C9               	movwf	(SearchDown@frequency+2)^(0+128)
  1752                           
  1753                           ;Main.c: 157: frequency = Freq_Available();
  1754  03B5  120A  118A  26D0   	fcall	_Freq_Available
      +       120A  118A         
  1755  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  1756  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  1757  03BC  0866               	movf	?_Freq_Available,w
  1758  03BD  1683               	bsf	3,5	;RP0=1, select bank1
  1759  03BE  1303               	bcf	3,6	;RP1=0, select bank1
  1760  03BF  00C7               	movwf	SearchDown@frequency^(0+128)
  1761  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  1762  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  1763  03C2  0867               	movf	?_Freq_Available+1,w
  1764  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  1765  03C4  1303               	bcf	3,6	;RP1=0, select bank1
  1766  03C5  00C8               	movwf	(SearchDown@frequency+1)^(0+128)
  1767  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  1768  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  1769  03C8  0868               	movf	?_Freq_Available+2,w
  1770  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  1771  03CA  1303               	bcf	3,6	;RP1=0, select bank1
  1772  03CB  00C9               	movwf	(SearchDown@frequency+2)^(0+128)
  1773                           
  1774                           ;Main.c: 159: unsigned char frequencyH=0;
  1775  03CC  01CA               	clrf	SearchDown@frequencyH^(0+128)
  1776                           
  1777                           ;Main.c: 160: unsigned char frequencyL=0;
  1778  03CD  01CB               	clrf	SearchDown@frequencyL^(0+128)
  1779                           
  1780                           ;Main.c: 161: unsigned int frequencyB;
  1781                           ;Main.c: 163: frequencyB = (4 * (frequency * 1000000 + 225000)) / 32768 + 1;
  1782  03CE  0847               	movf	SearchDown@frequency^(0+128),w
  1783  03CF  00A3               	movwf	(?___ftmul^(0+128)+3)
  1784  03D0  0848               	movf	(SearchDown@frequency+1)^(0+128),w
  1785  03D1  00A4               	movwf	((?___ftmul+1)^(0+128)+3)
  1786  03D2  0849               	movf	(SearchDown@frequency+2)^(0+128),w
  1787  03D3  00A5               	movwf	((?___ftmul+2)^(0+128)+3)
  1788  03D4  3024               	movlw	36
  1789  03D5  00A0               	movwf	?___ftmul^(0+128)
  1790  03D6  3074               	movlw	116
  1791  03D7  00A1               	movwf	(?___ftmul+1)^(0+128)
  1792  03D8  3049               	movlw	73
  1793  03D9  00A2               	movwf	(?___ftmul+2)^(0+128)
  1794  03DA  120A  118A  25B7   	fcall	___ftmul
      +       120A  118A         
  1795  03DF  1683               	bsf	3,5	;RP0=1, select bank1
  1796  03E0  1303               	bcf	3,6	;RP1=0, select bank1
  1797  03E1  0820               	movf	?___ftmul^(0+128),w
  1798  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  1799  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  1800  03E4  00BF               	movwf	?___ftadd+3
  1801  03E5  1683               	bsf	3,5	;RP0=1, select bank1
  1802  03E6  1303               	bcf	3,6	;RP1=0, select bank1
  1803  03E7  0821               	movf	(?___ftmul+1)^(0+128),w
  1804  03E8  1283               	bcf	3,5	;RP0=0, select bank0
  1805  03E9  1303               	bcf	3,6	;RP1=0, select bank0
  1806  03EA  00C0               	movwf	?___ftadd+4
  1807  03EB  1683               	bsf	3,5	;RP0=1, select bank1
  1808  03EC  1303               	bcf	3,6	;RP1=0, select bank1
  1809  03ED  0822               	movf	(?___ftmul+2)^(0+128),w
  1810  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  1811  03EF  1303               	bcf	3,6	;RP1=0, select bank0
  1812  03F0  00C1               	movwf	?___ftadd+5
  1813  03F1  30BA               	movlw	186
  1814  03F2  00BC               	movwf	?___ftadd
  1815  03F3  305B               	movlw	91
  1816  03F4  00BD               	movwf	?___ftadd+1
  1817  03F5  3048               	movlw	72
  1818  03F6  00BE               	movwf	?___ftadd+2
  1819  03F7  120A  118A  24AE   	fcall	___ftadd
      +       120A  118A         
  1820  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  1821  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  1822  03FE  083C               	movf	?___ftadd,w
  1823  03FF  1683               	bsf	3,5	;RP0=1, select bank1
  1824  0400  1303               	bcf	3,6	;RP1=0, select bank1
  1825  0401  00C4               	movwf	_SearchDown$811^(0+128)
  1826  0402  1283               	bcf	3,5	;RP0=0, select bank0
  1827  0403  1303               	bcf	3,6	;RP1=0, select bank0
  1828  0404  083D               	movf	?___ftadd+1,w
  1829  0405  1683               	bsf	3,5	;RP0=1, select bank1
  1830  0406  1303               	bcf	3,6	;RP1=0, select bank1
  1831  0407  00C5               	movwf	(_SearchDown$811+1)^(0+128)
  1832  0408  1283               	bcf	3,5	;RP0=0, select bank0
  1833  0409  1303               	bcf	3,6	;RP1=0, select bank0
  1834  040A  083E               	movf	?___ftadd+2,w
  1835  040B  1683               	bsf	3,5	;RP0=1, select bank1
  1836  040C  1303               	bcf	3,6	;RP1=0, select bank1
  1837  040D  00C6               	movwf	(_SearchDown$811+2)^(0+128)
  1838                           
  1839                           ;Main.c: 161: unsigned int frequencyB;
  1840                           ;Main.c: 163: frequencyB = (4 * (frequency * 1000000 + 225000)) / 32768 + 1;
  1841  040E  0844               	movf	_SearchDown$811^(0+128),w
  1842  040F  00A3               	movwf	(?___ftmul^(0+128)+3)
  1843  0410  0845               	movf	(_SearchDown$811+1)^(0+128),w
  1844  0411  00A4               	movwf	((?___ftmul+1)^(0+128)+3)
  1845  0412  0846               	movf	(_SearchDown$811+2)^(0+128),w
  1846  0413  00A5               	movwf	((?___ftmul+2)^(0+128)+3)
  1847  0414  3000               	movlw	0
  1848  0415  00A0               	movwf	?___ftmul^(0+128)
  1849  0416  3080               	movlw	128
  1850  0417  00A1               	movwf	(?___ftmul+1)^(0+128)
  1851  0418  3040               	movlw	64
  1852  0419  00A2               	movwf	(?___ftmul+2)^(0+128)
  1853  041A  120A  118A  25B7   	fcall	___ftmul
      +       120A  118A         
  1854  041F  1683               	bsf	3,5	;RP0=1, select bank1
  1855  0420  1303               	bcf	3,6	;RP1=0, select bank1
  1856  0421  0820               	movf	?___ftmul^(0+128),w
  1857  0422  1283               	bcf	3,5	;RP0=0, select bank0
  1858  0423  1303               	bcf	3,6	;RP1=0, select bank0
  1859  0424  00CF               	movwf	?___ftdiv+3
  1860  0425  1683               	bsf	3,5	;RP0=1, select bank1
  1861  0426  1303               	bcf	3,6	;RP1=0, select bank1
  1862  0427  0821               	movf	(?___ftmul+1)^(0+128),w
  1863  0428  1283               	bcf	3,5	;RP0=0, select bank0
  1864  0429  1303               	bcf	3,6	;RP1=0, select bank0
  1865  042A  00D0               	movwf	?___ftdiv+4
  1866  042B  1683               	bsf	3,5	;RP0=1, select bank1
  1867  042C  1303               	bcf	3,6	;RP1=0, select bank1
  1868  042D  0822               	movf	(?___ftmul+2)^(0+128),w
  1869  042E  1283               	bcf	3,5	;RP0=0, select bank0
  1870  042F  1303               	bcf	3,6	;RP1=0, select bank0
  1871  0430  00D1               	movwf	?___ftdiv+5
  1872  0431  3000               	movlw	0
  1873  0432  00CC               	movwf	?___ftdiv
  1874  0433  3000               	movlw	0
  1875  0434  00CD               	movwf	?___ftdiv+1
  1876  0435  3047               	movlw	71
  1877  0436  00CE               	movwf	?___ftdiv+2
  1878  0437  120A  118A  202A   	fcall	___ftdiv
      +       120A  118A         
  1879  043C  1283               	bcf	3,5	;RP0=0, select bank0
  1880  043D  1303               	bcf	3,6	;RP1=0, select bank0
  1881  043E  084C               	movf	?___ftdiv,w
  1882  043F  00BF               	movwf	?___ftadd+3
  1883  0440  084D               	movf	?___ftdiv+1,w
  1884  0441  00C0               	movwf	?___ftadd+4
  1885  0442  084E               	movf	?___ftdiv+2,w
  1886  0443  00C1               	movwf	?___ftadd+5
  1887  0444  3000               	movlw	0
  1888  0445  00BC               	movwf	?___ftadd
  1889  0446  3080               	movlw	128
  1890  0447  00BD               	movwf	?___ftadd+1
  1891  0448  303F               	movlw	63
  1892  0449  00BE               	movwf	?___ftadd+2
  1893  044A  120A  118A  24AE   	fcall	___ftadd
      +       120A  118A         
  1894  044F  1283               	bcf	3,5	;RP0=0, select bank0
  1895  0450  1303               	bcf	3,6	;RP1=0, select bank0
  1896  0451  083C               	movf	?___ftadd,w
  1897  0452  00A8               	movwf	?___fttol
  1898  0453  083D               	movf	?___ftadd+1,w
  1899  0454  00A9               	movwf	?___fttol+1
  1900  0455  083E               	movf	?___ftadd+2,w
  1901  0456  00AA               	movwf	?___fttol+2
  1902  0457  120A  158A  2642   	fcall	___fttol
      +       120A  118A         
  1903  045C  1283               	bcf	3,5	;RP0=0, select bank0
  1904  045D  1303               	bcf	3,6	;RP1=0, select bank0
  1905  045E  0829               	movf	?___fttol+1,w
  1906  045F  1683               	bsf	3,5	;RP0=1, select bank1
  1907  0460  1303               	bcf	3,6	;RP1=0, select bank1
  1908  0461  01CD               	clrf	(SearchDown@frequencyB+1)^(0+128)
  1909  0462  07CD               	addwf	(SearchDown@frequencyB+1)^(0+128),f
  1910  0463  1283               	bcf	3,5	;RP0=0, select bank0
  1911  0464  1303               	bcf	3,6	;RP1=0, select bank0
  1912  0465  0828               	movf	?___fttol,w
  1913  0466  1683               	bsf	3,5	;RP0=1, select bank1
  1914  0467  1303               	bcf	3,6	;RP1=0, select bank1
  1915  0468  01CC               	clrf	SearchDown@frequencyB^(0+128)
  1916  0469  07CC               	addwf	SearchDown@frequencyB^(0+128),f
  1917                           
  1918                           ;Main.c: 164: frequencyH = frequencyB >> 8;
  1919  046A  084D               	movf	(SearchDown@frequencyB+1)^(0+128),w
  1920  046B  00FD               	movwf	??_SearchDown
  1921  046C  087D               	movf	??_SearchDown,w
  1922  046D  00CA               	movwf	SearchDown@frequencyH^(0+128)
  1923                           
  1924                           ;Main.c: 165: frequencyL = frequencyB & 0xff;
  1925  046E  084C               	movf	SearchDown@frequencyB^(0+128),w
  1926  046F  00FD               	movwf	??_SearchDown
  1927  0470  087D               	movf	??_SearchDown,w
  1928  0471  00CB               	movwf	SearchDown@frequencyL^(0+128)
  1929                           
  1930                           ;Main.c: 167: I2C_Start();
  1931  0472  120A  158A  23C8   	fcall	_I2C_Start
      +       120A  118A         
  1932                           
  1933                           ;Main.c: 168: I2C_Write_Byte(0xC0);
  1934  0477  30C0               	movlw	192
  1935  0478  120A  158A  2406   	fcall	_I2C_Write_Byte
      +       120A  118A         
  1936                           
  1937                           ;Main.c: 169: I2C_Send_ACK();
  1938  047D  120A  158A  2432   	fcall	_I2C_Send_ACK
      +       120A  118A         
  1939                           
  1940                           ;Main.c: 170: I2C_Write_Byte(frequencyH + 0x40);
  1941  0482  1683               	bsf	3,5	;RP0=1, select bank1
  1942  0483  1303               	bcf	3,6	;RP1=0, select bank1
  1943  0484  084A               	movf	SearchDown@frequencyH^(0+128),w
  1944  0485  3E40               	addlw	64
  1945  0486  120A  158A  2406   	fcall	_I2C_Write_Byte
      +       120A  118A         
  1946                           
  1947                           ;Main.c: 171: I2C_Write_Byte(frequencyL);
  1948  048B  1683               	bsf	3,5	;RP0=1, select bank1
  1949  048C  1303               	bcf	3,6	;RP1=0, select bank1
  1950  048D  084B               	movf	SearchDown@frequencyL^(0+128),w
  1951  048E  120A  158A  2406   	fcall	_I2C_Write_Byte
      +       120A  118A         
  1952                           
  1953                           ;Main.c: 172: I2C_Write_Byte(0x50);
  1954  0493  3050               	movlw	80
  1955  0494  120A  158A  2406   	fcall	_I2C_Write_Byte
      +       120A  118A         
  1956                           
  1957                           ;Main.c: 173: I2C_Write_Byte(0x1F);
  1958  0499  301F               	movlw	31
  1959  049A  120A  158A  2406   	fcall	_I2C_Write_Byte
      +       120A  118A         
  1960                           
  1961                           ;Main.c: 174: I2C_Write_Byte(0x00);
  1962  049F  3000               	movlw	0
  1963  04A0  120A  158A  2406   	fcall	_I2C_Write_Byte
      +       120A  118A         
  1964                           
  1965                           ;Main.c: 175: I2C_Send_NACK();
  1966  04A5  120A  158A  23E8   	fcall	_I2C_Send_NACK
      +       120A  118A         
  1967                           
  1968                           ;Main.c: 176: I2C_Stop();
  1969  04AA  120A  158A  23C1   	fcall	_I2C_Stop
  1970  04AD  0008               	return
  1971  04AE                     __end_of_SearchDown:	
  1972                           
  1973                           	psect	text7
  1974  06D0                     __ptext7:	
  1975 ;; *************** function _Freq_Available *****************
  1976 ;; Defined at:
  1977 ;;		line 104 in file "Main.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;		None
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;  buffer          5   27[BANK1 ] unsigned char [5]
  1982 ;;  freq_availab    3   32[BANK1 ] unsigned char [5]
  1983 ;;  i               1   35[BANK1 ] unsigned char 
  1984 ;; Return value:  Size  Location     Type
  1985 ;;                  3   70[BANK0 ] unsigned char 
  1986 ;; Registers used:
  1987 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1988 ;; Tracked objects:
  1989 ;;		On entry : 0/0
  1990 ;;		On exit  : 0/0
  1991 ;;		Unchanged: 0/0
  1992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1993 ;;      Params:         0       3       0       0       0
  1994 ;;      Locals:         0       0       9       0       0
  1995 ;;      Temps:          0       0       9       0       0
  1996 ;;      Totals:         0       3      18       0       0
  1997 ;;Total ram usage:       21 bytes
  1998 ;; Hardware stack levels used:    1
  1999 ;; Hardware stack levels required when called:    2
  2000 ;; This function calls:
  2001 ;;		_i2c_initialize
  2002 ;;		_I2C_Start
  2003 ;;		_I2C_Write_Byte
  2004 ;;		_I2C_Send_ACK
  2005 ;;		_I2C_Send_NACK
  2006 ;;		_I2C_Stop
  2007 ;;		_I2C_Read_Byte
  2008 ;;		___aldiv
  2009 ;;		___altoft
  2010 ;;		___ftdiv
  2011 ;; This function is called by:
  2012 ;;		_Freq_Display
  2013 ;;		_SearchUp
  2014 ;;		_SearchDown
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018                           
  2019                           ;psect for function _Freq_Available
  2020  06D0                     _Freq_Available:	
  2021                           
  2022                           ;Main.c: 105: unsigned char buffer[5] , i;
  2023                           ;Main.c: 106: double freq_available = 0;
  2024                           
  2025                           ;incstack = 0
  2026                           ; Regs used in _Freq_Available: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2027  06D0  3000               	movlw	0
  2028  06D1  1683               	bsf	3,5	;RP0=1, select bank1
  2029  06D2  1303               	bcf	3,6	;RP1=0, select bank1
  2030  06D3  00C0               	movwf	Freq_Available@freq_available^(0+128)
  2031  06D4  3000               	movlw	0
  2032  06D5  00C1               	movwf	(Freq_Available@freq_available+1)^(0+128)
  2033  06D6  3000               	movlw	0
  2034  06D7  00C2               	movwf	(Freq_Available@freq_available+2)^(0+128)
  2035                           
  2036                           ;Main.c: 108: i2c_initialize();
  2037  06D8  120A  118A  201A   	fcall	_i2c_initialize
      +       120A  118A         
  2038                           
  2039                           ;Main.c: 110: I2C_Start();
  2040  06DD  120A  158A  23C8   	fcall	_I2C_Start
      +       120A  118A         
  2041                           
  2042                           ;Main.c: 111: I2C_Write_Byte(0xC1);
  2043  06E2  30C1               	movlw	193
  2044  06E3  120A  158A  2406   	fcall	_I2C_Write_Byte
      +       120A  118A         
  2045                           
  2046                           ;Main.c: 112: I2C_Send_ACK();
  2047  06E8  120A  158A  2432   	fcall	_I2C_Send_ACK
      +       120A  118A         
  2048                           
  2049                           ;Main.c: 113: for (i=0; i<5; i++) {
  2050  06ED  1683               	bsf	3,5	;RP0=1, select bank1
  2051  06EE  1303               	bcf	3,6	;RP1=0, select bank1
  2052  06EF  01C3               	clrf	Freq_Available@i^(0+128)
  2053  06F0  3005               	movlw	5
  2054  06F1  0243               	subwf	Freq_Available@i^(0+128),w
  2055  06F2  1803               	btfsc	3,0
  2056  06F3  2F11               	goto	l4144
  2057  06F4                     l4136:	
  2058                           
  2059                           ;Main.c: 114: buffer[i]= I2C_Read_Byte();
  2060  06F4  120A  158A  23FC   	fcall	_I2C_Read_Byte
      +       120A  118A         
  2061  06F9  1683               	bsf	3,5	;RP0=1, select bank1
  2062  06FA  1303               	bcf	3,6	;RP1=0, select bank1
  2063  06FB  00B2               	movwf	??_Freq_Available^(0+128)
  2064  06FC  0843               	movf	Freq_Available@i^(0+128),w
  2065  06FD  3EBB               	addlw	Freq_Available@buffer& (0+255)
  2066  06FE  0084               	movwf	4
  2067  06FF  0832               	movf	??_Freq_Available^(0+128),w
  2068  0700  1383               	bcf	3,7	;select IRP bank1
  2069  0701  0080               	movwf	0
  2070                           
  2071                           ;Main.c: 115: I2C_Send_ACK();
  2072  0702  120A  158A  2432   	fcall	_I2C_Send_ACK
      +       120A  118A         
  2073  0707  3001               	movlw	1
  2074  0708  1683               	bsf	3,5	;RP0=1, select bank1
  2075  0709  1303               	bcf	3,6	;RP1=0, select bank1
  2076  070A  00B2               	movwf	??_Freq_Available^(0+128)
  2077  070B  0832               	movf	??_Freq_Available^(0+128),w
  2078  070C  07C3               	addwf	Freq_Available@i^(0+128),f
  2079  070D  3005               	movlw	5
  2080  070E  0243               	subwf	Freq_Available@i^(0+128),w
  2081  070F  1C03               	skipc
  2082  0710  2EF4               	goto	l4136
  2083  0711                     l4144:	
  2084                           
  2085                           ;Main.c: 116: }
  2086                           ;Main.c: 117: I2C_Send_NACK();
  2087  0711  120A  158A  23E8   	fcall	_I2C_Send_NACK
      +       120A  118A         
  2088                           
  2089                           ;Main.c: 118: I2C_Stop();
  2090  0716  120A  158A  23C1   	fcall	_I2C_Stop
      +       120A  118A         
  2091                           
  2092                           ;Main.c: 120: freq_available = (((buffer[0]&0x3F)<<8)+buffer[5])*32768/4-225000;
  2093  071B  3018               	movlw	24
  2094  071C  1683               	bsf	3,5	;RP0=1, select bank1
  2095  071D  1303               	bcf	3,6	;RP1=0, select bank1
  2096  071E  00B2               	movwf	??_Freq_Available^(0+128)
  2097  071F  3091               	movlw	145
  2098  0720  00B3               	movwf	(??_Freq_Available^(0+128)+1)
  2099  0721  30FC               	movlw	252
  2100  0722  00B4               	movwf	(??_Freq_Available^(0+128)+2)
  2101  0723  30FF               	movlw	255
  2102  0724  00B5               	movwf	(??_Freq_Available^(0+128)+3)
  2103  0725  3000               	movlw	0
  2104  0726  1283               	bcf	3,5	;RP0=0, select bank0
  2105  0727  1303               	bcf	3,6	;RP1=0, select bank0
  2106  0728  00A3               	movwf	?___aldiv+3
  2107  0729  3000               	movlw	0
  2108  072A  00A2               	movwf	?___aldiv+2
  2109  072B  3000               	movlw	0
  2110  072C  00A1               	movwf	?___aldiv+1
  2111  072D  3004               	movlw	4
  2112  072E  00A0               	movwf	?___aldiv
  2113  072F  303F               	movlw	63
  2114  0730  1683               	bsf	3,5	;RP0=1, select bank1
  2115  0731  1303               	bcf	3,6	;RP1=0, select bank1
  2116  0732  053B               	andwf	Freq_Available@buffer^(0+128),w
  2117  0733  00B6               	movwf	(??_Freq_Available+4)^(0+128)
  2118  0734  0840               	movf	(Freq_Available@buffer^(0+128)+5),w
  2119  0735  00B7               	movwf	(??_Freq_Available+5)^(0+128)
  2120  0736  0836               	movf	(??_Freq_Available+4)^(0+128),w
  2121  0737  00B8               	movwf	((??_Freq_Available+5)^(0+128)+1)
  2122  0738  3000               	movlw	0
  2123  0739  1BB8               	btfsc	((??_Freq_Available+5)^(0+128)+1),7
  2124  073A  30FF               	movlw	255
  2125  073B  00B9               	movwf	((??_Freq_Available+5)^(0+128)+2)
  2126  073C  00BA               	movwf	((??_Freq_Available+5)^(0+128)+3)
  2127  073D  300F               	movlw	15
  2128  073E                     u5095:	
  2129  073E  1003               	clrc
  2130  073F  0DB7               	rlf	(??_Freq_Available+5)^(0+128),f
  2131  0740  0DB8               	rlf	((??_Freq_Available+5)^(0+128)+1),f
  2132  0741  0DB9               	rlf	((??_Freq_Available+5)^(0+128)+2),f
  2133  0742  0DBA               	rlf	((??_Freq_Available+5)^(0+128)+3),f
  2134  0743  3EFF               	addlw	-1
  2135  0744  1D03               	skipz
  2136  0745  2F3E               	goto	u5095
  2137  0746  083A               	movf	(??_Freq_Available+8)^(0+128),w
  2138  0747  1283               	bcf	3,5	;RP0=0, select bank0
  2139  0748  1303               	bcf	3,6	;RP1=0, select bank0
  2140  0749  00A7               	movwf	?___aldiv+7
  2141  074A  1683               	bsf	3,5	;RP0=1, select bank1
  2142  074B  1303               	bcf	3,6	;RP1=0, select bank1
  2143  074C  0839               	movf	(??_Freq_Available+7)^(0+128),w
  2144  074D  1283               	bcf	3,5	;RP0=0, select bank0
  2145  074E  1303               	bcf	3,6	;RP1=0, select bank0
  2146  074F  00A6               	movwf	?___aldiv+6
  2147  0750  1683               	bsf	3,5	;RP0=1, select bank1
  2148  0751  1303               	bcf	3,6	;RP1=0, select bank1
  2149  0752  0838               	movf	(??_Freq_Available+6)^(0+128),w
  2150  0753  1283               	bcf	3,5	;RP0=0, select bank0
  2151  0754  1303               	bcf	3,6	;RP1=0, select bank0
  2152  0755  00A5               	movwf	?___aldiv+5
  2153  0756  1683               	bsf	3,5	;RP0=1, select bank1
  2154  0757  1303               	bcf	3,6	;RP1=0, select bank1
  2155  0758  0837               	movf	(??_Freq_Available+5)^(0+128),w
  2156  0759  1283               	bcf	3,5	;RP0=0, select bank0
  2157  075A  1303               	bcf	3,6	;RP1=0, select bank0
  2158  075B  00A4               	movwf	?___aldiv+4
  2159  075C  120A  158A  26D0   	fcall	___aldiv
      +       120A  118A         
  2160  0761  1283               	bcf	3,5	;RP0=0, select bank0
  2161  0762  1303               	bcf	3,6	;RP1=0, select bank0
  2162  0763  0820               	movf	?___aldiv,w
  2163  0764  1683               	bsf	3,5	;RP0=1, select bank1
  2164  0765  1303               	bcf	3,6	;RP1=0, select bank1
  2165  0766  07B2               	addwf	??_Freq_Available^(0+128),f
  2166  0767  1283               	bcf	3,5	;RP0=0, select bank0
  2167  0768  1303               	bcf	3,6	;RP1=0, select bank0
  2168  0769  0821               	movf	?___aldiv+1,w
  2169  076A  1803               	skipnc
  2170  076B  0F21               	incfsz	?___aldiv+1,w
  2171  076C  2F6E               	goto	u5100
  2172  076D  2F71               	goto	u5101
  2173  076E                     u5100:	
  2174  076E  1683               	bsf	3,5	;RP0=1, select bank1
  2175  076F  1303               	bcf	3,6	;RP1=0, select bank1
  2176  0770  07B3               	addwf	(??_Freq_Available^(0+128)+1),f
  2177  0771                     u5101:	
  2178  0771  1283               	bcf	3,5	;RP0=0, select bank0
  2179  0772  1303               	bcf	3,6	;RP1=0, select bank0
  2180  0773  0822               	movf	?___aldiv+2,w
  2181  0774  1803               	skipnc
  2182  0775  0F22               	incfsz	?___aldiv+2,w
  2183  0776  2F78               	goto	u5102
  2184  0777  2F7B               	goto	u5103
  2185  0778                     u5102:	
  2186  0778  1683               	bsf	3,5	;RP0=1, select bank1
  2187  0779  1303               	bcf	3,6	;RP1=0, select bank1
  2188  077A  07B4               	addwf	(??_Freq_Available^(0+128)+2),f
  2189  077B                     u5103:	
  2190  077B  1283               	bcf	3,5	;RP0=0, select bank0
  2191  077C  1303               	bcf	3,6	;RP1=0, select bank0
  2192  077D  0823               	movf	?___aldiv+3,w
  2193  077E  1803               	skipnc
  2194  077F  0A23               	incf	?___aldiv+3,w
  2195  0780  1683               	bsf	3,5	;RP0=1, select bank1
  2196  0781  1303               	bcf	3,6	;RP1=0, select bank1
  2197  0782  07B5               	addwf	(??_Freq_Available^(0+128)+3),f
  2198  0783  0835               	movf	(??_Freq_Available+3)^(0+128),w
  2199  0784  1283               	bcf	3,5	;RP0=0, select bank0
  2200  0785  1303               	bcf	3,6	;RP1=0, select bank0
  2201  0786  00BF               	movwf	?___altoft+3
  2202  0787  1683               	bsf	3,5	;RP0=1, select bank1
  2203  0788  1303               	bcf	3,6	;RP1=0, select bank1
  2204  0789  0834               	movf	(??_Freq_Available+2)^(0+128),w
  2205  078A  1283               	bcf	3,5	;RP0=0, select bank0
  2206  078B  1303               	bcf	3,6	;RP1=0, select bank0
  2207  078C  00BE               	movwf	?___altoft+2
  2208  078D  1683               	bsf	3,5	;RP0=1, select bank1
  2209  078E  1303               	bcf	3,6	;RP1=0, select bank1
  2210  078F  0833               	movf	(??_Freq_Available+1)^(0+128),w
  2211  0790  1283               	bcf	3,5	;RP0=0, select bank0
  2212  0791  1303               	bcf	3,6	;RP1=0, select bank0
  2213  0792  00BD               	movwf	?___altoft+1
  2214  0793  1683               	bsf	3,5	;RP0=1, select bank1
  2215  0794  1303               	bcf	3,6	;RP1=0, select bank1
  2216  0795  0832               	movf	??_Freq_Available^(0+128),w
  2217  0796  1283               	bcf	3,5	;RP0=0, select bank0
  2218  0797  1303               	bcf	3,6	;RP1=0, select bank0
  2219  0798  00BC               	movwf	?___altoft
  2220  0799  120A  158A  254C   	fcall	___altoft
      +       120A  118A         
  2221  079E  1283               	bcf	3,5	;RP0=0, select bank0
  2222  079F  1303               	bcf	3,6	;RP1=0, select bank0
  2223  07A0  083C               	movf	?___altoft,w
  2224  07A1  1683               	bsf	3,5	;RP0=1, select bank1
  2225  07A2  1303               	bcf	3,6	;RP1=0, select bank1
  2226  07A3  00C0               	movwf	Freq_Available@freq_available^(0+128)
  2227  07A4  1283               	bcf	3,5	;RP0=0, select bank0
  2228  07A5  1303               	bcf	3,6	;RP1=0, select bank0
  2229  07A6  083D               	movf	?___altoft+1,w
  2230  07A7  1683               	bsf	3,5	;RP0=1, select bank1
  2231  07A8  1303               	bcf	3,6	;RP1=0, select bank1
  2232  07A9  00C1               	movwf	(Freq_Available@freq_available+1)^(0+128)
  2233  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  2234  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  2235  07AC  083E               	movf	?___altoft+2,w
  2236  07AD  1683               	bsf	3,5	;RP0=1, select bank1
  2237  07AE  1303               	bcf	3,6	;RP1=0, select bank1
  2238  07AF  00C2               	movwf	(Freq_Available@freq_available+2)^(0+128)
  2239                           
  2240                           ;Main.c: 121: freq_available = freq_available/1000000;
  2241  07B0  3024               	movlw	36
  2242  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  2243  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  2244  07B3  00CC               	movwf	?___ftdiv
  2245  07B4  3074               	movlw	116
  2246  07B5  00CD               	movwf	?___ftdiv+1
  2247  07B6  3049               	movlw	73
  2248  07B7  00CE               	movwf	?___ftdiv+2
  2249  07B8  1683               	bsf	3,5	;RP0=1, select bank1
  2250  07B9  1303               	bcf	3,6	;RP1=0, select bank1
  2251  07BA  0840               	movf	Freq_Available@freq_available^(0+128),w
  2252  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  2253  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  2254  07BD  00CF               	movwf	?___ftdiv+3
  2255  07BE  1683               	bsf	3,5	;RP0=1, select bank1
  2256  07BF  1303               	bcf	3,6	;RP1=0, select bank1
  2257  07C0  0841               	movf	(Freq_Available@freq_available+1)^(0+128),w
  2258  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  2259  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  2260  07C3  00D0               	movwf	?___ftdiv+4
  2261  07C4  1683               	bsf	3,5	;RP0=1, select bank1
  2262  07C5  1303               	bcf	3,6	;RP1=0, select bank1
  2263  07C6  0842               	movf	(Freq_Available@freq_available+2)^(0+128),w
  2264  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  2265  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  2266  07C9  00D1               	movwf	?___ftdiv+5
  2267  07CA  120A  118A  202A   	fcall	___ftdiv
  2268  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  2269  07CE  1303               	bcf	3,6	;RP1=0, select bank0
  2270  07CF  084C               	movf	?___ftdiv,w
  2271  07D0  1683               	bsf	3,5	;RP0=1, select bank1
  2272  07D1  1303               	bcf	3,6	;RP1=0, select bank1
  2273  07D2  00C0               	movwf	Freq_Available@freq_available^(0+128)
  2274  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  2275  07D4  1303               	bcf	3,6	;RP1=0, select bank0
  2276  07D5  084D               	movf	?___ftdiv+1,w
  2277  07D6  1683               	bsf	3,5	;RP0=1, select bank1
  2278  07D7  1303               	bcf	3,6	;RP1=0, select bank1
  2279  07D8  00C1               	movwf	(Freq_Available@freq_available+1)^(0+128)
  2280  07D9  1283               	bcf	3,5	;RP0=0, select bank0
  2281  07DA  1303               	bcf	3,6	;RP1=0, select bank0
  2282  07DB  084E               	movf	?___ftdiv+2,w
  2283  07DC  1683               	bsf	3,5	;RP0=1, select bank1
  2284  07DD  1303               	bcf	3,6	;RP1=0, select bank1
  2285  07DE  00C2               	movwf	(Freq_Available@freq_available+2)^(0+128)
  2286                           
  2287                           ;Main.c: 123: return freq_available;
  2288  07DF  0840               	movf	Freq_Available@freq_available^(0+128),w
  2289  07E0  1283               	bcf	3,5	;RP0=0, select bank0
  2290  07E1  1303               	bcf	3,6	;RP1=0, select bank0
  2291  07E2  00E6               	movwf	?_Freq_Available
  2292  07E3  1683               	bsf	3,5	;RP0=1, select bank1
  2293  07E4  1303               	bcf	3,6	;RP1=0, select bank1
  2294  07E5  0841               	movf	(Freq_Available@freq_available+1)^(0+128),w
  2295  07E6  1283               	bcf	3,5	;RP0=0, select bank0
  2296  07E7  1303               	bcf	3,6	;RP1=0, select bank0
  2297  07E8  00E7               	movwf	?_Freq_Available+1
  2298  07E9  1683               	bsf	3,5	;RP0=1, select bank1
  2299  07EA  1303               	bcf	3,6	;RP1=0, select bank1
  2300  07EB  0842               	movf	(Freq_Available@freq_available+2)^(0+128),w
  2301  07EC  1283               	bcf	3,5	;RP0=0, select bank0
  2302  07ED  1303               	bcf	3,6	;RP1=0, select bank0
  2303  07EE  00E8               	movwf	?_Freq_Available+2
  2304  07EF  0008               	return
  2305  07F0                     __end_of_Freq_Available:	
  2306                           
  2307                           	psect	text8
  2308  0D4C                     __ptext8:	
  2309 ;; *************** function ___altoft *****************
  2310 ;; Defined at:
  2311 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\altoft.c"
  2312 ;; Parameters:    Size  Location     Type
  2313 ;;  c               4   28[BANK0 ] long 
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;  sign            1   37[BANK0 ] unsigned char 
  2316 ;;  exp             1   36[BANK0 ] unsigned char 
  2317 ;; Return value:  Size  Location     Type
  2318 ;;                  3   28[BANK0 ] float 
  2319 ;; Registers used:
  2320 ;;		wreg, status,2, status,0, pclath, cstack
  2321 ;; Tracked objects:
  2322 ;;		On entry : 0/0
  2323 ;;		On exit  : 0/0
  2324 ;;		Unchanged: 0/0
  2325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2326 ;;      Params:         0       4       0       0       0
  2327 ;;      Locals:         0       4       0       0       0
  2328 ;;      Temps:          0       2       0       0       0
  2329 ;;      Totals:         0      10       0       0       0
  2330 ;;Total ram usage:       10 bytes
  2331 ;; Hardware stack levels used:    1
  2332 ;; Hardware stack levels required when called:    1
  2333 ;; This function calls:
  2334 ;;		___ftpack
  2335 ;; This function is called by:
  2336 ;;		_Freq_Available
  2337 ;; This function uses a non-reentrant model
  2338 ;;
  2339                           
  2340                           
  2341                           ;psect for function ___altoft
  2342  0D4C                     ___altoft:	
  2343                           
  2344                           ;incstack = 0
  2345                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  2346  0D4C  1283               	bcf	3,5	;RP0=0, select bank0
  2347  0D4D  1303               	bcf	3,6	;RP1=0, select bank0
  2348  0D4E  01C5               	clrf	___altoft@sign
  2349  0D4F  308E               	movlw	142
  2350  0D50  00C0               	movwf	??___altoft
  2351  0D51  0840               	movf	??___altoft,w
  2352  0D52  00C4               	movwf	___altoft@exp
  2353  0D53  1FBF               	btfss	___altoft@c+3,7
  2354  0D54  2D62               	goto	l3936
  2355  0D55  09BC               	comf	___altoft@c,f
  2356  0D56  09BD               	comf	___altoft@c+1,f
  2357  0D57  09BE               	comf	___altoft@c+2,f
  2358  0D58  09BF               	comf	___altoft@c+3,f
  2359  0D59  0ABC               	incf	___altoft@c,f
  2360  0D5A  1903               	skipnz
  2361  0D5B  0ABD               	incf	___altoft@c+1,f
  2362  0D5C  1903               	skipnz
  2363  0D5D  0ABE               	incf	___altoft@c+2,f
  2364  0D5E  1903               	skipnz
  2365  0D5F  0ABF               	incf	___altoft@c+3,f
  2366  0D60  01C5               	clrf	___altoft@sign
  2367  0D61  0AC5               	incf	___altoft@sign,f
  2368  0D62                     l3936:	
  2369  0D62  30FF               	movlw	255
  2370  0D63  053F               	andwf	___altoft@c+3,w
  2371  0D64  1903               	btfsc	3,2
  2372  0D65  2D74               	goto	l3938
  2373  0D66  3001               	movlw	1
  2374  0D67                     u4675:	
  2375  0D67  1003               	clrc
  2376  0D68  0CBF               	rrf	___altoft@c+3,f
  2377  0D69  0CBE               	rrf	___altoft@c+2,f
  2378  0D6A  0CBD               	rrf	___altoft@c+1,f
  2379  0D6B  0CBC               	rrf	___altoft@c,f
  2380  0D6C  3EFF               	addlw	-1
  2381  0D6D  1D03               	skipz
  2382  0D6E  2D67               	goto	u4675
  2383  0D6F  3001               	movlw	1
  2384  0D70  00C0               	movwf	??___altoft
  2385  0D71  0840               	movf	??___altoft,w
  2386  0D72  07C4               	addwf	___altoft@exp,f
  2387  0D73  2D62               	goto	l3936
  2388  0D74                     l3938:	
  2389  0D74  083C               	movf	___altoft@c,w
  2390  0D75  00F0               	movwf	?___ftpack
  2391  0D76  083D               	movf	___altoft@c+1,w
  2392  0D77  00F1               	movwf	?___ftpack+1
  2393  0D78  083E               	movf	___altoft@c+2,w
  2394  0D79  00F2               	movwf	?___ftpack+2
  2395  0D7A  0844               	movf	___altoft@exp,w
  2396  0D7B  00C0               	movwf	??___altoft
  2397  0D7C  0840               	movf	??___altoft,w
  2398  0D7D  00F3               	movwf	?___ftpack+3
  2399  0D7E  0845               	movf	___altoft@sign,w
  2400  0D7F  00C1               	movwf	??___altoft+1
  2401  0D80  0841               	movf	??___altoft+1,w
  2402  0D81  00F4               	movwf	?___ftpack+4
  2403  0D82  120A  158A  25DA   	fcall	___ftpack
  2404  0D85  0870               	movf	?___ftpack,w
  2405  0D86  1283               	bcf	3,5	;RP0=0, select bank0
  2406  0D87  1303               	bcf	3,6	;RP1=0, select bank0
  2407  0D88  00BC               	movwf	?___altoft
  2408  0D89  0871               	movf	?___ftpack+1,w
  2409  0D8A  00BD               	movwf	?___altoft+1
  2410  0D8B  0872               	movf	?___ftpack+2,w
  2411  0D8C  00BE               	movwf	?___altoft+2
  2412  0D8D  0008               	return
  2413  0D8E                     __end_of___altoft:	
  2414                           
  2415                           	psect	text9
  2416  0ED0                     __ptext9:	
  2417 ;; *************** function ___aldiv *****************
  2418 ;; Defined at:
  2419 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\aldiv.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;  divisor         4    0[BANK0 ] long 
  2422 ;;  dividend        4    4[BANK0 ] long 
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;  quotient        4    9[COMMON] long 
  2425 ;;  sign            1    8[COMMON] unsigned char 
  2426 ;;  counter         1    7[COMMON] unsigned char 
  2427 ;; Return value:  Size  Location     Type
  2428 ;;                  4    0[BANK0 ] long 
  2429 ;; Registers used:
  2430 ;;		wreg, status,2, status,0
  2431 ;; Tracked objects:
  2432 ;;		On entry : 0/0
  2433 ;;		On exit  : 0/0
  2434 ;;		Unchanged: 0/0
  2435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2436 ;;      Params:         0       8       0       0       0
  2437 ;;      Locals:        12       0       0       0       0
  2438 ;;      Temps:          1       0       0       0       0
  2439 ;;      Totals:        13       8       0       0       0
  2440 ;;Total ram usage:       21 bytes
  2441 ;; Hardware stack levels used:    1
  2442 ;; This function calls:
  2443 ;;		Nothing
  2444 ;; This function is called by:
  2445 ;;		_Freq_Available
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449                           
  2450                           ;psect for function ___aldiv
  2451  0ED0                     ___aldiv:	
  2452                           
  2453                           ;incstack = 0
  2454                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2455  0ED0  01F8               	clrf	___aldiv@sign
  2456  0ED1  1283               	bcf	3,5	;RP0=0, select bank0
  2457  0ED2  1303               	bcf	3,6	;RP1=0, select bank0
  2458  0ED3  1FA3               	btfss	___aldiv@divisor+3,7
  2459  0ED4  2EE2               	goto	l322
  2460  0ED5  09A0               	comf	___aldiv@divisor,f
  2461  0ED6  09A1               	comf	___aldiv@divisor+1,f
  2462  0ED7  09A2               	comf	___aldiv@divisor+2,f
  2463  0ED8  09A3               	comf	___aldiv@divisor+3,f
  2464  0ED9  0AA0               	incf	___aldiv@divisor,f
  2465  0EDA  1903               	skipnz
  2466  0EDB  0AA1               	incf	___aldiv@divisor+1,f
  2467  0EDC  1903               	skipnz
  2468  0EDD  0AA2               	incf	___aldiv@divisor+2,f
  2469  0EDE  1903               	skipnz
  2470  0EDF  0AA3               	incf	___aldiv@divisor+3,f
  2471  0EE0  01F8               	clrf	___aldiv@sign
  2472  0EE1  0AF8               	incf	___aldiv@sign,f
  2473  0EE2                     l322:	
  2474  0EE2  1FA7               	btfss	___aldiv@dividend+3,7
  2475  0EE3  2EF3               	goto	l1980
  2476  0EE4  09A4               	comf	___aldiv@dividend,f
  2477  0EE5  09A5               	comf	___aldiv@dividend+1,f
  2478  0EE6  09A6               	comf	___aldiv@dividend+2,f
  2479  0EE7  09A7               	comf	___aldiv@dividend+3,f
  2480  0EE8  0AA4               	incf	___aldiv@dividend,f
  2481  0EE9  1903               	skipnz
  2482  0EEA  0AA5               	incf	___aldiv@dividend+1,f
  2483  0EEB  1903               	skipnz
  2484  0EEC  0AA6               	incf	___aldiv@dividend+2,f
  2485  0EED  1903               	skipnz
  2486  0EEE  0AA7               	incf	___aldiv@dividend+3,f
  2487  0EEF  3001               	movlw	1
  2488  0EF0  00F0               	movwf	??___aldiv
  2489  0EF1  0870               	movf	??___aldiv,w
  2490  0EF2  06F8               	xorwf	___aldiv@sign,f
  2491  0EF3                     l1980:	
  2492  0EF3  3000               	movlw	0
  2493  0EF4  00FC               	movwf	___aldiv@quotient+3
  2494  0EF5  3000               	movlw	0
  2495  0EF6  00FB               	movwf	___aldiv@quotient+2
  2496  0EF7  3000               	movlw	0
  2497  0EF8  00FA               	movwf	___aldiv@quotient+1
  2498  0EF9  3000               	movlw	0
  2499  0EFA  00F9               	movwf	___aldiv@quotient
  2500  0EFB  0823               	movf	___aldiv@divisor+3,w
  2501  0EFC  0422               	iorwf	___aldiv@divisor+2,w
  2502  0EFD  0421               	iorwf	___aldiv@divisor+1,w
  2503  0EFE  0420               	iorwf	___aldiv@divisor,w
  2504  0EFF  1903               	skipnz
  2505  0F00  2F48               	goto	l2002
  2506  0F01  01F7               	clrf	___aldiv@counter
  2507  0F02  0AF7               	incf	___aldiv@counter,f
  2508  0F03                     l1988:	
  2509  0F03  1BA3               	btfsc	___aldiv@divisor+3,7
  2510  0F04  2F13               	goto	l1990
  2511  0F05  3001               	movlw	1
  2512  0F06  00F0               	movwf	??___aldiv
  2513  0F07                     u1575:	
  2514  0F07  1003               	clrc
  2515  0F08  0DA0               	rlf	___aldiv@divisor,f
  2516  0F09  0DA1               	rlf	___aldiv@divisor+1,f
  2517  0F0A  0DA2               	rlf	___aldiv@divisor+2,f
  2518  0F0B  0DA3               	rlf	___aldiv@divisor+3,f
  2519  0F0C  0BF0               	decfsz	??___aldiv,f
  2520  0F0D  2F07               	goto	u1575
  2521  0F0E  3001               	movlw	1
  2522  0F0F  00F0               	movwf	??___aldiv
  2523  0F10  0870               	movf	??___aldiv,w
  2524  0F11  07F7               	addwf	___aldiv@counter,f
  2525  0F12  2F03               	goto	l1988
  2526  0F13                     l1990:	
  2527  0F13  3001               	movlw	1
  2528  0F14  00F0               	movwf	??___aldiv
  2529  0F15                     u1595:	
  2530  0F15  1003               	clrc
  2531  0F16  0DF9               	rlf	___aldiv@quotient,f
  2532  0F17  0DFA               	rlf	___aldiv@quotient+1,f
  2533  0F18  0DFB               	rlf	___aldiv@quotient+2,f
  2534  0F19  0DFC               	rlf	___aldiv@quotient+3,f
  2535  0F1A  0BF0               	decfsz	??___aldiv,f
  2536  0F1B  2F15               	goto	u1595
  2537  0F1C  0823               	movf	___aldiv@divisor+3,w
  2538  0F1D  0227               	subwf	___aldiv@dividend+3,w
  2539  0F1E  1D03               	skipz
  2540  0F1F  2F2A               	goto	u1605
  2541  0F20  0822               	movf	___aldiv@divisor+2,w
  2542  0F21  0226               	subwf	___aldiv@dividend+2,w
  2543  0F22  1D03               	skipz
  2544  0F23  2F2A               	goto	u1605
  2545  0F24  0821               	movf	___aldiv@divisor+1,w
  2546  0F25  0225               	subwf	___aldiv@dividend+1,w
  2547  0F26  1D03               	skipz
  2548  0F27  2F2A               	goto	u1605
  2549  0F28  0820               	movf	___aldiv@divisor,w
  2550  0F29  0224               	subwf	___aldiv@dividend,w
  2551  0F2A                     u1605:	
  2552  0F2A  1C03               	skipc
  2553  0F2B  2F3B               	goto	l1998
  2554  0F2C  0820               	movf	___aldiv@divisor,w
  2555  0F2D  02A4               	subwf	___aldiv@dividend,f
  2556  0F2E  0821               	movf	___aldiv@divisor+1,w
  2557  0F2F  1C03               	skipc
  2558  0F30  0F21               	incfsz	___aldiv@divisor+1,w
  2559  0F31  02A5               	subwf	___aldiv@dividend+1,f
  2560  0F32  0822               	movf	___aldiv@divisor+2,w
  2561  0F33  1C03               	skipc
  2562  0F34  0F22               	incfsz	___aldiv@divisor+2,w
  2563  0F35  02A6               	subwf	___aldiv@dividend+2,f
  2564  0F36  0823               	movf	___aldiv@divisor+3,w
  2565  0F37  1C03               	skipc
  2566  0F38  0F23               	incfsz	___aldiv@divisor+3,w
  2567  0F39  02A7               	subwf	___aldiv@dividend+3,f
  2568  0F3A  1479               	bsf	___aldiv@quotient,0
  2569  0F3B                     l1998:	
  2570  0F3B  3001               	movlw	1
  2571  0F3C                     u1615:	
  2572  0F3C  1003               	clrc
  2573  0F3D  0CA3               	rrf	___aldiv@divisor+3,f
  2574  0F3E  0CA2               	rrf	___aldiv@divisor+2,f
  2575  0F3F  0CA1               	rrf	___aldiv@divisor+1,f
  2576  0F40  0CA0               	rrf	___aldiv@divisor,f
  2577  0F41  3EFF               	addlw	-1
  2578  0F42  1D03               	skipz
  2579  0F43  2F3C               	goto	u1615
  2580  0F44  3001               	movlw	1
  2581  0F45  02F7               	subwf	___aldiv@counter,f
  2582  0F46  1D03               	btfss	3,2
  2583  0F47  2F13               	goto	l1990
  2584  0F48                     l2002:	
  2585  0F48  0878               	movf	___aldiv@sign,w
  2586  0F49  1903               	btfsc	3,2
  2587  0F4A  2F56               	goto	l2006
  2588  0F4B  09F9               	comf	___aldiv@quotient,f
  2589  0F4C  09FA               	comf	___aldiv@quotient+1,f
  2590  0F4D  09FB               	comf	___aldiv@quotient+2,f
  2591  0F4E  09FC               	comf	___aldiv@quotient+3,f
  2592  0F4F  0AF9               	incf	___aldiv@quotient,f
  2593  0F50  1903               	skipnz
  2594  0F51  0AFA               	incf	___aldiv@quotient+1,f
  2595  0F52  1903               	skipnz
  2596  0F53  0AFB               	incf	___aldiv@quotient+2,f
  2597  0F54  1903               	skipnz
  2598  0F55  0AFC               	incf	___aldiv@quotient+3,f
  2599  0F56                     l2006:	
  2600  0F56  087C               	movf	___aldiv@quotient+3,w
  2601  0F57  00A3               	movwf	?___aldiv+3
  2602  0F58  087B               	movf	___aldiv@quotient+2,w
  2603  0F59  00A2               	movwf	?___aldiv+2
  2604  0F5A  087A               	movf	___aldiv@quotient+1,w
  2605  0F5B  00A1               	movwf	?___aldiv+1
  2606  0F5C  0879               	movf	___aldiv@quotient,w
  2607  0F5D  00A0               	movwf	?___aldiv
  2608  0F5E  0008               	return
  2609  0F5F                     __end_of___aldiv:	
  2610                           
  2611                           	psect	text10
  2612  0BFC                     __ptext10:	
  2613 ;; *************** function _I2C_Read_Byte *****************
  2614 ;; Defined at:
  2615 ;;		line 97 in file "i2c.c"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;		None
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;		None
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  1    wreg      unsigned char 
  2622 ;; Registers used:
  2623 ;;		wreg
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2629 ;;      Params:         0       0       0       0       0
  2630 ;;      Locals:         0       0       0       0       0
  2631 ;;      Temps:          0       0       0       0       0
  2632 ;;      Totals:         0       0       0       0       0
  2633 ;;Total ram usage:        0 bytes
  2634 ;; Hardware stack levels used:    1
  2635 ;; This function calls:
  2636 ;;		Nothing
  2637 ;; This function is called by:
  2638 ;;		_Freq_Available
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           
  2643                           ;psect for function _I2C_Read_Byte
  2644  0BFC                     _I2C_Read_Byte:	
  2645                           
  2646                           ;i2c.c: 98: SSPCON2bits.RCEN = 1;
  2647                           
  2648                           ;incstack = 0
  2649                           ; Regs used in _I2C_Read_Byte: [wreg]
  2650  0BFC  1683               	bsf	3,5	;RP0=1, select bank1
  2651  0BFD  1303               	bcf	3,6	;RP1=0, select bank1
  2652  0BFE  1591               	bsf	17,3	;volatile
  2653  0BFF                     l138:	
  2654                           ;i2c.c: 99: while(SSPSTATbits.BF == 0);
  2655                           
  2656  0BFF  1C14               	btfss	20,0	;volatile
  2657  0C00  2BFF               	goto	l138
  2658                           
  2659                           ;i2c.c: 100: SSPCON2bits.RCEN = 0;
  2660  0C01  1191               	bcf	17,3	;volatile
  2661                           
  2662                           ;i2c.c: 102: return SSPBUF;
  2663  0C02  1283               	bcf	3,5	;RP0=0, select bank0
  2664  0C03  1303               	bcf	3,6	;RP1=0, select bank0
  2665  0C04  0813               	movf	19,w	;volatile
  2666  0C05  0008               	return
  2667  0C06                     __end_of_I2C_Read_Byte:	
  2668                           
  2669                           	psect	text11
  2670  001A                     __ptext11:	
  2671 ;; *************** function _i2c_initialize *****************
  2672 ;; Defined at:
  2673 ;;		line 13 in file "i2c.c"
  2674 ;; Parameters:    Size  Location     Type
  2675 ;;		None
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;		None
  2678 ;; Return value:  Size  Location     Type
  2679 ;;		None               void
  2680 ;; Registers used:
  2681 ;;		wreg
  2682 ;; Tracked objects:
  2683 ;;		On entry : 0/0
  2684 ;;		On exit  : 0/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2687 ;;      Params:         0       0       0       0       0
  2688 ;;      Locals:         0       0       0       0       0
  2689 ;;      Temps:          0       0       0       0       0
  2690 ;;      Totals:         0       0       0       0       0
  2691 ;;Total ram usage:        0 bytes
  2692 ;; Hardware stack levels used:    1
  2693 ;; This function calls:
  2694 ;;		Nothing
  2695 ;; This function is called by:
  2696 ;;		_main
  2697 ;;		_Freq_Available
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           
  2701                           
  2702                           ;psect for function _i2c_initialize
  2703  001A                     _i2c_initialize:	
  2704                           
  2705                           ;i2c.c: 15: TRISCbits.TRISC3 = 1;
  2706                           
  2707                           ;incstack = 0
  2708                           ; Regs used in _i2c_initialize: [wreg]
  2709  001A  1683               	bsf	3,5	;RP0=1, select bank1
  2710  001B  1303               	bcf	3,6	;RP1=0, select bank1
  2711  001C  1587               	bsf	7,3	;volatile
  2712                           
  2713                           ;i2c.c: 16: TRISCbits.TRISC4 = 1;
  2714  001D  1607               	bsf	7,4	;volatile
  2715                           
  2716                           ;i2c.c: 20: SSPADD = 12;
  2717  001E  300C               	movlw	12
  2718  001F  0093               	movwf	19	;volatile
  2719                           
  2720                           ;i2c.c: 23: SSPCONbits.SSPM3 = 1;
  2721  0020  1283               	bcf	3,5	;RP0=0, select bank0
  2722  0021  1303               	bcf	3,6	;RP1=0, select bank0
  2723  0022  1594               	bsf	20,3	;volatile
  2724                           
  2725                           ;i2c.c: 24: SSPCONbits.SSPM2 = 0;
  2726  0023  1114               	bcf	20,2	;volatile
  2727                           
  2728                           ;i2c.c: 25: SSPCONbits.SSPM1 = 0;
  2729  0024  1094               	bcf	20,1	;volatile
  2730                           
  2731                           ;i2c.c: 26: SSPCONbits.SSPM0 = 0;
  2732  0025  1014               	bcf	20,0	;volatile
  2733                           
  2734                           ;i2c.c: 29: SSPCONbits.WCOL = 0;
  2735  0026  1394               	bcf	20,7	;volatile
  2736                           
  2737                           ;i2c.c: 32: SSPCONbits.SSPOV = 0;
  2738  0027  1314               	bcf	20,6	;volatile
  2739                           
  2740                           ;i2c.c: 35: SSPCONbits.SSPEN = 1;
  2741  0028  1694               	bsf	20,5	;volatile
  2742  0029  0008               	return
  2743  002A                     __end_of_i2c_initialize:	
  2744                           
  2745                           	psect	text12
  2746  02AC                     __ptext12:	
  2747 ;; *************** function _SearchUp *****************
  2748 ;; Defined at:
  2749 ;;		line 128 in file "Main.c"
  2750 ;; Parameters:    Size  Location     Type
  2751 ;;		None
  2752 ;; Auto vars:     Size  Location     Type
  2753 ;;  frequency       3   39[BANK1 ] unsigned char 
  2754 ;;  frequencyB      2   44[BANK1 ] unsigned int 
  2755 ;;  frequencyL      1   43[BANK1 ] unsigned char 
  2756 ;;  frequencyH      1   42[BANK1 ] unsigned char 
  2757 ;; Return value:  Size  Location     Type
  2758 ;;		None               void
  2759 ;; Registers used:
  2760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2766 ;;      Params:         0       0       0       0       0
  2767 ;;      Locals:         0       0      10       0       0
  2768 ;;      Temps:          1       0       0       0       0
  2769 ;;      Totals:         1       0      10       0       0
  2770 ;;Total ram usage:       11 bytes
  2771 ;; Hardware stack levels used:    1
  2772 ;; Hardware stack levels required when called:    3
  2773 ;; This function calls:
  2774 ;;		_Freq_Available
  2775 ;;		_I2C_Start
  2776 ;;		_I2C_Write_Byte
  2777 ;;		_I2C_Send_ACK
  2778 ;;		_I2C_Send_NACK
  2779 ;;		_I2C_Stop
  2780 ;;		___ftadd
  2781 ;;		___ftdiv
  2782 ;;		___ftmul
  2783 ;;		___fttol
  2784 ;; This function is called by:
  2785 ;;		_main
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           
  2790                           ;psect for function _SearchUp
  2791  02AC                     _SearchUp:	
  2792                           
  2793                           ;Main.c: 129: double frequency = 0;
  2794                           
  2795                           ;incstack = 0
  2796                           ; Regs used in _SearchUp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2797  02AC  3000               	movlw	0
  2798  02AD  1683               	bsf	3,5	;RP0=1, select bank1
  2799  02AE  1303               	bcf	3,6	;RP1=0, select bank1
  2800  02AF  00C7               	movwf	SearchUp@frequency^(0+128)
  2801  02B0  3000               	movlw	0
  2802  02B1  00C8               	movwf	(SearchUp@frequency+1)^(0+128)
  2803  02B2  3000               	movlw	0
  2804  02B3  00C9               	movwf	(SearchUp@frequency+2)^(0+128)
  2805                           
  2806                           ;Main.c: 130: unsigned char frequencyH=0;
  2807  02B4  01CA               	clrf	SearchUp@frequencyH^(0+128)
  2808                           
  2809                           ;Main.c: 131: unsigned char frequencyL=0;
  2810  02B5  01CB               	clrf	SearchUp@frequencyL^(0+128)
  2811                           
  2812                           ;Main.c: 132: unsigned int frequencyB;
  2813                           ;Main.c: 134: frequency = Freq_Available();
  2814  02B6  120A  118A  26D0   	fcall	_Freq_Available
      +       120A  118A         
  2815  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  2816  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  2817  02BD  0866               	movf	?_Freq_Available,w
  2818  02BE  1683               	bsf	3,5	;RP0=1, select bank1
  2819  02BF  1303               	bcf	3,6	;RP1=0, select bank1
  2820  02C0  00C7               	movwf	SearchUp@frequency^(0+128)
  2821  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  2822  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  2823  02C3  0867               	movf	?_Freq_Available+1,w
  2824  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  2825  02C5  1303               	bcf	3,6	;RP1=0, select bank1
  2826  02C6  00C8               	movwf	(SearchUp@frequency+1)^(0+128)
  2827  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  2828  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  2829  02C9  0868               	movf	?_Freq_Available+2,w
  2830  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  2831  02CB  1303               	bcf	3,6	;RP1=0, select bank1
  2832  02CC  00C9               	movwf	(SearchUp@frequency+2)^(0+128)
  2833                           
  2834                           ;Main.c: 136: frequencyB = (4 * (frequency * 1000000 + 225000)) / 32768 + 1;
  2835  02CD  0847               	movf	SearchUp@frequency^(0+128),w
  2836  02CE  00A3               	movwf	(?___ftmul^(0+128)+3)
  2837  02CF  0848               	movf	(SearchUp@frequency+1)^(0+128),w
  2838  02D0  00A4               	movwf	((?___ftmul+1)^(0+128)+3)
  2839  02D1  0849               	movf	(SearchUp@frequency+2)^(0+128),w
  2840  02D2  00A5               	movwf	((?___ftmul+2)^(0+128)+3)
  2841  02D3  3024               	movlw	36
  2842  02D4  00A0               	movwf	?___ftmul^(0+128)
  2843  02D5  3074               	movlw	116
  2844  02D6  00A1               	movwf	(?___ftmul+1)^(0+128)
  2845  02D7  3049               	movlw	73
  2846  02D8  00A2               	movwf	(?___ftmul+2)^(0+128)
  2847  02D9  120A  118A  25B7   	fcall	___ftmul
      +       120A  118A         
  2848  02DE  1683               	bsf	3,5	;RP0=1, select bank1
  2849  02DF  1303               	bcf	3,6	;RP1=0, select bank1
  2850  02E0  0820               	movf	?___ftmul^(0+128),w
  2851  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  2852  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  2853  02E3  00BF               	movwf	?___ftadd+3
  2854  02E4  1683               	bsf	3,5	;RP0=1, select bank1
  2855  02E5  1303               	bcf	3,6	;RP1=0, select bank1
  2856  02E6  0821               	movf	(?___ftmul+1)^(0+128),w
  2857  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  2858  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  2859  02E9  00C0               	movwf	?___ftadd+4
  2860  02EA  1683               	bsf	3,5	;RP0=1, select bank1
  2861  02EB  1303               	bcf	3,6	;RP1=0, select bank1
  2862  02EC  0822               	movf	(?___ftmul+2)^(0+128),w
  2863  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  2864  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  2865  02EF  00C1               	movwf	?___ftadd+5
  2866  02F0  30BA               	movlw	186
  2867  02F1  00BC               	movwf	?___ftadd
  2868  02F2  305B               	movlw	91
  2869  02F3  00BD               	movwf	?___ftadd+1
  2870  02F4  3048               	movlw	72
  2871  02F5  00BE               	movwf	?___ftadd+2
  2872  02F6  120A  118A  24AE   	fcall	___ftadd
      +       120A  118A         
  2873  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  2874  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  2875  02FD  083C               	movf	?___ftadd,w
  2876  02FE  1683               	bsf	3,5	;RP0=1, select bank1
  2877  02FF  1303               	bcf	3,6	;RP1=0, select bank1
  2878  0300  00C4               	movwf	_SearchUp$810^(0+128)
  2879  0301  1283               	bcf	3,5	;RP0=0, select bank0
  2880  0302  1303               	bcf	3,6	;RP1=0, select bank0
  2881  0303  083D               	movf	?___ftadd+1,w
  2882  0304  1683               	bsf	3,5	;RP0=1, select bank1
  2883  0305  1303               	bcf	3,6	;RP1=0, select bank1
  2884  0306  00C5               	movwf	(_SearchUp$810+1)^(0+128)
  2885  0307  1283               	bcf	3,5	;RP0=0, select bank0
  2886  0308  1303               	bcf	3,6	;RP1=0, select bank0
  2887  0309  083E               	movf	?___ftadd+2,w
  2888  030A  1683               	bsf	3,5	;RP0=1, select bank1
  2889  030B  1303               	bcf	3,6	;RP1=0, select bank1
  2890  030C  00C6               	movwf	(_SearchUp$810+2)^(0+128)
  2891                           
  2892                           ;Main.c: 136: frequencyB = (4 * (frequency * 1000000 + 225000)) / 32768 + 1;
  2893  030D  0844               	movf	_SearchUp$810^(0+128),w
  2894  030E  00A3               	movwf	(?___ftmul^(0+128)+3)
  2895  030F  0845               	movf	(_SearchUp$810+1)^(0+128),w
  2896  0310  00A4               	movwf	((?___ftmul+1)^(0+128)+3)
  2897  0311  0846               	movf	(_SearchUp$810+2)^(0+128),w
  2898  0312  00A5               	movwf	((?___ftmul+2)^(0+128)+3)
  2899  0313  3000               	movlw	0
  2900  0314  00A0               	movwf	?___ftmul^(0+128)
  2901  0315  3080               	movlw	128
  2902  0316  00A1               	movwf	(?___ftmul+1)^(0+128)
  2903  0317  3040               	movlw	64
  2904  0318  00A2               	movwf	(?___ftmul+2)^(0+128)
  2905  0319  120A  118A  25B7   	fcall	___ftmul
      +       120A  118A         
  2906  031E  1683               	bsf	3,5	;RP0=1, select bank1
  2907  031F  1303               	bcf	3,6	;RP1=0, select bank1
  2908  0320  0820               	movf	?___ftmul^(0+128),w
  2909  0321  1283               	bcf	3,5	;RP0=0, select bank0
  2910  0322  1303               	bcf	3,6	;RP1=0, select bank0
  2911  0323  00CF               	movwf	?___ftdiv+3
  2912  0324  1683               	bsf	3,5	;RP0=1, select bank1
  2913  0325  1303               	bcf	3,6	;RP1=0, select bank1
  2914  0326  0821               	movf	(?___ftmul+1)^(0+128),w
  2915  0327  1283               	bcf	3,5	;RP0=0, select bank0
  2916  0328  1303               	bcf	3,6	;RP1=0, select bank0
  2917  0329  00D0               	movwf	?___ftdiv+4
  2918  032A  1683               	bsf	3,5	;RP0=1, select bank1
  2919  032B  1303               	bcf	3,6	;RP1=0, select bank1
  2920  032C  0822               	movf	(?___ftmul+2)^(0+128),w
  2921  032D  1283               	bcf	3,5	;RP0=0, select bank0
  2922  032E  1303               	bcf	3,6	;RP1=0, select bank0
  2923  032F  00D1               	movwf	?___ftdiv+5
  2924  0330  3000               	movlw	0
  2925  0331  00CC               	movwf	?___ftdiv
  2926  0332  3000               	movlw	0
  2927  0333  00CD               	movwf	?___ftdiv+1
  2928  0334  3047               	movlw	71
  2929  0335  00CE               	movwf	?___ftdiv+2
  2930  0336  120A  118A  202A   	fcall	___ftdiv
      +       120A  118A         
  2931  033B  1283               	bcf	3,5	;RP0=0, select bank0
  2932  033C  1303               	bcf	3,6	;RP1=0, select bank0
  2933  033D  084C               	movf	?___ftdiv,w
  2934  033E  00BF               	movwf	?___ftadd+3
  2935  033F  084D               	movf	?___ftdiv+1,w
  2936  0340  00C0               	movwf	?___ftadd+4
  2937  0341  084E               	movf	?___ftdiv+2,w
  2938  0342  00C1               	movwf	?___ftadd+5
  2939  0343  3000               	movlw	0
  2940  0344  00BC               	movwf	?___ftadd
  2941  0345  3080               	movlw	128
  2942  0346  00BD               	movwf	?___ftadd+1
  2943  0347  303F               	movlw	63
  2944  0348  00BE               	movwf	?___ftadd+2
  2945  0349  120A  118A  24AE   	fcall	___ftadd
      +       120A  118A         
  2946  034E  1283               	bcf	3,5	;RP0=0, select bank0
  2947  034F  1303               	bcf	3,6	;RP1=0, select bank0
  2948  0350  083C               	movf	?___ftadd,w
  2949  0351  00A8               	movwf	?___fttol
  2950  0352  083D               	movf	?___ftadd+1,w
  2951  0353  00A9               	movwf	?___fttol+1
  2952  0354  083E               	movf	?___ftadd+2,w
  2953  0355  00AA               	movwf	?___fttol+2
  2954  0356  120A  158A  2642   	fcall	___fttol
      +       120A  118A         
  2955  035B  1283               	bcf	3,5	;RP0=0, select bank0
  2956  035C  1303               	bcf	3,6	;RP1=0, select bank0
  2957  035D  0829               	movf	?___fttol+1,w
  2958  035E  1683               	bsf	3,5	;RP0=1, select bank1
  2959  035F  1303               	bcf	3,6	;RP1=0, select bank1
  2960  0360  01CD               	clrf	(SearchUp@frequencyB+1)^(0+128)
  2961  0361  07CD               	addwf	(SearchUp@frequencyB+1)^(0+128),f
  2962  0362  1283               	bcf	3,5	;RP0=0, select bank0
  2963  0363  1303               	bcf	3,6	;RP1=0, select bank0
  2964  0364  0828               	movf	?___fttol,w
  2965  0365  1683               	bsf	3,5	;RP0=1, select bank1
  2966  0366  1303               	bcf	3,6	;RP1=0, select bank1
  2967  0367  01CC               	clrf	SearchUp@frequencyB^(0+128)
  2968  0368  07CC               	addwf	SearchUp@frequencyB^(0+128),f
  2969                           
  2970                           ;Main.c: 137: frequencyH = frequencyB >> 8;
  2971  0369  084D               	movf	(SearchUp@frequencyB+1)^(0+128),w
  2972  036A  00FD               	movwf	??_SearchUp
  2973  036B  087D               	movf	??_SearchUp,w
  2974  036C  00CA               	movwf	SearchUp@frequencyH^(0+128)
  2975                           
  2976                           ;Main.c: 138: frequencyL = frequencyB & 0xff;
  2977  036D  084C               	movf	SearchUp@frequencyB^(0+128),w
  2978  036E  00FD               	movwf	??_SearchUp
  2979  036F  087D               	movf	??_SearchUp,w
  2980  0370  00CB               	movwf	SearchUp@frequencyL^(0+128)
  2981                           
  2982                           ;Main.c: 140: I2C_Start();
  2983  0371  120A  158A  23C8   	fcall	_I2C_Start
      +       120A  118A         
  2984                           
  2985                           ;Main.c: 141: I2C_Write_Byte(0xC0);
  2986  0376  30C0               	movlw	192
  2987  0377  120A  158A  2406   	fcall	_I2C_Write_Byte
      +       120A  118A         
  2988                           
  2989                           ;Main.c: 142: I2C_Send_ACK();
  2990  037C  120A  158A  2432   	fcall	_I2C_Send_ACK
      +       120A  118A         
  2991                           
  2992                           ;Main.c: 143: I2C_Write_Byte(frequencyH + 0x40);
  2993  0381  1683               	bsf	3,5	;RP0=1, select bank1
  2994  0382  1303               	bcf	3,6	;RP1=0, select bank1
  2995  0383  084A               	movf	SearchUp@frequencyH^(0+128),w
  2996  0384  3E40               	addlw	64
  2997  0385  120A  158A  2406   	fcall	_I2C_Write_Byte
      +       120A  118A         
  2998                           
  2999                           ;Main.c: 144: I2C_Write_Byte(frequencyL);
  3000  038A  1683               	bsf	3,5	;RP0=1, select bank1
  3001  038B  1303               	bcf	3,6	;RP1=0, select bank1
  3002  038C  084B               	movf	SearchUp@frequencyL^(0+128),w
  3003  038D  120A  158A  2406   	fcall	_I2C_Write_Byte
      +       120A  118A         
  3004                           
  3005                           ;Main.c: 145: I2C_Write_Byte(0xD0);
  3006  0392  30D0               	movlw	208
  3007  0393  120A  158A  2406   	fcall	_I2C_Write_Byte
      +       120A  118A         
  3008                           
  3009                           ;Main.c: 146: I2C_Write_Byte(0x1F);
  3010  0398  301F               	movlw	31
  3011  0399  120A  158A  2406   	fcall	_I2C_Write_Byte
      +       120A  118A         
  3012                           
  3013                           ;Main.c: 147: I2C_Write_Byte(0x00);
  3014  039E  3000               	movlw	0
  3015  039F  120A  158A  2406   	fcall	_I2C_Write_Byte
      +       120A  118A         
  3016                           
  3017                           ;Main.c: 148: I2C_Send_NACK();
  3018  03A4  120A  158A  23E8   	fcall	_I2C_Send_NACK
      +       120A  118A         
  3019                           
  3020                           ;Main.c: 149: I2C_Stop();
  3021  03A9  120A  158A  23C1   	fcall	_I2C_Stop
  3022  03AC  0008               	return
  3023  03AD                     __end_of_SearchUp:	
  3024                           
  3025                           	psect	text13
  3026  05B7                     __ptext13:	
  3027 ;; *************** function ___ftmul *****************
  3028 ;; Defined at:
  3029 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\ftmul.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;  f1              3    0[BANK1 ] float 
  3032 ;;  f2              3    3[BANK1 ] float 
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;  f3_as_produc    3   13[BANK1 ] unsigned um
  3035 ;;  sign            1   17[BANK1 ] unsigned char 
  3036 ;;  cntr            1   16[BANK1 ] unsigned char 
  3037 ;;  exp             1   12[BANK1 ] unsigned char 
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  3    0[BANK1 ] float 
  3040 ;; Registers used:
  3041 ;;		wreg, status,2, status,0, pclath, cstack
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 0/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3047 ;;      Params:         0       0       6       0       0
  3048 ;;      Locals:         0       0      12       0       0
  3049 ;;      Temps:          0       4       0       0       0
  3050 ;;      Totals:         0       4      18       0       0
  3051 ;;Total ram usage:       22 bytes
  3052 ;; Hardware stack levels used:    1
  3053 ;; Hardware stack levels required when called:    1
  3054 ;; This function calls:
  3055 ;;		___ftpack
  3056 ;; This function is called by:
  3057 ;;		_Freq_Display
  3058 ;;		_SetFrequency
  3059 ;;		_SearchUp
  3060 ;;		_SearchDown
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           
  3065                           ;psect for function ___ftmul
  3066  05B7                     ___ftmul:	
  3067                           
  3068                           ;incstack = 0
  3069                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3070  05B7  1683               	bsf	3,5	;RP0=1, select bank1
  3071  05B8  1303               	bcf	3,6	;RP1=0, select bank1
  3072  05B9  0820               	movf	___ftmul@f1^(0+128),w
  3073  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  3074  05BB  1303               	bcf	3,6	;RP1=0, select bank0
  3075  05BC  00E2               	movwf	??___ftmul
  3076  05BD  1683               	bsf	3,5	;RP0=1, select bank1
  3077  05BE  1303               	bcf	3,6	;RP1=0, select bank1
  3078  05BF  0821               	movf	(___ftmul@f1+1)^(0+128),w
  3079  05C0  1283               	bcf	3,5	;RP0=0, select bank0
  3080  05C1  1303               	bcf	3,6	;RP1=0, select bank0
  3081  05C2  00E3               	movwf	??___ftmul+1
  3082  05C3  1683               	bsf	3,5	;RP0=1, select bank1
  3083  05C4  1303               	bcf	3,6	;RP1=0, select bank1
  3084  05C5  0822               	movf	(___ftmul@f1+2)^(0+128),w
  3085  05C6  1283               	bcf	3,5	;RP0=0, select bank0
  3086  05C7  1303               	bcf	3,6	;RP1=0, select bank0
  3087  05C8  00E4               	movwf	??___ftmul+2
  3088  05C9  1003               	clrc
  3089  05CA  0D63               	rlf	??___ftmul+1,w
  3090  05CB  0D64               	rlf	??___ftmul+2,w
  3091  05CC  00E5               	movwf	??___ftmul+3
  3092  05CD  0865               	movf	??___ftmul+3,w
  3093  05CE  1683               	bsf	3,5	;RP0=1, select bank1
  3094  05CF  1303               	bcf	3,6	;RP1=0, select bank1
  3095  05D0  00AC               	movwf	___ftmul@exp^(0+128)
  3096  05D1  08AC               	movf	___ftmul@exp^(0+128),f
  3097  05D2  1D03               	skipz
  3098  05D3  2DDB               	goto	l4020
  3099  05D4  3000               	movlw	0
  3100  05D5  00A0               	movwf	?___ftmul^(0+128)
  3101  05D6  3000               	movlw	0
  3102  05D7  00A1               	movwf	(?___ftmul+1)^(0+128)
  3103  05D8  3000               	movlw	0
  3104  05D9  00A2               	movwf	(?___ftmul+2)^(0+128)
  3105  05DA  0008               	return
  3106  05DB                     l4020:	
  3107  05DB  0823               	movf	___ftmul@f2^(0+128),w
  3108  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  3109  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  3110  05DE  00E2               	movwf	??___ftmul
  3111  05DF  1683               	bsf	3,5	;RP0=1, select bank1
  3112  05E0  1303               	bcf	3,6	;RP1=0, select bank1
  3113  05E1  0824               	movf	(___ftmul@f2+1)^(0+128),w
  3114  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  3115  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  3116  05E4  00E3               	movwf	??___ftmul+1
  3117  05E5  1683               	bsf	3,5	;RP0=1, select bank1
  3118  05E6  1303               	bcf	3,6	;RP1=0, select bank1
  3119  05E7  0825               	movf	(___ftmul@f2+2)^(0+128),w
  3120  05E8  1283               	bcf	3,5	;RP0=0, select bank0
  3121  05E9  1303               	bcf	3,6	;RP1=0, select bank0
  3122  05EA  00E4               	movwf	??___ftmul+2
  3123  05EB  1003               	clrc
  3124  05EC  0D63               	rlf	??___ftmul+1,w
  3125  05ED  0D64               	rlf	??___ftmul+2,w
  3126  05EE  00E5               	movwf	??___ftmul+3
  3127  05EF  0865               	movf	??___ftmul+3,w
  3128  05F0  1683               	bsf	3,5	;RP0=1, select bank1
  3129  05F1  1303               	bcf	3,6	;RP1=0, select bank1
  3130  05F2  00B1               	movwf	___ftmul@sign^(0+128)
  3131  05F3  08B1               	movf	___ftmul@sign^(0+128),f
  3132  05F4  1D03               	skipz
  3133  05F5  2DFD               	goto	l4026
  3134  05F6  3000               	movlw	0
  3135  05F7  00A0               	movwf	?___ftmul^(0+128)
  3136  05F8  3000               	movlw	0
  3137  05F9  00A1               	movwf	(?___ftmul+1)^(0+128)
  3138  05FA  3000               	movlw	0
  3139  05FB  00A2               	movwf	(?___ftmul+2)^(0+128)
  3140  05FC  0008               	return
  3141  05FD                     l4026:	
  3142  05FD  0831               	movf	___ftmul@sign^(0+128),w
  3143  05FE  3E7B               	addlw	123
  3144  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  3145  0600  1303               	bcf	3,6	;RP1=0, select bank0
  3146  0601  00E2               	movwf	??___ftmul
  3147  0602  0862               	movf	??___ftmul,w
  3148  0603  1683               	bsf	3,5	;RP0=1, select bank1
  3149  0604  1303               	bcf	3,6	;RP1=0, select bank1
  3150  0605  07AC               	addwf	___ftmul@exp^(0+128),f
  3151  0606  0820               	movf	___ftmul@f1^(0+128),w
  3152  0607  1283               	bcf	3,5	;RP0=0, select bank0
  3153  0608  1303               	bcf	3,6	;RP1=0, select bank0
  3154  0609  00E2               	movwf	??___ftmul
  3155  060A  1683               	bsf	3,5	;RP0=1, select bank1
  3156  060B  1303               	bcf	3,6	;RP1=0, select bank1
  3157  060C  0821               	movf	(___ftmul@f1+1)^(0+128),w
  3158  060D  1283               	bcf	3,5	;RP0=0, select bank0
  3159  060E  1303               	bcf	3,6	;RP1=0, select bank0
  3160  060F  00E3               	movwf	??___ftmul+1
  3161  0610  1683               	bsf	3,5	;RP0=1, select bank1
  3162  0611  1303               	bcf	3,6	;RP1=0, select bank1
  3163  0612  0822               	movf	(___ftmul@f1+2)^(0+128),w
  3164  0613  1283               	bcf	3,5	;RP0=0, select bank0
  3165  0614  1303               	bcf	3,6	;RP1=0, select bank0
  3166  0615  00E4               	movwf	??___ftmul+2
  3167  0616  3010               	movlw	16
  3168  0617                     u4955:	
  3169  0617  1003               	clrc
  3170  0618  0CE4               	rrf	??___ftmul+2,f
  3171  0619  0CE3               	rrf	??___ftmul+1,f
  3172  061A  0CE2               	rrf	??___ftmul,f
  3173  061B  3EFF               	addlw	-1
  3174  061C  1D03               	skipz
  3175  061D  2E17               	goto	u4955
  3176  061E  0862               	movf	??___ftmul,w
  3177  061F  00E5               	movwf	??___ftmul+3
  3178  0620  0865               	movf	??___ftmul+3,w
  3179  0621  1683               	bsf	3,5	;RP0=1, select bank1
  3180  0622  1303               	bcf	3,6	;RP1=0, select bank1
  3181  0623  00B1               	movwf	___ftmul@sign^(0+128)
  3182  0624  0823               	movf	___ftmul@f2^(0+128),w
  3183  0625  1283               	bcf	3,5	;RP0=0, select bank0
  3184  0626  1303               	bcf	3,6	;RP1=0, select bank0
  3185  0627  00E2               	movwf	??___ftmul
  3186  0628  1683               	bsf	3,5	;RP0=1, select bank1
  3187  0629  1303               	bcf	3,6	;RP1=0, select bank1
  3188  062A  0824               	movf	(___ftmul@f2+1)^(0+128),w
  3189  062B  1283               	bcf	3,5	;RP0=0, select bank0
  3190  062C  1303               	bcf	3,6	;RP1=0, select bank0
  3191  062D  00E3               	movwf	??___ftmul+1
  3192  062E  1683               	bsf	3,5	;RP0=1, select bank1
  3193  062F  1303               	bcf	3,6	;RP1=0, select bank1
  3194  0630  0825               	movf	(___ftmul@f2+2)^(0+128),w
  3195  0631  1283               	bcf	3,5	;RP0=0, select bank0
  3196  0632  1303               	bcf	3,6	;RP1=0, select bank0
  3197  0633  00E4               	movwf	??___ftmul+2
  3198  0634  3010               	movlw	16
  3199  0635                     u4965:	
  3200  0635  1003               	clrc
  3201  0636  0CE4               	rrf	??___ftmul+2,f
  3202  0637  0CE3               	rrf	??___ftmul+1,f
  3203  0638  0CE2               	rrf	??___ftmul,f
  3204  0639  3EFF               	addlw	-1
  3205  063A  1D03               	skipz
  3206  063B  2E35               	goto	u4965
  3207  063C  0862               	movf	??___ftmul,w
  3208  063D  00E5               	movwf	??___ftmul+3
  3209  063E  0865               	movf	??___ftmul+3,w
  3210  063F  1683               	bsf	3,5	;RP0=1, select bank1
  3211  0640  1303               	bcf	3,6	;RP1=0, select bank1
  3212  0641  06B1               	xorwf	___ftmul@sign^(0+128),f
  3213  0642  3080               	movlw	128
  3214  0643  1283               	bcf	3,5	;RP0=0, select bank0
  3215  0644  1303               	bcf	3,6	;RP1=0, select bank0
  3216  0645  00E2               	movwf	??___ftmul
  3217  0646  0862               	movf	??___ftmul,w
  3218  0647  1683               	bsf	3,5	;RP0=1, select bank1
  3219  0648  1303               	bcf	3,6	;RP1=0, select bank1
  3220  0649  05B1               	andwf	___ftmul@sign^(0+128),f
  3221  064A  17A1               	bsf	(___ftmul@f1^(0+128)+1),7
  3222  064B  17A4               	bsf	(___ftmul@f2^(0+128)+1),7
  3223  064C  30FF               	movlw	255
  3224  064D  05A3               	andwf	___ftmul@f2^(0+128),f
  3225  064E  30FF               	movlw	255
  3226  064F  05A4               	andwf	(___ftmul@f2+1)^(0+128),f
  3227  0650  3000               	movlw	0
  3228  0651  05A5               	andwf	(___ftmul@f2+2)^(0+128),f
  3229  0652  3000               	movlw	0
  3230  0653  00AD               	movwf	___ftmul@f3_as_product^(0+128)
  3231  0654  3000               	movlw	0
  3232  0655  00AE               	movwf	(___ftmul@f3_as_product+1)^(0+128)
  3233  0656  3000               	movlw	0
  3234  0657  00AF               	movwf	(___ftmul@f3_as_product+2)^(0+128)
  3235  0658  3007               	movlw	7
  3236  0659  1283               	bcf	3,5	;RP0=0, select bank0
  3237  065A  1303               	bcf	3,6	;RP1=0, select bank0
  3238  065B  00E2               	movwf	??___ftmul
  3239  065C  0862               	movf	??___ftmul,w
  3240  065D  1683               	bsf	3,5	;RP0=1, select bank1
  3241  065E  1303               	bcf	3,6	;RP1=0, select bank1
  3242  065F  00B0               	movwf	___ftmul@cntr^(0+128)
  3243  0660                     l4038:	
  3244  0660  1C20               	btfss	___ftmul@f1^(0+128),0
  3245  0661  2E70               	goto	l4042
  3246  0662  0823               	movf	___ftmul@f2^(0+128),w
  3247  0663  07AD               	addwf	___ftmul@f3_as_product^(0+128),f
  3248  0664  0824               	movf	(___ftmul@f2+1)^(0+128),w
  3249  0665  1103               	clrz
  3250  0666  1803               	skipnc
  3251  0667  0A24               	incf	(___ftmul@f2+1)^(0+128),w
  3252  0668  1D03               	btfss	3,2
  3253  0669  07AE               	addwf	(___ftmul@f3_as_product+1)^(0+128),f
  3254  066A  0825               	movf	(___ftmul@f2+2)^(0+128),w
  3255  066B  1103               	clrz
  3256  066C  1803               	skipnc
  3257  066D  0A25               	incf	(___ftmul@f2+2)^(0+128),w
  3258  066E  1D03               	btfss	3,2
  3259  066F  07AF               	addwf	(___ftmul@f3_as_product+2)^(0+128),f
  3260  0670                     l4042:	
  3261  0670  3001               	movlw	1
  3262  0671                     u4995:	
  3263  0671  1003               	clrc
  3264  0672  0CA2               	rrf	(___ftmul@f1+2)^(0+128),f
  3265  0673  0CA1               	rrf	(___ftmul@f1+1)^(0+128),f
  3266  0674  0CA0               	rrf	___ftmul@f1^(0+128),f
  3267  0675  3EFF               	addlw	-1
  3268  0676  1D03               	skipz
  3269  0677  2E71               	goto	u4995
  3270  0678  3001               	movlw	1
  3271  0679                     u5005:	
  3272  0679  1003               	clrc
  3273  067A  0DA3               	rlf	___ftmul@f2^(0+128),f
  3274  067B  0DA4               	rlf	(___ftmul@f2+1)^(0+128),f
  3275  067C  0DA5               	rlf	(___ftmul@f2+2)^(0+128),f
  3276  067D  3EFF               	addlw	-1
  3277  067E  1D03               	skipz
  3278  067F  2E79               	goto	u5005
  3279  0680  3001               	movlw	1
  3280  0681  02B0               	subwf	___ftmul@cntr^(0+128),f
  3281  0682  1D03               	btfss	3,2
  3282  0683  2E60               	goto	l4038
  3283  0684  3009               	movlw	9
  3284  0685  1283               	bcf	3,5	;RP0=0, select bank0
  3285  0686  1303               	bcf	3,6	;RP1=0, select bank0
  3286  0687  00E2               	movwf	??___ftmul
  3287  0688  0862               	movf	??___ftmul,w
  3288  0689  1683               	bsf	3,5	;RP0=1, select bank1
  3289  068A  1303               	bcf	3,6	;RP1=0, select bank1
  3290  068B  00B0               	movwf	___ftmul@cntr^(0+128)
  3291  068C                     l4050:	
  3292  068C  1C20               	btfss	___ftmul@f1^(0+128),0
  3293  068D  2E9C               	goto	l4054
  3294  068E  0823               	movf	___ftmul@f2^(0+128),w
  3295  068F  07AD               	addwf	___ftmul@f3_as_product^(0+128),f
  3296  0690  0824               	movf	(___ftmul@f2+1)^(0+128),w
  3297  0691  1103               	clrz
  3298  0692  1803               	skipnc
  3299  0693  0A24               	incf	(___ftmul@f2+1)^(0+128),w
  3300  0694  1D03               	btfss	3,2
  3301  0695  07AE               	addwf	(___ftmul@f3_as_product+1)^(0+128),f
  3302  0696  0825               	movf	(___ftmul@f2+2)^(0+128),w
  3303  0697  1103               	clrz
  3304  0698  1803               	skipnc
  3305  0699  0A25               	incf	(___ftmul@f2+2)^(0+128),w
  3306  069A  1D03               	btfss	3,2
  3307  069B  07AF               	addwf	(___ftmul@f3_as_product+2)^(0+128),f
  3308  069C                     l4054:	
  3309  069C  3001               	movlw	1
  3310  069D                     u5045:	
  3311  069D  1003               	clrc
  3312  069E  0CA2               	rrf	(___ftmul@f1+2)^(0+128),f
  3313  069F  0CA1               	rrf	(___ftmul@f1+1)^(0+128),f
  3314  06A0  0CA0               	rrf	___ftmul@f1^(0+128),f
  3315  06A1  3EFF               	addlw	-1
  3316  06A2  1D03               	skipz
  3317  06A3  2E9D               	goto	u5045
  3318  06A4  3001               	movlw	1
  3319  06A5                     u5055:	
  3320  06A5  1003               	clrc
  3321  06A6  0CAF               	rrf	(___ftmul@f3_as_product+2)^(0+128),f
  3322  06A7  0CAE               	rrf	(___ftmul@f3_as_product+1)^(0+128),f
  3323  06A8  0CAD               	rrf	___ftmul@f3_as_product^(0+128),f
  3324  06A9  3EFF               	addlw	-1
  3325  06AA  1D03               	skipz
  3326  06AB  2EA5               	goto	u5055
  3327  06AC  3001               	movlw	1
  3328  06AD  02B0               	subwf	___ftmul@cntr^(0+128),f
  3329  06AE  1D03               	btfss	3,2
  3330  06AF  2E8C               	goto	l4050
  3331  06B0  082D               	movf	___ftmul@f3_as_product^(0+128),w
  3332  06B1  00F0               	movwf	?___ftpack
  3333  06B2  082E               	movf	(___ftmul@f3_as_product+1)^(0+128),w
  3334  06B3  00F1               	movwf	?___ftpack+1
  3335  06B4  082F               	movf	(___ftmul@f3_as_product+2)^(0+128),w
  3336  06B5  00F2               	movwf	?___ftpack+2
  3337  06B6  082C               	movf	___ftmul@exp^(0+128),w
  3338  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  3339  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  3340  06B9  00E2               	movwf	??___ftmul
  3341  06BA  0862               	movf	??___ftmul,w
  3342  06BB  00F3               	movwf	?___ftpack+3
  3343  06BC  1683               	bsf	3,5	;RP0=1, select bank1
  3344  06BD  1303               	bcf	3,6	;RP1=0, select bank1
  3345  06BE  0831               	movf	___ftmul@sign^(0+128),w
  3346  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  3347  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  3348  06C1  00E3               	movwf	??___ftmul+1
  3349  06C2  0863               	movf	??___ftmul+1,w
  3350  06C3  00F4               	movwf	?___ftpack+4
  3351  06C4  120A  158A  25DA   	fcall	___ftpack
  3352  06C7  0870               	movf	?___ftpack,w
  3353  06C8  1683               	bsf	3,5	;RP0=1, select bank1
  3354  06C9  1303               	bcf	3,6	;RP1=0, select bank1
  3355  06CA  00A0               	movwf	?___ftmul^(0+128)
  3356  06CB  0871               	movf	?___ftpack+1,w
  3357  06CC  00A1               	movwf	(?___ftmul+1)^(0+128)
  3358  06CD  0872               	movf	?___ftpack+2,w
  3359  06CE  00A2               	movwf	(?___ftmul+2)^(0+128)
  3360  06CF  0008               	return
  3361  06D0                     __end_of___ftmul:	
  3362                           
  3363                           	psect	text14
  3364  00E2                     __ptext14:	
  3365 ;; *************** function _SetFrequency *****************
  3366 ;; Defined at:
  3367 ;;		line 80 in file "Main.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;  frequency       3   70[BANK0 ] float 
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;  frequencyB      2   23[BANK1 ] unsigned int 
  3372 ;;  frequencyL      1   22[BANK1 ] unsigned char 
  3373 ;;  frequencyH      1   21[BANK1 ] unsigned char 
  3374 ;; Return value:  Size  Location     Type
  3375 ;;		None               void
  3376 ;; Registers used:
  3377 ;;		wreg, status,2, status,0, pclath, cstack
  3378 ;; Tracked objects:
  3379 ;;		On entry : 0/0
  3380 ;;		On exit  : 0/0
  3381 ;;		Unchanged: 0/0
  3382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3383 ;;      Params:         0       3       0       0       0
  3384 ;;      Locals:         0       0       7       0       0
  3385 ;;      Temps:          1       0       0       0       0
  3386 ;;      Totals:         1       3       7       0       0
  3387 ;;Total ram usage:       11 bytes
  3388 ;; Hardware stack levels used:    1
  3389 ;; Hardware stack levels required when called:    2
  3390 ;; This function calls:
  3391 ;;		_I2C_Start
  3392 ;;		_I2C_Write_Byte
  3393 ;;		_I2C_Send_ACK
  3394 ;;		_I2C_Send_NACK
  3395 ;;		_I2C_Stop
  3396 ;;		___ftadd
  3397 ;;		___ftdiv
  3398 ;;		___ftmul
  3399 ;;		___fttol
  3400 ;; This function is called by:
  3401 ;;		_main
  3402 ;; This function uses a non-reentrant model
  3403 ;;
  3404                           
  3405                           
  3406                           ;psect for function _SetFrequency
  3407  00E2                     _SetFrequency:	
  3408                           
  3409                           ;Main.c: 82: unsigned char frequencyH=0;
  3410                           
  3411                           ;incstack = 0
  3412                           ; Regs used in _SetFrequency: [wreg+status,2+status,0+pclath+cstack]
  3413  00E2  1683               	bsf	3,5	;RP0=1, select bank1
  3414  00E3  1303               	bcf	3,6	;RP1=0, select bank1
  3415  00E4  01B5               	clrf	SetFrequency@frequencyH^(0+128)
  3416                           
  3417                           ;Main.c: 83: unsigned char frequencyL=0;
  3418  00E5  01B6               	clrf	SetFrequency@frequencyL^(0+128)
  3419                           
  3420                           ;Main.c: 84: unsigned int frequencyB;
  3421                           ;Main.c: 86: frequencyB = (4 * (frequency * 1000000 + 225000)) / 32768;
  3422  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  3423  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  3424  00E8  0866               	movf	SetFrequency@frequency,w
  3425  00E9  1683               	bsf	3,5	;RP0=1, select bank1
  3426  00EA  1303               	bcf	3,6	;RP1=0, select bank1
  3427  00EB  00A3               	movwf	(?___ftmul^(0+128)+3)
  3428  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  3429  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  3430  00EE  0867               	movf	SetFrequency@frequency+1,w
  3431  00EF  1683               	bsf	3,5	;RP0=1, select bank1
  3432  00F0  1303               	bcf	3,6	;RP1=0, select bank1
  3433  00F1  00A4               	movwf	((?___ftmul+1)^(0+128)+3)
  3434  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  3435  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  3436  00F4  0868               	movf	SetFrequency@frequency+2,w
  3437  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  3438  00F6  1303               	bcf	3,6	;RP1=0, select bank1
  3439  00F7  00A5               	movwf	((?___ftmul+2)^(0+128)+3)
  3440  00F8  3024               	movlw	36
  3441  00F9  00A0               	movwf	?___ftmul^(0+128)
  3442  00FA  3074               	movlw	116
  3443  00FB  00A1               	movwf	(?___ftmul+1)^(0+128)
  3444  00FC  3049               	movlw	73
  3445  00FD  00A2               	movwf	(?___ftmul+2)^(0+128)
  3446  00FE  120A  118A  25B7   	fcall	___ftmul
      +       120A  118A         
  3447  0103  1683               	bsf	3,5	;RP0=1, select bank1
  3448  0104  1303               	bcf	3,6	;RP1=0, select bank1
  3449  0105  0820               	movf	?___ftmul^(0+128),w
  3450  0106  1283               	bcf	3,5	;RP0=0, select bank0
  3451  0107  1303               	bcf	3,6	;RP1=0, select bank0
  3452  0108  00BF               	movwf	?___ftadd+3
  3453  0109  1683               	bsf	3,5	;RP0=1, select bank1
  3454  010A  1303               	bcf	3,6	;RP1=0, select bank1
  3455  010B  0821               	movf	(?___ftmul+1)^(0+128),w
  3456  010C  1283               	bcf	3,5	;RP0=0, select bank0
  3457  010D  1303               	bcf	3,6	;RP1=0, select bank0
  3458  010E  00C0               	movwf	?___ftadd+4
  3459  010F  1683               	bsf	3,5	;RP0=1, select bank1
  3460  0110  1303               	bcf	3,6	;RP1=0, select bank1
  3461  0111  0822               	movf	(?___ftmul+2)^(0+128),w
  3462  0112  1283               	bcf	3,5	;RP0=0, select bank0
  3463  0113  1303               	bcf	3,6	;RP1=0, select bank0
  3464  0114  00C1               	movwf	?___ftadd+5
  3465  0115  30BA               	movlw	186
  3466  0116  00BC               	movwf	?___ftadd
  3467  0117  305B               	movlw	91
  3468  0118  00BD               	movwf	?___ftadd+1
  3469  0119  3048               	movlw	72
  3470  011A  00BE               	movwf	?___ftadd+2
  3471  011B  120A  118A  24AE   	fcall	___ftadd
      +       120A  118A         
  3472  0120  1283               	bcf	3,5	;RP0=0, select bank0
  3473  0121  1303               	bcf	3,6	;RP1=0, select bank0
  3474  0122  083C               	movf	?___ftadd,w
  3475  0123  1683               	bsf	3,5	;RP0=1, select bank1
  3476  0124  1303               	bcf	3,6	;RP1=0, select bank1
  3477  0125  00B2               	movwf	_SetFrequency$809^(0+128)
  3478  0126  1283               	bcf	3,5	;RP0=0, select bank0
  3479  0127  1303               	bcf	3,6	;RP1=0, select bank0
  3480  0128  083D               	movf	?___ftadd+1,w
  3481  0129  1683               	bsf	3,5	;RP0=1, select bank1
  3482  012A  1303               	bcf	3,6	;RP1=0, select bank1
  3483  012B  00B3               	movwf	(_SetFrequency$809+1)^(0+128)
  3484  012C  1283               	bcf	3,5	;RP0=0, select bank0
  3485  012D  1303               	bcf	3,6	;RP1=0, select bank0
  3486  012E  083E               	movf	?___ftadd+2,w
  3487  012F  1683               	bsf	3,5	;RP0=1, select bank1
  3488  0130  1303               	bcf	3,6	;RP1=0, select bank1
  3489  0131  00B4               	movwf	(_SetFrequency$809+2)^(0+128)
  3490                           
  3491                           ;Main.c: 84: unsigned int frequencyB;
  3492                           ;Main.c: 86: frequencyB = (4 * (frequency * 1000000 + 225000)) / 32768;
  3493  0132  0832               	movf	_SetFrequency$809^(0+128),w
  3494  0133  00A3               	movwf	(?___ftmul^(0+128)+3)
  3495  0134  0833               	movf	(_SetFrequency$809+1)^(0+128),w
  3496  0135  00A4               	movwf	((?___ftmul+1)^(0+128)+3)
  3497  0136  0834               	movf	(_SetFrequency$809+2)^(0+128),w
  3498  0137  00A5               	movwf	((?___ftmul+2)^(0+128)+3)
  3499  0138  3000               	movlw	0
  3500  0139  00A0               	movwf	?___ftmul^(0+128)
  3501  013A  3080               	movlw	128
  3502  013B  00A1               	movwf	(?___ftmul+1)^(0+128)
  3503  013C  3040               	movlw	64
  3504  013D  00A2               	movwf	(?___ftmul+2)^(0+128)
  3505  013E  120A  118A  25B7   	fcall	___ftmul
      +       120A  118A         
  3506  0143  1683               	bsf	3,5	;RP0=1, select bank1
  3507  0144  1303               	bcf	3,6	;RP1=0, select bank1
  3508  0145  0820               	movf	?___ftmul^(0+128),w
  3509  0146  1283               	bcf	3,5	;RP0=0, select bank0
  3510  0147  1303               	bcf	3,6	;RP1=0, select bank0
  3511  0148  00CF               	movwf	?___ftdiv+3
  3512  0149  1683               	bsf	3,5	;RP0=1, select bank1
  3513  014A  1303               	bcf	3,6	;RP1=0, select bank1
  3514  014B  0821               	movf	(?___ftmul+1)^(0+128),w
  3515  014C  1283               	bcf	3,5	;RP0=0, select bank0
  3516  014D  1303               	bcf	3,6	;RP1=0, select bank0
  3517  014E  00D0               	movwf	?___ftdiv+4
  3518  014F  1683               	bsf	3,5	;RP0=1, select bank1
  3519  0150  1303               	bcf	3,6	;RP1=0, select bank1
  3520  0151  0822               	movf	(?___ftmul+2)^(0+128),w
  3521  0152  1283               	bcf	3,5	;RP0=0, select bank0
  3522  0153  1303               	bcf	3,6	;RP1=0, select bank0
  3523  0154  00D1               	movwf	?___ftdiv+5
  3524  0155  3000               	movlw	0
  3525  0156  00CC               	movwf	?___ftdiv
  3526  0157  3000               	movlw	0
  3527  0158  00CD               	movwf	?___ftdiv+1
  3528  0159  3047               	movlw	71
  3529  015A  00CE               	movwf	?___ftdiv+2
  3530  015B  120A  118A  202A   	fcall	___ftdiv
      +       120A  118A         
  3531  0160  1283               	bcf	3,5	;RP0=0, select bank0
  3532  0161  1303               	bcf	3,6	;RP1=0, select bank0
  3533  0162  084C               	movf	?___ftdiv,w
  3534  0163  00A8               	movwf	?___fttol
  3535  0164  084D               	movf	?___ftdiv+1,w
  3536  0165  00A9               	movwf	?___fttol+1
  3537  0166  084E               	movf	?___ftdiv+2,w
  3538  0167  00AA               	movwf	?___fttol+2
  3539  0168  120A  158A  2642   	fcall	___fttol
      +       120A  118A         
  3540  016D  1283               	bcf	3,5	;RP0=0, select bank0
  3541  016E  1303               	bcf	3,6	;RP1=0, select bank0
  3542  016F  0829               	movf	?___fttol+1,w
  3543  0170  1683               	bsf	3,5	;RP0=1, select bank1
  3544  0171  1303               	bcf	3,6	;RP1=0, select bank1
  3545  0172  01B8               	clrf	(SetFrequency@frequencyB+1)^(0+128)
  3546  0173  07B8               	addwf	(SetFrequency@frequencyB+1)^(0+128),f
  3547  0174  1283               	bcf	3,5	;RP0=0, select bank0
  3548  0175  1303               	bcf	3,6	;RP1=0, select bank0
  3549  0176  0828               	movf	?___fttol,w
  3550  0177  1683               	bsf	3,5	;RP0=1, select bank1
  3551  0178  1303               	bcf	3,6	;RP1=0, select bank1
  3552  0179  01B7               	clrf	SetFrequency@frequencyB^(0+128)
  3553  017A  07B7               	addwf	SetFrequency@frequencyB^(0+128),f
  3554                           
  3555                           ;Main.c: 87: frequencyH = frequencyB >> 8;
  3556  017B  0838               	movf	(SetFrequency@frequencyB+1)^(0+128),w
  3557  017C  00FD               	movwf	??_SetFrequency
  3558  017D  087D               	movf	??_SetFrequency,w
  3559  017E  00B5               	movwf	SetFrequency@frequencyH^(0+128)
  3560                           
  3561                           ;Main.c: 88: frequencyL = frequencyB & 0xff;
  3562  017F  0837               	movf	SetFrequency@frequencyB^(0+128),w
  3563  0180  00FD               	movwf	??_SetFrequency
  3564  0181  087D               	movf	??_SetFrequency,w
  3565  0182  00B6               	movwf	SetFrequency@frequencyL^(0+128)
  3566                           
  3567                           ;Main.c: 90: I2C_Start();
  3568  0183  120A  158A  23C8   	fcall	_I2C_Start
      +       120A  118A         
  3569                           
  3570                           ;Main.c: 91: I2C_Write_Byte(0xC0);
  3571  0188  30C0               	movlw	192
  3572  0189  120A  158A  2406   	fcall	_I2C_Write_Byte
      +       120A  118A         
  3573                           
  3574                           ;Main.c: 92: I2C_Send_ACK();
  3575  018E  120A  158A  2432   	fcall	_I2C_Send_ACK
      +       120A  118A         
  3576                           
  3577                           ;Main.c: 93: I2C_Write_Byte(frequencyH);
  3578  0193  1683               	bsf	3,5	;RP0=1, select bank1
  3579  0194  1303               	bcf	3,6	;RP1=0, select bank1
  3580  0195  0835               	movf	SetFrequency@frequencyH^(0+128),w
  3581  0196  120A  158A  2406   	fcall	_I2C_Write_Byte
      +       120A  118A         
  3582                           
  3583                           ;Main.c: 94: I2C_Write_Byte(frequencyL);
  3584  019B  1683               	bsf	3,5	;RP0=1, select bank1
  3585  019C  1303               	bcf	3,6	;RP1=0, select bank1
  3586  019D  0836               	movf	SetFrequency@frequencyL^(0+128),w
  3587  019E  120A  158A  2406   	fcall	_I2C_Write_Byte
      +       120A  118A         
  3588                           
  3589                           ;Main.c: 95: I2C_Write_Byte(0xB0);
  3590  01A3  30B0               	movlw	176
  3591  01A4  120A  158A  2406   	fcall	_I2C_Write_Byte
      +       120A  118A         
  3592                           
  3593                           ;Main.c: 96: I2C_Write_Byte(0x10);
  3594  01A9  3010               	movlw	16
  3595  01AA  120A  158A  2406   	fcall	_I2C_Write_Byte
      +       120A  118A         
  3596                           
  3597                           ;Main.c: 97: I2C_Write_Byte(0x00);
  3598  01AF  3000               	movlw	0
  3599  01B0  120A  158A  2406   	fcall	_I2C_Write_Byte
      +       120A  118A         
  3600                           
  3601                           ;Main.c: 98: I2C_Send_NACK();
  3602  01B5  120A  158A  23E8   	fcall	_I2C_Send_NACK
      +       120A  118A         
  3603                           
  3604                           ;Main.c: 99: I2C_Stop();
  3605  01BA  120A  158A  23C1   	fcall	_I2C_Stop
  3606  01BD  0008               	return
  3607  01BE                     __end_of_SetFrequency:	
  3608                           
  3609                           	psect	text15
  3610  04AE                     __ptext15:	
  3611 ;; *************** function ___ftadd *****************
  3612 ;; Defined at:
  3613 ;;		line 87 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\ftadd.c"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;  f1              3   28[BANK0 ] float 
  3616 ;;  f2              3   31[BANK0 ] float 
  3617 ;; Auto vars:     Size  Location     Type
  3618 ;;  exp1            1   43[BANK0 ] unsigned char 
  3619 ;;  exp2            1   42[BANK0 ] unsigned char 
  3620 ;;  sign            1   41[BANK0 ] unsigned char 
  3621 ;; Return value:  Size  Location     Type
  3622 ;;                  3   28[BANK0 ] float 
  3623 ;; Registers used:
  3624 ;;		wreg, status,2, status,0, pclath, cstack
  3625 ;; Tracked objects:
  3626 ;;		On entry : 0/0
  3627 ;;		On exit  : 0/0
  3628 ;;		Unchanged: 0/0
  3629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3630 ;;      Params:         0       6       0       0       0
  3631 ;;      Locals:         0       6       0       0       0
  3632 ;;      Temps:          0       4       0       0       0
  3633 ;;      Totals:         0      16       0       0       0
  3634 ;;Total ram usage:       16 bytes
  3635 ;; Hardware stack levels used:    1
  3636 ;; Hardware stack levels required when called:    1
  3637 ;; This function calls:
  3638 ;;		___ftpack
  3639 ;; This function is called by:
  3640 ;;		_SetFrequency
  3641 ;;		_SearchUp
  3642 ;;		_SearchDown
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645                           
  3646                           
  3647                           ;psect for function ___ftadd
  3648  04AE                     ___ftadd:	
  3649                           
  3650                           ;incstack = 0
  3651                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3652  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  3653  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  3654  04B0  083C               	movf	___ftadd@f1,w
  3655  04B1  00C2               	movwf	??___ftadd
  3656  04B2  083D               	movf	___ftadd@f1+1,w
  3657  04B3  00C3               	movwf	??___ftadd+1
  3658  04B4  083E               	movf	___ftadd@f1+2,w
  3659  04B5  00C4               	movwf	??___ftadd+2
  3660  04B6  1003               	clrc
  3661  04B7  0D43               	rlf	??___ftadd+1,w
  3662  04B8  0D44               	rlf	??___ftadd+2,w
  3663  04B9  00C5               	movwf	??___ftadd+3
  3664  04BA  0845               	movf	??___ftadd+3,w
  3665  04BB  00CB               	movwf	___ftadd@exp1
  3666  04BC  083F               	movf	___ftadd@f2,w
  3667  04BD  00C2               	movwf	??___ftadd
  3668  04BE  0840               	movf	___ftadd@f2+1,w
  3669  04BF  00C3               	movwf	??___ftadd+1
  3670  04C0  0841               	movf	___ftadd@f2+2,w
  3671  04C1  00C4               	movwf	??___ftadd+2
  3672  04C2  1003               	clrc
  3673  04C3  0D43               	rlf	??___ftadd+1,w
  3674  04C4  0D44               	rlf	??___ftadd+2,w
  3675  04C5  00C5               	movwf	??___ftadd+3
  3676  04C6  0845               	movf	??___ftadd+3,w
  3677  04C7  00CA               	movwf	___ftadd@exp2
  3678  04C8  084B               	movf	___ftadd@exp1,w
  3679  04C9  1903               	btfsc	3,2
  3680  04CA  2CD7               	goto	l3950
  3681  04CB  084A               	movf	___ftadd@exp2,w
  3682  04CC  024B               	subwf	___ftadd@exp1,w
  3683  04CD  1803               	skipnc
  3684  04CE  2CDE               	goto	l3954
  3685  04CF  034B               	decf	___ftadd@exp1,w
  3686  04D0  3AFF               	xorlw	255
  3687  04D1  074A               	addwf	___ftadd@exp2,w
  3688  04D2  00C2               	movwf	??___ftadd
  3689  04D3  3019               	movlw	25
  3690  04D4  0242               	subwf	??___ftadd,w
  3691  04D5  1C03               	skipc
  3692  04D6  2CDE               	goto	l3954
  3693  04D7                     l3950:	
  3694  04D7  083F               	movf	___ftadd@f2,w
  3695  04D8  00BC               	movwf	?___ftadd
  3696  04D9  0840               	movf	___ftadd@f2+1,w
  3697  04DA  00BD               	movwf	?___ftadd+1
  3698  04DB  0841               	movf	___ftadd@f2+2,w
  3699  04DC  00BE               	movwf	?___ftadd+2
  3700  04DD  0008               	return
  3701  04DE                     l3954:	
  3702  04DE  084A               	movf	___ftadd@exp2,w
  3703  04DF  1903               	btfsc	3,2
  3704  04E0  0008               	return
  3705  04E1  084B               	movf	___ftadd@exp1,w
  3706  04E2  024A               	subwf	___ftadd@exp2,w
  3707  04E3  1803               	skipnc
  3708  04E4  2CED               	goto	l3960
  3709  04E5  034A               	decf	___ftadd@exp2,w
  3710  04E6  3AFF               	xorlw	255
  3711  04E7  074B               	addwf	___ftadd@exp1,w
  3712  04E8  00C2               	movwf	??___ftadd
  3713  04E9  3019               	movlw	25
  3714  04EA  0242               	subwf	??___ftadd,w
  3715  04EB  1803               	btfsc	3,0
  3716  04EC  0008               	return
  3717  04ED                     l3960:	
  3718  04ED  3006               	movlw	6
  3719  04EE  00C2               	movwf	??___ftadd
  3720  04EF  0842               	movf	??___ftadd,w
  3721  04F0  00C9               	movwf	___ftadd@sign
  3722  04F1  1BBE               	btfsc	___ftadd@f1+2,7
  3723  04F2  17C9               	bsf	___ftadd@sign,7
  3724  04F3  1BC1               	btfsc	___ftadd@f2+2,7
  3725  04F4  1749               	bsf	___ftadd@sign,6
  3726  04F5  17BD               	bsf	___ftadd@f1+1,7
  3727  04F6  30FF               	movlw	255
  3728  04F7  05BC               	andwf	___ftadd@f1,f
  3729  04F8  30FF               	movlw	255
  3730  04F9  05BD               	andwf	___ftadd@f1+1,f
  3731  04FA  3000               	movlw	0
  3732  04FB  05BE               	andwf	___ftadd@f1+2,f
  3733  04FC  17C0               	bsf	___ftadd@f2+1,7
  3734  04FD  30FF               	movlw	255
  3735  04FE  05BF               	andwf	___ftadd@f2,f
  3736  04FF  30FF               	movlw	255
  3737  0500  05C0               	andwf	___ftadd@f2+1,f
  3738  0501  3000               	movlw	0
  3739  0502  05C1               	andwf	___ftadd@f2+2,f
  3740  0503  084A               	movf	___ftadd@exp2,w
  3741  0504  024B               	subwf	___ftadd@exp1,w
  3742  0505  1803               	skipnc
  3743  0506  2D2D               	goto	l3982
  3744  0507                     l3972:	
  3745  0507  3001               	movlw	1
  3746  0508                     u4785:	
  3747  0508  1003               	clrc
  3748  0509  0DBF               	rlf	___ftadd@f2,f
  3749  050A  0DC0               	rlf	___ftadd@f2+1,f
  3750  050B  0DC1               	rlf	___ftadd@f2+2,f
  3751  050C  3EFF               	addlw	-1
  3752  050D  1D03               	skipz
  3753  050E  2D08               	goto	u4785
  3754  050F  3001               	movlw	1
  3755  0510  02CA               	subwf	___ftadd@exp2,f
  3756  0511  084A               	movf	___ftadd@exp2,w
  3757  0512  064B               	xorwf	___ftadd@exp1,w
  3758  0513  1903               	skipnz
  3759  0514  2D28               	goto	l3980
  3760  0515  3001               	movlw	1
  3761  0516  02C9               	subwf	___ftadd@sign,f
  3762  0517  0849               	movf	___ftadd@sign,w
  3763  0518  3907               	andlw	7
  3764  0519  1903               	btfsc	3,2
  3765  051A  2D28               	goto	l3980
  3766  051B  2D07               	goto	l3972
  3767  051C                     l3978:	
  3768  051C  3001               	movlw	1
  3769  051D                     u4815:	
  3770  051D  1003               	clrc
  3771  051E  0CBE               	rrf	___ftadd@f1+2,f
  3772  051F  0CBD               	rrf	___ftadd@f1+1,f
  3773  0520  0CBC               	rrf	___ftadd@f1,f
  3774  0521  3EFF               	addlw	-1
  3775  0522  1D03               	skipz
  3776  0523  2D1D               	goto	u4815
  3777  0524  3001               	movlw	1
  3778  0525  00C2               	movwf	??___ftadd
  3779  0526  0842               	movf	??___ftadd,w
  3780  0527  07CB               	addwf	___ftadd@exp1,f
  3781  0528                     l3980:	
  3782  0528  084B               	movf	___ftadd@exp1,w
  3783  0529  064A               	xorwf	___ftadd@exp2,w
  3784  052A  1903               	btfsc	3,2
  3785  052B  2D56               	goto	l463
  3786  052C  2D1C               	goto	l3978
  3787  052D                     l3982:	
  3788  052D  084B               	movf	___ftadd@exp1,w
  3789  052E  024A               	subwf	___ftadd@exp2,w
  3790  052F  1803               	skipnc
  3791  0530  2D56               	goto	l463
  3792  0531                     l3984:	
  3793  0531  3001               	movlw	1
  3794  0532                     u4845:	
  3795  0532  1003               	clrc
  3796  0533  0DBC               	rlf	___ftadd@f1,f
  3797  0534  0DBD               	rlf	___ftadd@f1+1,f
  3798  0535  0DBE               	rlf	___ftadd@f1+2,f
  3799  0536  3EFF               	addlw	-1
  3800  0537  1D03               	skipz
  3801  0538  2D32               	goto	u4845
  3802  0539  3001               	movlw	1
  3803  053A  02CB               	subwf	___ftadd@exp1,f
  3804  053B  084A               	movf	___ftadd@exp2,w
  3805  053C  064B               	xorwf	___ftadd@exp1,w
  3806  053D  1903               	skipnz
  3807  053E  2D52               	goto	l3992
  3808  053F  3001               	movlw	1
  3809  0540  02C9               	subwf	___ftadd@sign,f
  3810  0541  0849               	movf	___ftadd@sign,w
  3811  0542  3907               	andlw	7
  3812  0543  1903               	btfsc	3,2
  3813  0544  2D52               	goto	l3992
  3814  0545  2D31               	goto	l3984
  3815  0546                     l3990:	
  3816  0546  3001               	movlw	1
  3817  0547                     u4875:	
  3818  0547  1003               	clrc
  3819  0548  0CC1               	rrf	___ftadd@f2+2,f
  3820  0549  0CC0               	rrf	___ftadd@f2+1,f
  3821  054A  0CBF               	rrf	___ftadd@f2,f
  3822  054B  3EFF               	addlw	-1
  3823  054C  1D03               	skipz
  3824  054D  2D47               	goto	u4875
  3825  054E  3001               	movlw	1
  3826  054F  00C2               	movwf	??___ftadd
  3827  0550  0842               	movf	??___ftadd,w
  3828  0551  07CA               	addwf	___ftadd@exp2,f
  3829  0552                     l3992:	
  3830  0552  084B               	movf	___ftadd@exp1,w
  3831  0553  064A               	xorwf	___ftadd@exp2,w
  3832  0554  1D03               	skipz
  3833  0555  2D46               	goto	l3990
  3834  0556                     l463:	
  3835  0556  1FC9               	btfss	___ftadd@sign,7
  3836  0557  2D68               	goto	l3996
  3837  0558  30FF               	movlw	255
  3838  0559  06BC               	xorwf	___ftadd@f1,f
  3839  055A  30FF               	movlw	255
  3840  055B  06BD               	xorwf	___ftadd@f1+1,f
  3841  055C  30FF               	movlw	255
  3842  055D  06BE               	xorwf	___ftadd@f1+2,f
  3843  055E  3001               	movlw	1
  3844  055F  07BC               	addwf	___ftadd@f1,f
  3845  0560  3000               	movlw	0
  3846  0561  1803               	skipnc
  3847  0562  3001               	movlw	1
  3848  0563  07BD               	addwf	___ftadd@f1+1,f
  3849  0564  3000               	movlw	0
  3850  0565  1803               	skipnc
  3851  0566  3001               	movlw	1
  3852  0567  07BE               	addwf	___ftadd@f1+2,f
  3853  0568                     l3996:	
  3854  0568  1F49               	btfss	___ftadd@sign,6
  3855  0569  2D7A               	goto	l4000
  3856  056A  30FF               	movlw	255
  3857  056B  06BF               	xorwf	___ftadd@f2,f
  3858  056C  30FF               	movlw	255
  3859  056D  06C0               	xorwf	___ftadd@f2+1,f
  3860  056E  30FF               	movlw	255
  3861  056F  06C1               	xorwf	___ftadd@f2+2,f
  3862  0570  3001               	movlw	1
  3863  0571  07BF               	addwf	___ftadd@f2,f
  3864  0572  3000               	movlw	0
  3865  0573  1803               	skipnc
  3866  0574  3001               	movlw	1
  3867  0575  07C0               	addwf	___ftadd@f2+1,f
  3868  0576  3000               	movlw	0
  3869  0577  1803               	skipnc
  3870  0578  3001               	movlw	1
  3871  0579  07C1               	addwf	___ftadd@f2+2,f
  3872  057A                     l4000:	
  3873  057A  01C9               	clrf	___ftadd@sign
  3874  057B  083C               	movf	___ftadd@f1,w
  3875  057C  07BF               	addwf	___ftadd@f2,f
  3876  057D  083D               	movf	___ftadd@f1+1,w
  3877  057E  1103               	clrz
  3878  057F  1803               	skipnc
  3879  0580  0A3D               	incf	___ftadd@f1+1,w
  3880  0581  1D03               	btfss	3,2
  3881  0582  07C0               	addwf	___ftadd@f2+1,f
  3882  0583  083E               	movf	___ftadd@f1+2,w
  3883  0584  1103               	clrz
  3884  0585  1803               	skipnc
  3885  0586  0A3E               	incf	___ftadd@f1+2,w
  3886  0587  1D03               	btfss	3,2
  3887  0588  07C1               	addwf	___ftadd@f2+2,f
  3888  0589  1FC1               	btfss	___ftadd@f2+2,7
  3889  058A  2D9D               	goto	l4010
  3890  058B  30FF               	movlw	255
  3891  058C  06BF               	xorwf	___ftadd@f2,f
  3892  058D  30FF               	movlw	255
  3893  058E  06C0               	xorwf	___ftadd@f2+1,f
  3894  058F  30FF               	movlw	255
  3895  0590  06C1               	xorwf	___ftadd@f2+2,f
  3896  0591  3001               	movlw	1
  3897  0592  07BF               	addwf	___ftadd@f2,f
  3898  0593  3000               	movlw	0
  3899  0594  1803               	skipnc
  3900  0595  3001               	movlw	1
  3901  0596  07C0               	addwf	___ftadd@f2+1,f
  3902  0597  3000               	movlw	0
  3903  0598  1803               	skipnc
  3904  0599  3001               	movlw	1
  3905  059A  07C1               	addwf	___ftadd@f2+2,f
  3906  059B  01C9               	clrf	___ftadd@sign
  3907  059C  0AC9               	incf	___ftadd@sign,f
  3908  059D                     l4010:	
  3909  059D  083F               	movf	___ftadd@f2,w
  3910  059E  00F0               	movwf	?___ftpack
  3911  059F  0840               	movf	___ftadd@f2+1,w
  3912  05A0  00F1               	movwf	?___ftpack+1
  3913  05A1  0841               	movf	___ftadd@f2+2,w
  3914  05A2  00F2               	movwf	?___ftpack+2
  3915  05A3  084B               	movf	___ftadd@exp1,w
  3916  05A4  00C2               	movwf	??___ftadd
  3917  05A5  0842               	movf	??___ftadd,w
  3918  05A6  00F3               	movwf	?___ftpack+3
  3919  05A7  0849               	movf	___ftadd@sign,w
  3920  05A8  00C3               	movwf	??___ftadd+1
  3921  05A9  0843               	movf	??___ftadd+1,w
  3922  05AA  00F4               	movwf	?___ftpack+4
  3923  05AB  120A  158A  25DA   	fcall	___ftpack
  3924  05AE  0870               	movf	?___ftpack,w
  3925  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  3926  05B0  1303               	bcf	3,6	;RP1=0, select bank0
  3927  05B1  00BC               	movwf	?___ftadd
  3928  05B2  0871               	movf	?___ftpack+1,w
  3929  05B3  00BD               	movwf	?___ftadd+1
  3930  05B4  0872               	movf	?___ftpack+2,w
  3931  05B5  00BE               	movwf	?___ftadd+2
  3932  05B6  0008               	return
  3933  05B7                     __end_of___ftadd:	
  3934                           
  3935                           	psect	text16
  3936  0CD8                     __ptext16:	
  3937 ;; *************** function _lcd_putstr *****************
  3938 ;; Defined at:
  3939 ;;		line 242 in file "lcd.c"
  3940 ;; Parameters:    Size  Location     Type
  3941 ;;  csz_string      1    wreg     PTR const unsigned char 
  3942 ;;		 -> STR_1(11), 
  3943 ;; Auto vars:     Size  Location     Type
  3944 ;;  csz_string      1    8[COMMON] PTR const unsigned char 
  3945 ;;		 -> STR_1(11), 
  3946 ;; Return value:  Size  Location     Type
  3947 ;;		None               void
  3948 ;; Registers used:
  3949 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3950 ;; Tracked objects:
  3951 ;;		On entry : 0/0
  3952 ;;		On exit  : 0/0
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3955 ;;      Params:         0       0       0       0       0
  3956 ;;      Locals:         1       0       0       0       0
  3957 ;;      Temps:          1       0       0       0       0
  3958 ;;      Totals:         2       0       0       0       0
  3959 ;;Total ram usage:        2 bytes
  3960 ;; Hardware stack levels used:    1
  3961 ;; Hardware stack levels required when called:    3
  3962 ;; This function calls:
  3963 ;;		_lcd_2ndline
  3964 ;;		_lcd_putchar
  3965 ;; This function is called by:
  3966 ;;		_main
  3967 ;; This function uses a non-reentrant model
  3968 ;;
  3969                           
  3970                           
  3971                           ;psect for function _lcd_putstr
  3972  0CD8                     _lcd_putstr:	
  3973                           
  3974                           ;incstack = 0
  3975                           ; Regs used in _lcd_putstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3976                           ;lcd_putstr@csz_string stored from wreg
  3977  0CD8  00F8               	movwf	lcd_putstr@csz_string
  3978  0CD9                     l2326:	
  3979                           ;lcd.c: 244: while (*csz_string != '\0') {
  3980                           
  3981  0CD9  0878               	movf	lcd_putstr@csz_string,w
  3982  0CDA  0084               	movwf	4
  3983  0CDB  120A  118A  2003   	fcall	stringdir
      +       120A  158A         
  3984  0CE0  3800               	iorlw	0
  3985  0CE1  1903               	btfsc	3,2
  3986  0CE2  0008               	return
  3987                           
  3988                           ;lcd.c: 247: if (*csz_string == '\n' || *csz_string == '\r') {
  3989  0CE3  0878               	movf	lcd_putstr@csz_string,w
  3990  0CE4  0084               	movwf	4
  3991  0CE5  120A  118A  2003   	fcall	stringdir
      +       120A  158A         
  3992  0CEA  3A0A               	xorlw	10
  3993  0CEB  1903               	skipnz
  3994  0CEC  2CF7               	goto	l2320
  3995  0CED  0878               	movf	lcd_putstr@csz_string,w
  3996  0CEE  0084               	movwf	4
  3997  0CEF  120A  118A  2003   	fcall	stringdir
      +       120A  158A         
  3998  0CF4  3A0D               	xorlw	13
  3999  0CF5  1D03               	skipz
  4000  0CF6  2CFD               	goto	l2322
  4001  0CF7                     l2320:	
  4002                           
  4003                           ;lcd.c: 248: lcd_2ndline();
  4004  0CF7  120A  158A  23DF   	fcall	_lcd_2ndline
      +       120A  158A         
  4005                           
  4006                           ;lcd.c: 249: }
  4007  0CFC  2D09               	goto	l2324
  4008  0CFD                     l2322:	
  4009                           
  4010                           ;lcd.c: 252: else {
  4011                           ;lcd.c: 253: lcd_putchar(*csz_string);
  4012  0CFD  0878               	movf	lcd_putstr@csz_string,w
  4013  0CFE  0084               	movwf	4
  4014  0CFF  120A  118A  2003   	fcall	stringdir
      +       120A  158A         
  4015  0D04  120A  158A  23F2   	fcall	_lcd_putchar
      +       120A  158A         
  4016  0D09                     l2324:	
  4017                           
  4018                           ;lcd.c: 254: }
  4019                           ;lcd.c: 257: csz_string++;
  4020  0D09  3001               	movlw	1
  4021  0D0A  00F7               	movwf	??_lcd_putstr
  4022  0D0B  0877               	movf	??_lcd_putstr,w
  4023  0D0C  07F8               	addwf	lcd_putstr@csz_string,f
  4024  0D0D  2CD9               	goto	l2326
  4025  0D0E                     __end_of_lcd_putstr:	
  4026                           
  4027                           	psect	text17
  4028  0BF2                     __ptext17:	
  4029 ;; *************** function _lcd_putchar *****************
  4030 ;; Defined at:
  4031 ;;		line 221 in file "lcd.c"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;  c_data          1    wreg     unsigned char 
  4034 ;; Auto vars:     Size  Location     Type
  4035 ;;  c_data          1    6[COMMON] unsigned char 
  4036 ;; Return value:  Size  Location     Type
  4037 ;;		None               void
  4038 ;; Registers used:
  4039 ;;		wreg, status,2, status,0, pclath, cstack
  4040 ;; Tracked objects:
  4041 ;;		On entry : 0/0
  4042 ;;		On exit  : 0/0
  4043 ;;		Unchanged: 0/0
  4044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4045 ;;      Params:         0       0       0       0       0
  4046 ;;      Locals:         1       0       0       0       0
  4047 ;;      Temps:          1       0       0       0       0
  4048 ;;      Totals:         2       0       0       0       0
  4049 ;;Total ram usage:        2 bytes
  4050 ;; Hardware stack levels used:    1
  4051 ;; Hardware stack levels required when called:    2
  4052 ;; This function calls:
  4053 ;;		_send_lcd_data
  4054 ;; This function is called by:
  4055 ;;		_lcd_putstr
  4056 ;;		_lcd_bcd
  4057 ;; This function uses a non-reentrant model
  4058 ;;
  4059                           
  4060                           
  4061                           ;psect for function _lcd_putchar
  4062  0BF2                     _lcd_putchar:	
  4063                           
  4064                           ;incstack = 0
  4065                           ; Regs used in _lcd_putchar: [wreg+status,2+status,0+pclath+cstack]
  4066                           ;lcd_putchar@c_data stored from wreg
  4067  0BF2  00F6               	movwf	lcd_putchar@c_data
  4068                           
  4069                           ;lcd.c: 223: send_lcd_data(1, (unsigned char)c_data);
  4070  0BF3  0876               	movf	lcd_putchar@c_data,w
  4071  0BF4  00F5               	movwf	??_lcd_putchar
  4072  0BF5  0875               	movf	??_lcd_putchar,w
  4073  0BF6  00F1               	movwf	?_send_lcd_data
  4074  0BF7  3001               	movlw	1
  4075  0BF8  120A  158A  24A3   	fcall	_send_lcd_data
  4076  0BFB  0008               	return
  4077  0BFC                     __end_of_lcd_putchar:	
  4078                           
  4079                           	psect	text18
  4080  0BDF                     __ptext18:	
  4081 ;; *************** function _lcd_2ndline *****************
  4082 ;; Defined at:
  4083 ;;		line 179 in file "lcd.c"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;		None
  4086 ;; Auto vars:     Size  Location     Type
  4087 ;;		None
  4088 ;; Return value:  Size  Location     Type
  4089 ;;		None               void
  4090 ;; Registers used:
  4091 ;;		wreg, status,2, status,0, pclath, cstack
  4092 ;; Tracked objects:
  4093 ;;		On entry : 0/0
  4094 ;;		On exit  : 0/0
  4095 ;;		Unchanged: 0/0
  4096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4097 ;;      Params:         0       0       0       0       0
  4098 ;;      Locals:         0       0       0       0       0
  4099 ;;      Temps:          1       0       0       0       0
  4100 ;;      Totals:         1       0       0       0       0
  4101 ;;Total ram usage:        1 bytes
  4102 ;; Hardware stack levels used:    1
  4103 ;; Hardware stack levels required when called:    2
  4104 ;; This function calls:
  4105 ;;		_send_lcd_data
  4106 ;; This function is called by:
  4107 ;;		_lcd_putstr
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111                           
  4112                           ;psect for function _lcd_2ndline
  4113  0BDF                     _lcd_2ndline:	
  4114                           
  4115                           ;lcd.c: 181: send_lcd_data(0, 0b10000000 | 0x40);
  4116                           
  4117                           ;incstack = 0
  4118                           ; Regs used in _lcd_2ndline: [wreg+status,2+status,0+pclath+cstack]
  4119  0BDF  30C0               	movlw	192
  4120  0BE0  00F5               	movwf	??_lcd_2ndline
  4121  0BE1  0875               	movf	??_lcd_2ndline,w
  4122  0BE2  00F1               	movwf	?_send_lcd_data
  4123  0BE3  3000               	movlw	0
  4124  0BE4  120A  158A  24A3   	fcall	_send_lcd_data
  4125  0BE7  0008               	return
  4126  0BE8                     __end_of_lcd_2ndline:	
  4127                           
  4128                           	psect	text19
  4129  0BD6                     __ptext19:	
  4130 ;; *************** function _lcd_home *****************
  4131 ;; Defined at:
  4132 ;;		line 158 in file "lcd.c"
  4133 ;; Parameters:    Size  Location     Type
  4134 ;;		None
  4135 ;; Auto vars:     Size  Location     Type
  4136 ;;		None
  4137 ;; Return value:  Size  Location     Type
  4138 ;;		None               void
  4139 ;; Registers used:
  4140 ;;		wreg, status,2, status,0, pclath, cstack
  4141 ;; Tracked objects:
  4142 ;;		On entry : 0/0
  4143 ;;		On exit  : 0/0
  4144 ;;		Unchanged: 0/0
  4145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4146 ;;      Params:         0       0       0       0       0
  4147 ;;      Locals:         0       0       0       0       0
  4148 ;;      Temps:          1       0       0       0       0
  4149 ;;      Totals:         1       0       0       0       0
  4150 ;;Total ram usage:        1 bytes
  4151 ;; Hardware stack levels used:    1
  4152 ;; Hardware stack levels required when called:    2
  4153 ;; This function calls:
  4154 ;;		_send_lcd_data
  4155 ;; This function is called by:
  4156 ;;		_main
  4157 ;; This function uses a non-reentrant model
  4158 ;;
  4159                           
  4160                           
  4161                           ;psect for function _lcd_home
  4162  0BD6                     _lcd_home:	
  4163                           
  4164                           ;lcd.c: 160: send_lcd_data(0, 0b00000010);
  4165                           
  4166                           ;incstack = 0
  4167                           ; Regs used in _lcd_home: [wreg+status,2+status,0+pclath+cstack]
  4168  0BD6  3002               	movlw	2
  4169  0BD7  00F5               	movwf	??_lcd_home
  4170  0BD8  0875               	movf	??_lcd_home,w
  4171  0BD9  00F1               	movwf	?_send_lcd_data
  4172  0BDA  3000               	movlw	0
  4173  0BDB  120A  158A  24A3   	fcall	_send_lcd_data
  4174  0BDE  0008               	return
  4175  0BDF                     __end_of_lcd_home:	
  4176                           
  4177                           	psect	text20
  4178  0C3E                     __ptext20:	
  4179 ;; *************** function _lcd_initialize *****************
  4180 ;; Defined at:
  4181 ;;		line 101 in file "lcd.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;		None
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;		None
  4186 ;; Return value:  Size  Location     Type
  4187 ;;		None               void
  4188 ;; Registers used:
  4189 ;;		wreg, status,2, status,0, pclath, cstack
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 0/0
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4195 ;;      Params:         0       0       0       0       0
  4196 ;;      Locals:         0       0       0       0       0
  4197 ;;      Temps:          2       0       0       0       0
  4198 ;;      Totals:         2       0       0       0       0
  4199 ;;Total ram usage:        2 bytes
  4200 ;; Hardware stack levels used:    1
  4201 ;; Hardware stack levels required when called:    3
  4202 ;; This function calls:
  4203 ;;		_lcd_clear
  4204 ;;		_set_lcd_e
  4205 ;;		_send_lcd_data
  4206 ;; This function is called by:
  4207 ;;		_main
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211                           
  4212                           ;psect for function _lcd_initialize
  4213  0C3E                     _lcd_initialize:	
  4214                           
  4215                           ;lcd.c: 104: set_lcd_e(1);
  4216                           
  4217                           ;incstack = 0
  4218                           ; Regs used in _lcd_initialize: [wreg+status,2+status,0+pclath+cstack]
  4219  0C3E  3001               	movlw	1
  4220  0C3F  120A  158A  2411   	fcall	_set_lcd_e
      +       120A  158A         
  4221                           
  4222                           ;lcd.c: 105: _delay((unsigned long)((15)*(20000000/4000.0)));
  4223  0C44  3062               	movlw	98
  4224  0C45  00F6               	movwf	??_lcd_initialize+1
  4225  0C46  3065               	movlw	101
  4226  0C47  00F5               	movwf	??_lcd_initialize
  4227  0C48                     u5137:	
  4228  0C48  0BF5               	decfsz	??_lcd_initialize,f
  4229  0C49  2C48               	goto	u5137
  4230  0C4A  0BF6               	decfsz	??_lcd_initialize+1,f
  4231  0C4B  2C48               	goto	u5137
  4232  0C4C  2C4D               	nop2
  4233                           
  4234                           ;lcd.c: 108: send_lcd_data(0, 0b00100000 | 0b00010000 | 0b00001000 | 0b00000000);
  4235  0C4D  3038               	movlw	56
  4236  0C4E  00F5               	movwf	??_lcd_initialize
  4237  0C4F  0875               	movf	??_lcd_initialize,w
  4238  0C50  00F1               	movwf	?_send_lcd_data
  4239  0C51  3000               	movlw	0
  4240  0C52  120A  158A  24A3   	fcall	_send_lcd_data
      +       120A  158A         
  4241                           
  4242                           ;lcd.c: 112: send_lcd_data(0, 0b00000100 | 0b00000010 | 0b00000000);
  4243  0C57  3006               	movlw	6
  4244  0C58  00F5               	movwf	??_lcd_initialize
  4245  0C59  0875               	movf	??_lcd_initialize,w
  4246  0C5A  00F1               	movwf	?_send_lcd_data
  4247  0C5B  3000               	movlw	0
  4248  0C5C  120A  158A  24A3   	fcall	_send_lcd_data
      +       120A  158A         
  4249                           
  4250                           ;lcd.c: 115: send_lcd_data(0, 0b00001000 | 0b00000100 | 0b00000000 | 0b00000000);
  4251  0C61  300C               	movlw	12
  4252  0C62  00F5               	movwf	??_lcd_initialize
  4253  0C63  0875               	movf	??_lcd_initialize,w
  4254  0C64  00F1               	movwf	?_send_lcd_data
  4255  0C65  3000               	movlw	0
  4256  0C66  120A  158A  24A3   	fcall	_send_lcd_data
      +       120A  158A         
  4257                           
  4258                           ;lcd.c: 118: lcd_clear();
  4259  0C6B  120A  158A  23CF   	fcall	_lcd_clear
  4260  0C6E  0008               	return
  4261  0C6F                     __end_of_lcd_initialize:	
  4262                           
  4263                           	psect	text21
  4264  0BCF                     __ptext21:	
  4265 ;; *************** function _lcd_clear *****************
  4266 ;; Defined at:
  4267 ;;		line 137 in file "lcd.c"
  4268 ;; Parameters:    Size  Location     Type
  4269 ;;		None
  4270 ;; Auto vars:     Size  Location     Type
  4271 ;;		None
  4272 ;; Return value:  Size  Location     Type
  4273 ;;		None               void
  4274 ;; Registers used:
  4275 ;;		wreg, status,2, status,0, pclath, cstack
  4276 ;; Tracked objects:
  4277 ;;		On entry : 0/0
  4278 ;;		On exit  : 0/0
  4279 ;;		Unchanged: 0/0
  4280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4281 ;;      Params:         0       0       0       0       0
  4282 ;;      Locals:         0       0       0       0       0
  4283 ;;      Temps:          0       0       0       0       0
  4284 ;;      Totals:         0       0       0       0       0
  4285 ;;Total ram usage:        0 bytes
  4286 ;; Hardware stack levels used:    1
  4287 ;; Hardware stack levels required when called:    2
  4288 ;; This function calls:
  4289 ;;		_send_lcd_data
  4290 ;; This function is called by:
  4291 ;;		_main
  4292 ;;		_lcd_initialize
  4293 ;; This function uses a non-reentrant model
  4294 ;;
  4295                           
  4296                           
  4297                           ;psect for function _lcd_clear
  4298  0BCF                     _lcd_clear:	
  4299                           
  4300                           ;lcd.c: 139: send_lcd_data(0, 0b00000001);
  4301                           
  4302                           ;incstack = 0
  4303                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  4304  0BCF  01F1               	clrf	?_send_lcd_data
  4305  0BD0  0AF1               	incf	?_send_lcd_data,f
  4306  0BD1  3000               	movlw	0
  4307  0BD2  120A  158A  24A3   	fcall	_send_lcd_data
  4308  0BD5  0008               	return
  4309  0BD6                     __end_of_lcd_clear:	
  4310                           
  4311                           	psect	text22
  4312  0CA3                     __ptext22:	
  4313 ;; *************** function _send_lcd_data *****************
  4314 ;; Defined at:
  4315 ;;		line 309 in file "lcd.c"
  4316 ;; Parameters:    Size  Location     Type
  4317 ;;  b_rs            1    wreg     unsigned char 
  4318 ;;  uc_data         1    1[COMMON] unsigned char 
  4319 ;; Auto vars:     Size  Location     Type
  4320 ;;  b_rs            1    4[COMMON] unsigned char 
  4321 ;; Return value:  Size  Location     Type
  4322 ;;		None               void
  4323 ;; Registers used:
  4324 ;;		wreg, status,2, status,0, pclath, cstack
  4325 ;; Tracked objects:
  4326 ;;		On entry : 0/0
  4327 ;;		On exit  : 0/0
  4328 ;;		Unchanged: 0/0
  4329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4330 ;;      Params:         1       0       0       0       0
  4331 ;;      Locals:         1       0       0       0       0
  4332 ;;      Temps:          2       0       0       0       0
  4333 ;;      Totals:         4       0       0       0       0
  4334 ;;Total ram usage:        4 bytes
  4335 ;; Hardware stack levels used:    1
  4336 ;; Hardware stack levels required when called:    1
  4337 ;; This function calls:
  4338 ;;		_set_lcd_e
  4339 ;;		_set_lcd_rs
  4340 ;;		_set_lcd_data
  4341 ;; This function is called by:
  4342 ;;		_lcd_initialize
  4343 ;;		_lcd_clear
  4344 ;;		_lcd_home
  4345 ;;		_lcd_2ndline
  4346 ;;		_lcd_goto
  4347 ;;		_lcd_putchar
  4348 ;; This function uses a non-reentrant model
  4349 ;;
  4350                           
  4351                           
  4352                           ;psect for function _send_lcd_data
  4353  0CA3                     _send_lcd_data:	
  4354                           
  4355                           ;incstack = 0
  4356                           ; Regs used in _send_lcd_data: [wreg+status,2+status,0+pclath+cstack]
  4357                           ;send_lcd_data@b_rs stored from wreg
  4358  0CA3  00F4               	movwf	send_lcd_data@b_rs
  4359                           
  4360                           ;lcd.c: 311: set_lcd_rs(b_rs);
  4361  0CA4  0874               	movf	send_lcd_data@b_rs,w
  4362  0CA5  120A  158A  241C   	fcall	_set_lcd_rs
      +       120A  158A         
  4363                           
  4364                           ;lcd.c: 312: set_lcd_data(uc_data);
  4365  0CAA  0871               	movf	send_lcd_data@uc_data,w
  4366  0CAB  120A  118A  2014   	fcall	_set_lcd_data
      +       120A  158A         
  4367                           
  4368                           ;lcd.c: 315: set_lcd_e(1);
  4369  0CB0  3001               	movlw	1
  4370  0CB1  120A  158A  2411   	fcall	_set_lcd_e
      +       120A  158A         
  4371                           
  4372                           ;lcd.c: 316: _delay((unsigned long)((1)*(20000000/4000.0)));
  4373  0CB6  3007               	movlw	7
  4374  0CB7  00F3               	movwf	??_send_lcd_data+1
  4375  0CB8  307D               	movlw	125
  4376  0CB9  00F2               	movwf	??_send_lcd_data
  4377  0CBA                     u5147:	
  4378  0CBA  0BF2               	decfsz	??_send_lcd_data,f
  4379  0CBB  2CBA               	goto	u5147
  4380  0CBC  0BF3               	decfsz	??_send_lcd_data+1,f
  4381  0CBD  2CBA               	goto	u5147
  4382                           
  4383                           ;lcd.c: 317: set_lcd_e(0);
  4384  0CBE  3000               	movlw	0
  4385  0CBF  120A  158A  2411   	fcall	_set_lcd_e
      +       120A  158A         
  4386                           
  4387                           ;lcd.c: 318: _delay((unsigned long)((2)*(20000000/4000.0)));
  4388  0CC4  300D               	movlw	13
  4389  0CC5  00F3               	movwf	??_send_lcd_data+1
  4390  0CC6  30FB               	movlw	251
  4391  0CC7  00F2               	movwf	??_send_lcd_data
  4392  0CC8                     u5157:	
  4393  0CC8  0BF2               	decfsz	??_send_lcd_data,f
  4394  0CC9  2CC8               	goto	u5157
  4395  0CCA  0BF3               	decfsz	??_send_lcd_data+1,f
  4396  0CCB  2CC8               	goto	u5157
  4397  0CCC  2CCD               	nop2
  4398                           
  4399                           ;lcd.c: 321: set_lcd_rs(0);
  4400  0CCD  3000               	movlw	0
  4401  0CCE  120A  158A  241C   	fcall	_set_lcd_rs
      +       120A  158A         
  4402                           
  4403                           ;lcd.c: 322: set_lcd_data(0);
  4404  0CD3  3000               	movlw	0
  4405  0CD4  120A  118A  2014   	fcall	_set_lcd_data
  4406  0CD7  0008               	return
  4407  0CD8                     __end_of_send_lcd_data:	
  4408                           
  4409                           	psect	text23
  4410  0014                     __ptext23:	
  4411 ;; *************** function _set_lcd_data *****************
  4412 ;; Defined at:
  4413 ;;		line 381 in file "lcd.c"
  4414 ;; Parameters:    Size  Location     Type
  4415 ;;  uc_data         1    wreg     unsigned char 
  4416 ;; Auto vars:     Size  Location     Type
  4417 ;;  uc_data         1    0[COMMON] unsigned char 
  4418 ;; Return value:  Size  Location     Type
  4419 ;;		None               void
  4420 ;; Registers used:
  4421 ;;		wreg
  4422 ;; Tracked objects:
  4423 ;;		On entry : 0/0
  4424 ;;		On exit  : 0/0
  4425 ;;		Unchanged: 0/0
  4426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4427 ;;      Params:         0       0       0       0       0
  4428 ;;      Locals:         1       0       0       0       0
  4429 ;;      Temps:          0       0       0       0       0
  4430 ;;      Totals:         1       0       0       0       0
  4431 ;;Total ram usage:        1 bytes
  4432 ;; Hardware stack levels used:    1
  4433 ;; This function calls:
  4434 ;;		Nothing
  4435 ;; This function is called by:
  4436 ;;		_send_lcd_data
  4437 ;; This function uses a non-reentrant model
  4438 ;;
  4439                           
  4440                           
  4441                           ;psect for function _set_lcd_data
  4442  0014                     _set_lcd_data:	
  4443                           
  4444                           ;incstack = 0
  4445                           ; Regs used in _set_lcd_data: [wreg]
  4446                           ;set_lcd_data@uc_data stored from wreg
  4447  0014  00F0               	movwf	set_lcd_data@uc_data
  4448                           
  4449                           ;lcd.c: 382: PORTD = uc_data;
  4450  0015  0870               	movf	set_lcd_data@uc_data,w
  4451  0016  1283               	bcf	3,5	;RP0=0, select bank0
  4452  0017  1303               	bcf	3,6	;RP1=0, select bank0
  4453  0018  0088               	movwf	8	;volatile
  4454  0019  0008               	return
  4455  001A                     __end_of_set_lcd_data:	
  4456                           
  4457                           	psect	text24
  4458  0C1C                     __ptext24:	
  4459 ;; *************** function _set_lcd_rs *****************
  4460 ;; Defined at:
  4461 ;;		line 361 in file "lcd.c"
  4462 ;; Parameters:    Size  Location     Type
  4463 ;;  b_output        1    wreg     unsigned char 
  4464 ;; Auto vars:     Size  Location     Type
  4465 ;;  b_output        1    0[COMMON] unsigned char 
  4466 ;; Return value:  Size  Location     Type
  4467 ;;		None               void
  4468 ;; Registers used:
  4469 ;;		wreg
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4475 ;;      Params:         0       0       0       0       0
  4476 ;;      Locals:         1       0       0       0       0
  4477 ;;      Temps:          0       0       0       0       0
  4478 ;;      Totals:         1       0       0       0       0
  4479 ;;Total ram usage:        1 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; This function calls:
  4482 ;;		Nothing
  4483 ;; This function is called by:
  4484 ;;		_send_lcd_data
  4485 ;; This function uses a non-reentrant model
  4486 ;;
  4487                           
  4488                           
  4489                           ;psect for function _set_lcd_rs
  4490  0C1C                     _set_lcd_rs:	
  4491                           
  4492                           ;incstack = 0
  4493                           ; Regs used in _set_lcd_rs: [wreg]
  4494                           ;set_lcd_rs@b_output stored from wreg
  4495  0C1C  00F0               	movwf	set_lcd_rs@b_output
  4496                           
  4497                           ;lcd.c: 362: RB4 = b_output;
  4498  0C1D  1C70               	btfss	set_lcd_rs@b_output,0
  4499  0C1E  2C23               	goto	u1410
  4500  0C1F  1283               	bcf	3,5	;RP0=0, select bank0
  4501  0C20  1303               	bcf	3,6	;RP1=0, select bank0
  4502  0C21  1606               	bsf	6,4	;volatile
  4503  0C22  0008               	return
  4504  0C23                     u1410:	
  4505  0C23  1283               	bcf	3,5	;RP0=0, select bank0
  4506  0C24  1303               	bcf	3,6	;RP1=0, select bank0
  4507  0C25  1206               	bcf	6,4	;volatile
  4508  0C26  0008               	return
  4509  0C27                     __end_of_set_lcd_rs:	
  4510                           
  4511                           	psect	text25
  4512  0C11                     __ptext25:	
  4513 ;; *************** function _set_lcd_e *****************
  4514 ;; Defined at:
  4515 ;;		line 341 in file "lcd.c"
  4516 ;; Parameters:    Size  Location     Type
  4517 ;;  b_output        1    wreg     unsigned char 
  4518 ;; Auto vars:     Size  Location     Type
  4519 ;;  b_output        1    0[COMMON] unsigned char 
  4520 ;; Return value:  Size  Location     Type
  4521 ;;		None               void
  4522 ;; Registers used:
  4523 ;;		wreg
  4524 ;; Tracked objects:
  4525 ;;		On entry : 0/0
  4526 ;;		On exit  : 0/0
  4527 ;;		Unchanged: 0/0
  4528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4529 ;;      Params:         0       0       0       0       0
  4530 ;;      Locals:         1       0       0       0       0
  4531 ;;      Temps:          0       0       0       0       0
  4532 ;;      Totals:         1       0       0       0       0
  4533 ;;Total ram usage:        1 bytes
  4534 ;; Hardware stack levels used:    1
  4535 ;; This function calls:
  4536 ;;		Nothing
  4537 ;; This function is called by:
  4538 ;;		_lcd_initialize
  4539 ;;		_send_lcd_data
  4540 ;; This function uses a non-reentrant model
  4541 ;;
  4542                           
  4543                           
  4544                           ;psect for function _set_lcd_e
  4545  0C11                     _set_lcd_e:	
  4546                           
  4547                           ;incstack = 0
  4548                           ; Regs used in _set_lcd_e: [wreg]
  4549                           ;set_lcd_e@b_output stored from wreg
  4550  0C11  00F0               	movwf	set_lcd_e@b_output
  4551                           
  4552                           ;lcd.c: 342: RB5 = b_output;
  4553  0C12  1C70               	btfss	set_lcd_e@b_output,0
  4554  0C13  2C18               	goto	u1390
  4555  0C14  1283               	bcf	3,5	;RP0=0, select bank0
  4556  0C15  1303               	bcf	3,6	;RP1=0, select bank0
  4557  0C16  1686               	bsf	6,5	;volatile
  4558  0C17  0008               	return
  4559  0C18                     u1390:	
  4560  0C18  1283               	bcf	3,5	;RP0=0, select bank0
  4561  0C19  1303               	bcf	3,6	;RP1=0, select bank0
  4562  0C1A  1286               	bcf	6,5	;volatile
  4563  0C1B  0008               	return
  4564  0C1C                     __end_of_set_lcd_e:	
  4565                           
  4566                           	psect	text26
  4567  0E42                     __ptext26:	
  4568 ;; *************** function ___fttol *****************
  4569 ;; Defined at:
  4570 ;;		line 45 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\fttol.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;  f1              3    8[BANK0 ] float 
  4573 ;; Auto vars:     Size  Location     Type
  4574 ;;  lval            4   23[BANK0 ] unsigned long 
  4575 ;;  exp1            1   27[BANK0 ] unsigned char 
  4576 ;;  sign1           1   22[BANK0 ] unsigned char 
  4577 ;; Return value:  Size  Location     Type
  4578 ;;                  4    8[BANK0 ] long 
  4579 ;; Registers used:
  4580 ;;		wreg, status,2, status,0
  4581 ;; Tracked objects:
  4582 ;;		On entry : 0/0
  4583 ;;		On exit  : 0/0
  4584 ;;		Unchanged: 0/0
  4585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4586 ;;      Params:         0       4       0       0       0
  4587 ;;      Locals:         0      12       0       0       0
  4588 ;;      Temps:          0       4       0       0       0
  4589 ;;      Totals:         0      20       0       0       0
  4590 ;;Total ram usage:       20 bytes
  4591 ;; Hardware stack levels used:    1
  4592 ;; This function calls:
  4593 ;;		Nothing
  4594 ;; This function is called by:
  4595 ;;		_Freq_Display
  4596 ;;		_SetFrequency
  4597 ;;		_SearchUp
  4598 ;;		_SearchDown
  4599 ;; This function uses a non-reentrant model
  4600 ;;
  4601                           
  4602                           
  4603                           ;psect for function ___fttol
  4604  0E42                     ___fttol:	
  4605                           
  4606                           ;incstack = 0
  4607                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  4608  0E42  1283               	bcf	3,5	;RP0=0, select bank0
  4609  0E43  1303               	bcf	3,6	;RP1=0, select bank0
  4610  0E44  0828               	movf	___fttol@f1,w
  4611  0E45  00AC               	movwf	??___fttol
  4612  0E46  0829               	movf	___fttol@f1+1,w
  4613  0E47  00AD               	movwf	??___fttol+1
  4614  0E48  082A               	movf	___fttol@f1+2,w
  4615  0E49  00AE               	movwf	??___fttol+2
  4616  0E4A  1003               	clrc
  4617  0E4B  0D2D               	rlf	??___fttol+1,w
  4618  0E4C  0D2E               	rlf	??___fttol+2,w
  4619  0E4D  00AF               	movwf	??___fttol+3
  4620  0E4E  082F               	movf	??___fttol+3,w
  4621  0E4F  00BB               	movwf	___fttol@exp1
  4622  0E50  08BB               	movf	___fttol@exp1,f
  4623  0E51  1D03               	skipz
  4624  0E52  2E5C               	goto	l2116
  4625  0E53  3000               	movlw	0
  4626  0E54  00AB               	movwf	?___fttol+3
  4627  0E55  3000               	movlw	0
  4628  0E56  00AA               	movwf	?___fttol+2
  4629  0E57  3000               	movlw	0
  4630  0E58  00A9               	movwf	?___fttol+1
  4631  0E59  3000               	movlw	0
  4632  0E5A  00A8               	movwf	?___fttol
  4633  0E5B  0008               	return
  4634  0E5C                     l2116:	
  4635  0E5C  0828               	movf	___fttol@f1,w
  4636  0E5D  00AC               	movwf	??___fttol
  4637  0E5E  0829               	movf	___fttol@f1+1,w
  4638  0E5F  00AD               	movwf	??___fttol+1
  4639  0E60  082A               	movf	___fttol@f1+2,w
  4640  0E61  00AE               	movwf	??___fttol+2
  4641  0E62  3017               	movlw	23
  4642  0E63                     u1865:	
  4643  0E63  1003               	clrc
  4644  0E64  0CAE               	rrf	??___fttol+2,f
  4645  0E65  0CAD               	rrf	??___fttol+1,f
  4646  0E66  0CAC               	rrf	??___fttol,f
  4647  0E67  3EFF               	addlw	-1
  4648  0E68  1D03               	skipz
  4649  0E69  2E63               	goto	u1865
  4650  0E6A  082C               	movf	??___fttol,w
  4651  0E6B  00AF               	movwf	??___fttol+3
  4652  0E6C  082F               	movf	??___fttol+3,w
  4653  0E6D  00B6               	movwf	___fttol@sign1
  4654  0E6E  17A9               	bsf	___fttol@f1+1,7
  4655  0E6F  30FF               	movlw	255
  4656  0E70  05A8               	andwf	___fttol@f1,f
  4657  0E71  30FF               	movlw	255
  4658  0E72  05A9               	andwf	___fttol@f1+1,f
  4659  0E73  3000               	movlw	0
  4660  0E74  05AA               	andwf	___fttol@f1+2,f
  4661  0E75  0828               	movf	___fttol@f1,w
  4662  0E76  00B7               	movwf	___fttol@lval
  4663  0E77  0829               	movf	___fttol@f1+1,w
  4664  0E78  00B8               	movwf	___fttol@lval+1
  4665  0E79  082A               	movf	___fttol@f1+2,w
  4666  0E7A  00B9               	movwf	___fttol@lval+2
  4667  0E7B  01BA               	clrf	___fttol@lval+3
  4668  0E7C  308E               	movlw	142
  4669  0E7D  02BB               	subwf	___fttol@exp1,f
  4670  0E7E  1FBB               	btfss	___fttol@exp1,7
  4671  0E7F  2E9E               	goto	l2136
  4672  0E80  083B               	movf	___fttol@exp1,w
  4673  0E81  3A80               	xorlw	128
  4674  0E82  3E8F               	addlw	143
  4675  0E83  1803               	skipnc
  4676  0E84  2E8E               	goto	l2134
  4677  0E85  3000               	movlw	0
  4678  0E86  00AB               	movwf	?___fttol+3
  4679  0E87  3000               	movlw	0
  4680  0E88  00AA               	movwf	?___fttol+2
  4681  0E89  3000               	movlw	0
  4682  0E8A  00A9               	movwf	?___fttol+1
  4683  0E8B  3000               	movlw	0
  4684  0E8C  00A8               	movwf	?___fttol
  4685  0E8D  0008               	return
  4686  0E8E                     l2134:	
  4687  0E8E  3001               	movlw	1
  4688  0E8F                     u1895:	
  4689  0E8F  1003               	clrc
  4690  0E90  0CBA               	rrf	___fttol@lval+3,f
  4691  0E91  0CB9               	rrf	___fttol@lval+2,f
  4692  0E92  0CB8               	rrf	___fttol@lval+1,f
  4693  0E93  0CB7               	rrf	___fttol@lval,f
  4694  0E94  3EFF               	addlw	-1
  4695  0E95  1D03               	skipz
  4696  0E96  2E8F               	goto	u1895
  4697  0E97  3001               	movlw	1
  4698  0E98  00AC               	movwf	??___fttol
  4699  0E99  082C               	movf	??___fttol,w
  4700  0E9A  07BB               	addwf	___fttol@exp1,f
  4701  0E9B  1903               	btfsc	3,2
  4702  0E9C  2EB9               	goto	l2146
  4703  0E9D  2E8E               	goto	l2134
  4704  0E9E                     l2136:	
  4705  0E9E  3018               	movlw	24
  4706  0E9F  023B               	subwf	___fttol@exp1,w
  4707  0EA0  1C03               	skipc
  4708  0EA1  2EB6               	goto	l2144
  4709  0EA2  3000               	movlw	0
  4710  0EA3  00AB               	movwf	?___fttol+3
  4711  0EA4  3000               	movlw	0
  4712  0EA5  00AA               	movwf	?___fttol+2
  4713  0EA6  3000               	movlw	0
  4714  0EA7  00A9               	movwf	?___fttol+1
  4715  0EA8  3000               	movlw	0
  4716  0EA9  00A8               	movwf	?___fttol
  4717  0EAA  0008               	return
  4718  0EAB                     l2142:	
  4719  0EAB  3001               	movlw	1
  4720  0EAC  00AC               	movwf	??___fttol
  4721  0EAD                     u1925:	
  4722  0EAD  1003               	clrc
  4723  0EAE  0DB7               	rlf	___fttol@lval,f
  4724  0EAF  0DB8               	rlf	___fttol@lval+1,f
  4725  0EB0  0DB9               	rlf	___fttol@lval+2,f
  4726  0EB1  0DBA               	rlf	___fttol@lval+3,f
  4727  0EB2  0BAC               	decfsz	??___fttol,f
  4728  0EB3  2EAD               	goto	u1925
  4729  0EB4  3001               	movlw	1
  4730  0EB5  02BB               	subwf	___fttol@exp1,f
  4731  0EB6                     l2144:	
  4732  0EB6  08BB               	movf	___fttol@exp1,f
  4733  0EB7  1D03               	skipz
  4734  0EB8  2EAB               	goto	l2142
  4735  0EB9                     l2146:	
  4736  0EB9  0836               	movf	___fttol@sign1,w
  4737  0EBA  1903               	btfsc	3,2
  4738  0EBB  2EC7               	goto	l2150
  4739  0EBC  09B7               	comf	___fttol@lval,f
  4740  0EBD  09B8               	comf	___fttol@lval+1,f
  4741  0EBE  09B9               	comf	___fttol@lval+2,f
  4742  0EBF  09BA               	comf	___fttol@lval+3,f
  4743  0EC0  0AB7               	incf	___fttol@lval,f
  4744  0EC1  1903               	skipnz
  4745  0EC2  0AB8               	incf	___fttol@lval+1,f
  4746  0EC3  1903               	skipnz
  4747  0EC4  0AB9               	incf	___fttol@lval+2,f
  4748  0EC5  1903               	skipnz
  4749  0EC6  0ABA               	incf	___fttol@lval+3,f
  4750  0EC7                     l2150:	
  4751  0EC7  083A               	movf	___fttol@lval+3,w
  4752  0EC8  00AB               	movwf	?___fttol+3
  4753  0EC9  0839               	movf	___fttol@lval+2,w
  4754  0ECA  00AA               	movwf	?___fttol+2
  4755  0ECB  0838               	movf	___fttol@lval+1,w
  4756  0ECC  00A9               	movwf	?___fttol+1
  4757  0ECD  0837               	movf	___fttol@lval,w
  4758  0ECE  00A8               	movwf	?___fttol
  4759  0ECF  0008               	return
  4760  0ED0                     __end_of___fttol:	
  4761                           
  4762                           	psect	text27
  4763  002A                     __ptext27:	
  4764 ;; *************** function ___ftdiv *****************
  4765 ;; Defined at:
  4766 ;;		line 50 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\ftdiv.c"
  4767 ;; Parameters:    Size  Location     Type
  4768 ;;  f2              3   44[BANK0 ] float 
  4769 ;;  f1              3   47[BANK0 ] float 
  4770 ;; Auto vars:     Size  Location     Type
  4771 ;;  f3              3   62[BANK0 ] float 
  4772 ;;  sign            1   65[BANK0 ] unsigned char 
  4773 ;;  exp             1   61[BANK0 ] unsigned char 
  4774 ;;  cntr            1   60[BANK0 ] unsigned char 
  4775 ;; Return value:  Size  Location     Type
  4776 ;;                  3   44[BANK0 ] float 
  4777 ;; Registers used:
  4778 ;;		wreg, status,2, status,0, pclath, cstack
  4779 ;; Tracked objects:
  4780 ;;		On entry : 0/0
  4781 ;;		On exit  : 0/0
  4782 ;;		Unchanged: 0/0
  4783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4784 ;;      Params:         0       6       0       0       0
  4785 ;;      Locals:         0      12       0       0       0
  4786 ;;      Temps:          0       4       0       0       0
  4787 ;;      Totals:         0      22       0       0       0
  4788 ;;Total ram usage:       22 bytes
  4789 ;; Hardware stack levels used:    1
  4790 ;; Hardware stack levels required when called:    1
  4791 ;; This function calls:
  4792 ;;		___ftpack
  4793 ;; This function is called by:
  4794 ;;		_SetFrequency
  4795 ;;		_Freq_Available
  4796 ;;		_SearchUp
  4797 ;;		_SearchDown
  4798 ;; This function uses a non-reentrant model
  4799 ;;
  4800                           
  4801                           
  4802                           ;psect for function ___ftdiv
  4803  002A                     ___ftdiv:	
  4804                           
  4805                           ;incstack = 0
  4806                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  4807  002A  1283               	bcf	3,5	;RP0=0, select bank0
  4808  002B  1303               	bcf	3,6	;RP1=0, select bank0
  4809  002C  084F               	movf	___ftdiv@f1,w
  4810  002D  00D2               	movwf	??___ftdiv
  4811  002E  0850               	movf	___ftdiv@f1+1,w
  4812  002F  00D3               	movwf	??___ftdiv+1
  4813  0030  0851               	movf	___ftdiv@f1+2,w
  4814  0031  00D4               	movwf	??___ftdiv+2
  4815  0032  1003               	clrc
  4816  0033  0D53               	rlf	??___ftdiv+1,w
  4817  0034  0D54               	rlf	??___ftdiv+2,w
  4818  0035  00D5               	movwf	??___ftdiv+3
  4819  0036  0855               	movf	??___ftdiv+3,w
  4820  0037  00DD               	movwf	___ftdiv@exp
  4821  0038  08DD               	movf	___ftdiv@exp,f
  4822  0039  1D03               	skipz
  4823  003A  2842               	goto	l3890
  4824  003B  3000               	movlw	0
  4825  003C  00CC               	movwf	?___ftdiv
  4826  003D  3000               	movlw	0
  4827  003E  00CD               	movwf	?___ftdiv+1
  4828  003F  3000               	movlw	0
  4829  0040  00CE               	movwf	?___ftdiv+2
  4830  0041  0008               	return
  4831  0042                     l3890:	
  4832  0042  084C               	movf	___ftdiv@f2,w
  4833  0043  00D2               	movwf	??___ftdiv
  4834  0044  084D               	movf	___ftdiv@f2+1,w
  4835  0045  00D3               	movwf	??___ftdiv+1
  4836  0046  084E               	movf	___ftdiv@f2+2,w
  4837  0047  00D4               	movwf	??___ftdiv+2
  4838  0048  1003               	clrc
  4839  0049  0D53               	rlf	??___ftdiv+1,w
  4840  004A  0D54               	rlf	??___ftdiv+2,w
  4841  004B  00D5               	movwf	??___ftdiv+3
  4842  004C  0855               	movf	??___ftdiv+3,w
  4843  004D  00E1               	movwf	___ftdiv@sign
  4844  004E  08E1               	movf	___ftdiv@sign,f
  4845  004F  1D03               	skipz
  4846  0050  2858               	goto	l3896
  4847  0051  3000               	movlw	0
  4848  0052  00CC               	movwf	?___ftdiv
  4849  0053  3000               	movlw	0
  4850  0054  00CD               	movwf	?___ftdiv+1
  4851  0055  3000               	movlw	0
  4852  0056  00CE               	movwf	?___ftdiv+2
  4853  0057  0008               	return
  4854  0058                     l3896:	
  4855  0058  3000               	movlw	0
  4856  0059  00DE               	movwf	___ftdiv@f3
  4857  005A  3000               	movlw	0
  4858  005B  00DF               	movwf	___ftdiv@f3+1
  4859  005C  3000               	movlw	0
  4860  005D  00E0               	movwf	___ftdiv@f3+2
  4861  005E  3089               	movlw	137
  4862  005F  0761               	addwf	___ftdiv@sign,w
  4863  0060  00D2               	movwf	??___ftdiv
  4864  0061  0852               	movf	??___ftdiv,w
  4865  0062  02DD               	subwf	___ftdiv@exp,f
  4866  0063  084F               	movf	___ftdiv@f1,w
  4867  0064  00D2               	movwf	??___ftdiv
  4868  0065  0850               	movf	___ftdiv@f1+1,w
  4869  0066  00D3               	movwf	??___ftdiv+1
  4870  0067  0851               	movf	___ftdiv@f1+2,w
  4871  0068  00D4               	movwf	??___ftdiv+2
  4872  0069  3010               	movlw	16
  4873  006A                     u4605:	
  4874  006A  1003               	clrc
  4875  006B  0CD4               	rrf	??___ftdiv+2,f
  4876  006C  0CD3               	rrf	??___ftdiv+1,f
  4877  006D  0CD2               	rrf	??___ftdiv,f
  4878  006E  3EFF               	addlw	-1
  4879  006F  1D03               	skipz
  4880  0070  286A               	goto	u4605
  4881  0071  0852               	movf	??___ftdiv,w
  4882  0072  00D5               	movwf	??___ftdiv+3
  4883  0073  0855               	movf	??___ftdiv+3,w
  4884  0074  00E1               	movwf	___ftdiv@sign
  4885  0075  084C               	movf	___ftdiv@f2,w
  4886  0076  00D2               	movwf	??___ftdiv
  4887  0077  084D               	movf	___ftdiv@f2+1,w
  4888  0078  00D3               	movwf	??___ftdiv+1
  4889  0079  084E               	movf	___ftdiv@f2+2,w
  4890  007A  00D4               	movwf	??___ftdiv+2
  4891  007B  3010               	movlw	16
  4892  007C                     u4615:	
  4893  007C  1003               	clrc
  4894  007D  0CD4               	rrf	??___ftdiv+2,f
  4895  007E  0CD3               	rrf	??___ftdiv+1,f
  4896  007F  0CD2               	rrf	??___ftdiv,f
  4897  0080  3EFF               	addlw	-1
  4898  0081  1D03               	skipz
  4899  0082  287C               	goto	u4615
  4900  0083  0852               	movf	??___ftdiv,w
  4901  0084  00D5               	movwf	??___ftdiv+3
  4902  0085  0855               	movf	??___ftdiv+3,w
  4903  0086  06E1               	xorwf	___ftdiv@sign,f
  4904  0087  3080               	movlw	128
  4905  0088  00D2               	movwf	??___ftdiv
  4906  0089  0852               	movf	??___ftdiv,w
  4907  008A  05E1               	andwf	___ftdiv@sign,f
  4908  008B  17D0               	bsf	___ftdiv@f1+1,7
  4909  008C  30FF               	movlw	255
  4910  008D  05CF               	andwf	___ftdiv@f1,f
  4911  008E  30FF               	movlw	255
  4912  008F  05D0               	andwf	___ftdiv@f1+1,f
  4913  0090  3000               	movlw	0
  4914  0091  05D1               	andwf	___ftdiv@f1+2,f
  4915  0092  17CD               	bsf	___ftdiv@f2+1,7
  4916  0093  30FF               	movlw	255
  4917  0094  05CC               	andwf	___ftdiv@f2,f
  4918  0095  30FF               	movlw	255
  4919  0096  05CD               	andwf	___ftdiv@f2+1,f
  4920  0097  3000               	movlw	0
  4921  0098  05CE               	andwf	___ftdiv@f2+2,f
  4922  0099  3018               	movlw	24
  4923  009A  00D2               	movwf	??___ftdiv
  4924  009B  0852               	movf	??___ftdiv,w
  4925  009C  00DC               	movwf	___ftdiv@cntr
  4926  009D                     l3910:	
  4927  009D  3001               	movlw	1
  4928  009E                     u4625:	
  4929  009E  1003               	clrc
  4930  009F  0DDE               	rlf	___ftdiv@f3,f
  4931  00A0  0DDF               	rlf	___ftdiv@f3+1,f
  4932  00A1  0DE0               	rlf	___ftdiv@f3+2,f
  4933  00A2  3EFF               	addlw	-1
  4934  00A3  1D03               	skipz
  4935  00A4  289E               	goto	u4625
  4936  00A5  084E               	movf	___ftdiv@f2+2,w
  4937  00A6  0251               	subwf	___ftdiv@f1+2,w
  4938  00A7  1D03               	skipz
  4939  00A8  28AF               	goto	u4635
  4940  00A9  084D               	movf	___ftdiv@f2+1,w
  4941  00AA  0250               	subwf	___ftdiv@f1+1,w
  4942  00AB  1D03               	skipz
  4943  00AC  28AF               	goto	u4635
  4944  00AD  084C               	movf	___ftdiv@f2,w
  4945  00AE  024F               	subwf	___ftdiv@f1,w
  4946  00AF                     u4635:	
  4947  00AF  1C03               	skipc
  4948  00B0  28BC               	goto	l3918
  4949  00B1  084C               	movf	___ftdiv@f2,w
  4950  00B2  02CF               	subwf	___ftdiv@f1,f
  4951  00B3  084D               	movf	___ftdiv@f2+1,w
  4952  00B4  1C03               	skipc
  4953  00B5  0F4D               	incfsz	___ftdiv@f2+1,w
  4954  00B6  02D0               	subwf	___ftdiv@f1+1,f
  4955  00B7  084E               	movf	___ftdiv@f2+2,w
  4956  00B8  1C03               	skipc
  4957  00B9  0A4E               	incf	___ftdiv@f2+2,w
  4958  00BA  02D1               	subwf	___ftdiv@f1+2,f
  4959  00BB  145E               	bsf	___ftdiv@f3,0
  4960  00BC                     l3918:	
  4961  00BC  3001               	movlw	1
  4962  00BD                     u4645:	
  4963  00BD  1003               	clrc
  4964  00BE  0DCF               	rlf	___ftdiv@f1,f
  4965  00BF  0DD0               	rlf	___ftdiv@f1+1,f
  4966  00C0  0DD1               	rlf	___ftdiv@f1+2,f
  4967  00C1  3EFF               	addlw	-1
  4968  00C2  1D03               	skipz
  4969  00C3  28BD               	goto	u4645
  4970  00C4  3001               	movlw	1
  4971  00C5  02DC               	subwf	___ftdiv@cntr,f
  4972  00C6  1D03               	btfss	3,2
  4973  00C7  289D               	goto	l3910
  4974  00C8  085E               	movf	___ftdiv@f3,w
  4975  00C9  00F0               	movwf	?___ftpack
  4976  00CA  085F               	movf	___ftdiv@f3+1,w
  4977  00CB  00F1               	movwf	?___ftpack+1
  4978  00CC  0860               	movf	___ftdiv@f3+2,w
  4979  00CD  00F2               	movwf	?___ftpack+2
  4980  00CE  085D               	movf	___ftdiv@exp,w
  4981  00CF  00D2               	movwf	??___ftdiv
  4982  00D0  0852               	movf	??___ftdiv,w
  4983  00D1  00F3               	movwf	?___ftpack+3
  4984  00D2  0861               	movf	___ftdiv@sign,w
  4985  00D3  00D3               	movwf	??___ftdiv+1
  4986  00D4  0853               	movf	??___ftdiv+1,w
  4987  00D5  00F4               	movwf	?___ftpack+4
  4988  00D6  120A  158A  25DA   	fcall	___ftpack
  4989  00D9  0870               	movf	?___ftpack,w
  4990  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  4991  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  4992  00DC  00CC               	movwf	?___ftdiv
  4993  00DD  0871               	movf	?___ftpack+1,w
  4994  00DE  00CD               	movwf	?___ftdiv+1
  4995  00DF  0872               	movf	?___ftpack+2,w
  4996  00E0  00CE               	movwf	?___ftdiv+2
  4997  00E1  0008               	return
  4998  00E2                     __end_of___ftdiv:	
  4999                           
  5000                           	psect	text28
  5001  0DDA                     __ptext28:	
  5002 ;; *************** function ___ftpack *****************
  5003 ;; Defined at:
  5004 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\float.c"
  5005 ;; Parameters:    Size  Location     Type
  5006 ;;  arg             3    0[COMMON] unsigned um
  5007 ;;  exp             1    3[COMMON] unsigned char 
  5008 ;;  sign            1    4[COMMON] unsigned char 
  5009 ;; Auto vars:     Size  Location     Type
  5010 ;;		None
  5011 ;; Return value:  Size  Location     Type
  5012 ;;                  3    0[COMMON] float 
  5013 ;; Registers used:
  5014 ;;		wreg, status,2, status,0
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5020 ;;      Params:         5       0       0       0       0
  5021 ;;      Locals:         0       0       0       0       0
  5022 ;;      Temps:          3       0       0       0       0
  5023 ;;      Totals:         8       0       0       0       0
  5024 ;;Total ram usage:        8 bytes
  5025 ;; Hardware stack levels used:    1
  5026 ;; This function calls:
  5027 ;;		Nothing
  5028 ;; This function is called by:
  5029 ;;		___altoft
  5030 ;;		___ftadd
  5031 ;;		___ftdiv
  5032 ;;		___ftmul
  5033 ;; This function uses a non-reentrant model
  5034 ;;
  5035                           
  5036                           
  5037                           ;psect for function ___ftpack
  5038  0DDA                     ___ftpack:	
  5039                           
  5040                           ;incstack = 0
  5041                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  5042  0DDA  0873               	movf	___ftpack@exp,w
  5043  0DDB  1903               	btfsc	3,2
  5044  0DDC  2DE2               	goto	l3858
  5045  0DDD  0872               	movf	___ftpack@arg+2,w
  5046  0DDE  0471               	iorwf	___ftpack@arg+1,w
  5047  0DDF  0470               	iorwf	___ftpack@arg,w
  5048  0DE0  1D03               	skipz
  5049  0DE1  2DF5               	goto	l3864
  5050  0DE2                     l3858:	
  5051  0DE2  3000               	movlw	0
  5052  0DE3  00F0               	movwf	?___ftpack
  5053  0DE4  3000               	movlw	0
  5054  0DE5  00F1               	movwf	?___ftpack+1
  5055  0DE6  3000               	movlw	0
  5056  0DE7  00F2               	movwf	?___ftpack+2
  5057  0DE8  0008               	return
  5058  0DE9                     l3862:	
  5059  0DE9  3001               	movlw	1
  5060  0DEA  00F5               	movwf	??___ftpack
  5061  0DEB  0875               	movf	??___ftpack,w
  5062  0DEC  07F3               	addwf	___ftpack@exp,f
  5063  0DED  3001               	movlw	1
  5064  0DEE                     u4495:	
  5065  0DEE  1003               	clrc
  5066  0DEF  0CF2               	rrf	___ftpack@arg+2,f
  5067  0DF0  0CF1               	rrf	___ftpack@arg+1,f
  5068  0DF1  0CF0               	rrf	___ftpack@arg,f
  5069  0DF2  3EFF               	addlw	-1
  5070  0DF3  1D03               	skipz
  5071  0DF4  2DEE               	goto	u4495
  5072  0DF5                     l3864:	
  5073  0DF5  30FE               	movlw	254
  5074  0DF6  0572               	andwf	___ftpack@arg+2,w
  5075  0DF7  1903               	btfsc	3,2
  5076  0DF8  2E10               	goto	l434
  5077  0DF9  2DE9               	goto	l3862
  5078  0DFA                     l3866:	
  5079  0DFA  3001               	movlw	1
  5080  0DFB  00F5               	movwf	??___ftpack
  5081  0DFC  0875               	movf	??___ftpack,w
  5082  0DFD  07F3               	addwf	___ftpack@exp,f
  5083  0DFE  3001               	movlw	1
  5084  0DFF  07F0               	addwf	___ftpack@arg,f
  5085  0E00  3000               	movlw	0
  5086  0E01  1803               	skipnc
  5087  0E02  3001               	movlw	1
  5088  0E03  07F1               	addwf	___ftpack@arg+1,f
  5089  0E04  3000               	movlw	0
  5090  0E05  1803               	skipnc
  5091  0E06  3001               	movlw	1
  5092  0E07  07F2               	addwf	___ftpack@arg+2,f
  5093  0E08  3001               	movlw	1
  5094  0E09                     u4515:	
  5095  0E09  1003               	clrc
  5096  0E0A  0CF2               	rrf	___ftpack@arg+2,f
  5097  0E0B  0CF1               	rrf	___ftpack@arg+1,f
  5098  0E0C  0CF0               	rrf	___ftpack@arg,f
  5099  0E0D  3EFF               	addlw	-1
  5100  0E0E  1D03               	skipz
  5101  0E0F  2E09               	goto	u4515
  5102  0E10                     l434:	
  5103  0E10  30FF               	movlw	255
  5104  0E11  0572               	andwf	___ftpack@arg+2,w
  5105  0E12  1903               	btfsc	3,2
  5106  0E13  2E1F               	goto	l3874
  5107  0E14  2DFA               	goto	l3866
  5108  0E15                     l3872:	
  5109  0E15  3001               	movlw	1
  5110  0E16  02F3               	subwf	___ftpack@exp,f
  5111  0E17  3001               	movlw	1
  5112  0E18                     u4535:	
  5113  0E18  1003               	clrc
  5114  0E19  0DF0               	rlf	___ftpack@arg,f
  5115  0E1A  0DF1               	rlf	___ftpack@arg+1,f
  5116  0E1B  0DF2               	rlf	___ftpack@arg+2,f
  5117  0E1C  3EFF               	addlw	-1
  5118  0E1D  1D03               	skipz
  5119  0E1E  2E18               	goto	u4535
  5120  0E1F                     l3874:	
  5121  0E1F  1FF1               	btfss	___ftpack@arg+1,7
  5122  0E20  2E15               	goto	l3872
  5123  0E21  1873               	btfsc	___ftpack@exp,0
  5124  0E22  2E29               	goto	l440
  5125  0E23  30FF               	movlw	255
  5126  0E24  05F0               	andwf	___ftpack@arg,f
  5127  0E25  307F               	movlw	127
  5128  0E26  05F1               	andwf	___ftpack@arg+1,f
  5129  0E27  30FF               	movlw	255
  5130  0E28  05F2               	andwf	___ftpack@arg+2,f
  5131  0E29                     l440:	
  5132  0E29  1003               	clrc
  5133  0E2A  0CF3               	rrf	___ftpack@exp,f
  5134  0E2B  0873               	movf	___ftpack@exp,w
  5135  0E2C  00F5               	movwf	??___ftpack
  5136  0E2D  01F6               	clrf	??___ftpack+1
  5137  0E2E  01F7               	clrf	??___ftpack+2
  5138  0E2F  3010               	movlw	16
  5139  0E30                     u4565:	
  5140  0E30  1003               	clrc
  5141  0E31  0DF5               	rlf	??___ftpack,f
  5142  0E32  0DF6               	rlf	??___ftpack+1,f
  5143  0E33  0DF7               	rlf	??___ftpack+2,f
  5144  0E34  3EFF               	addlw	-1
  5145  0E35  1D03               	skipz
  5146  0E36  2E30               	goto	u4565
  5147  0E37  0875               	movf	??___ftpack,w
  5148  0E38  04F0               	iorwf	___ftpack@arg,f
  5149  0E39  0876               	movf	??___ftpack+1,w
  5150  0E3A  04F1               	iorwf	___ftpack@arg+1,f
  5151  0E3B  0877               	movf	??___ftpack+2,w
  5152  0E3C  04F2               	iorwf	___ftpack@arg+2,f
  5153  0E3D  0874               	movf	___ftpack@sign,w
  5154  0E3E  1903               	btfsc	3,2
  5155  0E3F  0008               	return
  5156  0E40  17F2               	bsf	___ftpack@arg+2,7
  5157  0E41  0008               	return
  5158  0E42                     __end_of___ftpack:	
  5159                           
  5160                           	psect	text29
  5161  0C06                     __ptext29:	
  5162 ;; *************** function _I2C_Write_Byte *****************
  5163 ;; Defined at:
  5164 ;;		line 87 in file "i2c.c"
  5165 ;; Parameters:    Size  Location     Type
  5166 ;;  Byte            1    wreg     unsigned char 
  5167 ;; Auto vars:     Size  Location     Type
  5168 ;;  Byte            1    1[COMMON] unsigned char 
  5169 ;; Return value:  Size  Location     Type
  5170 ;;		None               void
  5171 ;; Registers used:
  5172 ;;		wreg
  5173 ;; Tracked objects:
  5174 ;;		On entry : 0/0
  5175 ;;		On exit  : 0/0
  5176 ;;		Unchanged: 0/0
  5177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5178 ;;      Params:         0       0       0       0       0
  5179 ;;      Locals:         2       0       0       0       0
  5180 ;;      Temps:          0       0       0       0       0
  5181 ;;      Totals:         2       0       0       0       0
  5182 ;;Total ram usage:        2 bytes
  5183 ;; Hardware stack levels used:    1
  5184 ;; This function calls:
  5185 ;;		Nothing
  5186 ;; This function is called by:
  5187 ;;		_SetFrequency
  5188 ;;		_Freq_Available
  5189 ;;		_SearchUp
  5190 ;;		_SearchDown
  5191 ;; This function uses a non-reentrant model
  5192 ;;
  5193                           
  5194                           
  5195                           ;psect for function _I2C_Write_Byte
  5196  0C06                     _I2C_Write_Byte:	
  5197                           
  5198                           ;incstack = 0
  5199                           ; Regs used in _I2C_Write_Byte: [wreg]
  5200                           ;I2C_Write_Byte@Byte stored from wreg
  5201  0C06  00F1               	movwf	I2C_Write_Byte@Byte
  5202                           
  5203                           ;i2c.c: 88: SSPBUF = Byte;
  5204  0C07  0871               	movf	I2C_Write_Byte@Byte,w
  5205  0C08  1283               	bcf	3,5	;RP0=0, select bank0
  5206  0C09  1303               	bcf	3,6	;RP1=0, select bank0
  5207  0C0A  0093               	movwf	19	;volatile
  5208  0C0B                     l132:	
  5209                           ;i2c.c: 89: while(SSPSTATbits.BF == 1);
  5210                           
  5211  0C0B  1683               	bsf	3,5	;RP0=1, select bank1
  5212  0C0C  1303               	bcf	3,6	;RP1=0, select bank1
  5213  0C0D  1814               	btfsc	20,0	;volatile
  5214  0C0E  2C0B               	goto	l132
  5215                           
  5216                           ;i2c.c: 91: return SSPCON2bits.ACKSTAT;
  5217                           ;	Return value of _I2C_Write_Byte is never used
  5218  0C0F  0811               	movf	17,w	;volatile
  5219  0C10  0008               	return
  5220  0C11                     __end_of_I2C_Write_Byte:	
  5221                           
  5222                           	psect	text30
  5223  0BC8                     __ptext30:	
  5224 ;; *************** function _I2C_Start *****************
  5225 ;; Defined at:
  5226 ;;		line 41 in file "i2c.c"
  5227 ;; Parameters:    Size  Location     Type
  5228 ;;		None
  5229 ;; Auto vars:     Size  Location     Type
  5230 ;;		None
  5231 ;; Return value:  Size  Location     Type
  5232 ;;		None               void
  5233 ;; Registers used:
  5234 ;;		None
  5235 ;; Tracked objects:
  5236 ;;		On entry : 0/0
  5237 ;;		On exit  : 0/0
  5238 ;;		Unchanged: 0/0
  5239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5240 ;;      Params:         0       0       0       0       0
  5241 ;;      Locals:         0       0       0       0       0
  5242 ;;      Temps:          0       0       0       0       0
  5243 ;;      Totals:         0       0       0       0       0
  5244 ;;Total ram usage:        0 bytes
  5245 ;; Hardware stack levels used:    1
  5246 ;; This function calls:
  5247 ;;		Nothing
  5248 ;; This function is called by:
  5249 ;;		_SetFrequency
  5250 ;;		_Freq_Available
  5251 ;;		_SearchUp
  5252 ;;		_SearchDown
  5253 ;; This function uses a non-reentrant model
  5254 ;;
  5255                           
  5256                           
  5257                           ;psect for function _I2C_Start
  5258  0BC8                     _I2C_Start:	
  5259                           
  5260                           ;i2c.c: 42: SSPCON2bits.SEN = 1;
  5261                           
  5262                           ;incstack = 0
  5263                           ; Regs used in _I2C_Start: []
  5264  0BC8  1683               	bsf	3,5	;RP0=1, select bank1
  5265  0BC9  1303               	bcf	3,6	;RP1=0, select bank1
  5266  0BCA  1411               	bsf	17,0	;volatile
  5267  0BCB                     l95:	
  5268                           ;i2c.c: 44: while((SSPCON2bits.SEN || SSPSTATbits.R_W) == 1);
  5269                           
  5270  0BCB  1C11               	btfss	17,0	;volatile
  5271  0BCC  1914               	btfsc	20,2	;volatile
  5272  0BCD  2BCB               	goto	l95
  5273  0BCE  0008               	return
  5274  0BCF                     __end_of_I2C_Start:	
  5275                           
  5276                           	psect	text31
  5277  0BC1                     __ptext31:	
  5278 ;; *************** function _I2C_Stop *****************
  5279 ;; Defined at:
  5280 ;;		line 58 in file "i2c.c"
  5281 ;; Parameters:    Size  Location     Type
  5282 ;;		None
  5283 ;; Auto vars:     Size  Location     Type
  5284 ;;		None
  5285 ;; Return value:  Size  Location     Type
  5286 ;;		None               void
  5287 ;; Registers used:
  5288 ;;		None
  5289 ;; Tracked objects:
  5290 ;;		On entry : 0/0
  5291 ;;		On exit  : 0/0
  5292 ;;		Unchanged: 0/0
  5293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5294 ;;      Params:         0       0       0       0       0
  5295 ;;      Locals:         0       0       0       0       0
  5296 ;;      Temps:          0       0       0       0       0
  5297 ;;      Totals:         0       0       0       0       0
  5298 ;;Total ram usage:        0 bytes
  5299 ;; Hardware stack levels used:    1
  5300 ;; This function calls:
  5301 ;;		Nothing
  5302 ;; This function is called by:
  5303 ;;		_SetFrequency
  5304 ;;		_Freq_Available
  5305 ;;		_SearchUp
  5306 ;;		_SearchDown
  5307 ;; This function uses a non-reentrant model
  5308 ;;
  5309                           
  5310                           
  5311                           ;psect for function _I2C_Stop
  5312  0BC1                     _I2C_Stop:	
  5313                           
  5314                           ;i2c.c: 59: SSPCON2bits.PEN = 1;
  5315                           
  5316                           ;incstack = 0
  5317                           ; Regs used in _I2C_Stop: []
  5318  0BC1  1683               	bsf	3,5	;RP0=1, select bank1
  5319  0BC2  1303               	bcf	3,6	;RP1=0, select bank1
  5320  0BC3  1511               	bsf	17,2	;volatile
  5321  0BC4                     l107:	
  5322                           ;i2c.c: 60: while((SSPCON2bits.PEN || SSPSTATbits.R_W) == 1);
  5323                           
  5324  0BC4  1D11               	btfss	17,2	;volatile
  5325  0BC5  1914               	btfsc	20,2	;volatile
  5326  0BC6  2BC4               	goto	l107
  5327  0BC7  0008               	return
  5328  0BC8                     __end_of_I2C_Stop:	
  5329                           
  5330                           	psect	text32
  5331  0BE8                     __ptext32:	
  5332 ;; *************** function _I2C_Send_NACK *****************
  5333 ;; Defined at:
  5334 ;;		line 77 in file "i2c.c"
  5335 ;; Parameters:    Size  Location     Type
  5336 ;;		None
  5337 ;; Auto vars:     Size  Location     Type
  5338 ;;		None
  5339 ;; Return value:  Size  Location     Type
  5340 ;;		None               void
  5341 ;; Registers used:
  5342 ;;		None
  5343 ;; Tracked objects:
  5344 ;;		On entry : 0/0
  5345 ;;		On exit  : 0/0
  5346 ;;		Unchanged: 0/0
  5347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5348 ;;      Params:         0       0       0       0       0
  5349 ;;      Locals:         0       0       0       0       0
  5350 ;;      Temps:          0       0       0       0       0
  5351 ;;      Totals:         0       0       0       0       0
  5352 ;;Total ram usage:        0 bytes
  5353 ;; Hardware stack levels used:    1
  5354 ;; This function calls:
  5355 ;;		Nothing
  5356 ;; This function is called by:
  5357 ;;		_SetFrequency
  5358 ;;		_Freq_Available
  5359 ;;		_SearchUp
  5360 ;;		_SearchDown
  5361 ;; This function uses a non-reentrant model
  5362 ;;
  5363                           
  5364                           
  5365                           ;psect for function _I2C_Send_NACK
  5366  0BE8                     _I2C_Send_NACK:	
  5367  0BE8                     l123:	
  5368                           ;i2c.c: 78: while(SSPSTATbits.R_W == 1);
  5369                           
  5370                           ;incstack = 0
  5371                           ; Regs used in _I2C_Send_NACK: []
  5372                           
  5373  0BE8  1683               	bsf	3,5	;RP0=1, select bank1
  5374  0BE9  1303               	bcf	3,6	;RP1=0, select bank1
  5375  0BEA  1914               	btfsc	20,2	;volatile
  5376  0BEB  2BE8               	goto	l123
  5377                           
  5378                           ;i2c.c: 79: SSPCON2bits.ACKDT = 1;
  5379  0BEC  1691               	bsf	17,5	;volatile
  5380                           
  5381                           ;i2c.c: 80: SSPCON2bits.ACKEN = 1;
  5382  0BED  1611               	bsf	17,4	;volatile
  5383  0BEE                     l126:	
  5384                           ;i2c.c: 81: while((SSPCON2bits.ACKEN || SSPSTATbits.R_W)== 1);
  5385                           
  5386  0BEE  1E11               	btfss	17,4	;volatile
  5387  0BEF  1914               	btfsc	20,2	;volatile
  5388  0BF0  2BEE               	goto	l126
  5389  0BF1  0008               	return
  5390  0BF2                     __end_of_I2C_Send_NACK:	
  5391                           
  5392                           	psect	text33
  5393  0C32                     __ptext33:	
  5394 ;; *************** function _I2C_Send_ACK *****************
  5395 ;; Defined at:
  5396 ;;		line 66 in file "i2c.c"
  5397 ;; Parameters:    Size  Location     Type
  5398 ;;		None
  5399 ;; Auto vars:     Size  Location     Type
  5400 ;;		None
  5401 ;; Return value:  Size  Location     Type
  5402 ;;		None               void
  5403 ;; Registers used:
  5404 ;;		None
  5405 ;; Tracked objects:
  5406 ;;		On entry : 0/0
  5407 ;;		On exit  : 0/0
  5408 ;;		Unchanged: 0/0
  5409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5410 ;;      Params:         0       0       0       0       0
  5411 ;;      Locals:         0       0       0       0       0
  5412 ;;      Temps:          0       0       0       0       0
  5413 ;;      Totals:         0       0       0       0       0
  5414 ;;Total ram usage:        0 bytes
  5415 ;; Hardware stack levels used:    1
  5416 ;; This function calls:
  5417 ;;		Nothing
  5418 ;; This function is called by:
  5419 ;;		_SetFrequency
  5420 ;;		_Freq_Available
  5421 ;;		_SearchUp
  5422 ;;		_SearchDown
  5423 ;; This function uses a non-reentrant model
  5424 ;;
  5425                           
  5426                           
  5427                           ;psect for function _I2C_Send_ACK
  5428  0C32                     _I2C_Send_ACK:	
  5429  0C32                     l113:	
  5430                           ;i2c.c: 67: while(SSPSTATbits.R_W == 1);
  5431                           
  5432                           ;incstack = 0
  5433                           ; Regs used in _I2C_Send_ACK: []
  5434                           
  5435  0C32  1683               	bsf	3,5	;RP0=1, select bank1
  5436  0C33  1303               	bcf	3,6	;RP1=0, select bank1
  5437  0C34  1914               	btfsc	20,2	;volatile
  5438  0C35  2C32               	goto	l113
  5439                           
  5440                           ;i2c.c: 68: if(SSPCON2bits.ACKSTAT == 1) {
  5441  0C36  1F11               	btfss	17,6	;volatile
  5442  0C37  0008               	return
  5443                           
  5444                           ;i2c.c: 69: SSPCON2bits.PEN = 1;
  5445  0C38  1511               	bsf	17,2	;volatile
  5446  0C39                     l117:	
  5447                           ;i2c.c: 70: while((SSPCON2bits.PEN || SSPSTATbits.R_W) == 1);
  5448                           
  5449  0C39  1911               	btfsc	17,2	;volatile
  5450  0C3A  2C39               	goto	l117
  5451  0C3B  1D14               	btfss	20,2	;volatile
  5452  0C3C  0008               	return
  5453  0C3D  2C39               	goto	l117
  5454  0C3E                     __end_of_I2C_Send_ACK:	
  5455  007E                     btemp	set	126	;btemp
  5456  007E                     wtemp0	set	126


Data Sizes:
    Strings     11
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     73      73
    BANK1            80     57      67
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    ?___ftpack	float  size(1) Largest target is 0

    ?___lwdiv	unsigned int  size(1) Largest target is 0

    ?_Freq_Available	unsigned int  size(1) Largest target is 0

    ?___aldiv	long  size(1) Largest target is 0

    ?___altoft	float  size(1) Largest target is 0

    ?___ftadd	float  size(1) Largest target is 0

    ?___ftdiv	float  size(1) Largest target is 0

    ?___lwmod	unsigned int  size(1) Largest target is 0

    ?___ftmul	float  size(1) Largest target is 0

    ?___fttol	long  size(1) Largest target is 0

    lcd_putstr@csz_string	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _main->_SetFrequency
    _main->_SearchUp
    _main->_SearchDown
    _lcd_goto->_send_lcd_data
    _Freq_Available->___aldiv
    ___altoft->___aldiv
    ___ftmul->___aldiv
    _lcd_putstr->_lcd_putchar
    _lcd_putchar->_send_lcd_data
    _lcd_2ndline->_send_lcd_data
    _lcd_home->_send_lcd_data
    _lcd_initialize->_send_lcd_data
    _lcd_clear->_send_lcd_data
    _send_lcd_data->_set_lcd_e
    _send_lcd_data->_set_lcd_rs
    _send_lcd_data->_set_lcd_data
    ___fttol->___aldiv

Critical Paths under _main in BANK0

    _main->_SetFrequency
    _Freq_Display->_Freq_Available
    _lcd_bcd->_Freq_Available
    _SearchDown->_Freq_Available
    _Freq_Available->___ftmul
    ___altoft->___fttol
    _SearchUp->_Freq_Available
    ___ftmul->___ftdiv
    _SetFrequency->___ftmul
    ___ftadd->___fttol
    ___fttol->___aldiv
    ___ftdiv->___ftadd

Critical Paths under _main in BANK1

    _main->_Freq_Display
    _Freq_Display->_lcd_bcd
    _lcd_bcd->_Freq_Available
    _SearchDown->_Freq_Available
    _Freq_Available->___ftmul
    _SearchUp->_Freq_Available
    _SetFrequency->___ftmul

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   39025
                     _i2c_initialize
                     _lcd_initialize
                          _lcd_clear
                           _lcd_home
                         _lcd_putstr
                       _SetFrequency
                           _SearchUp
                         _SearchDown
                       _Freq_Display
 ---------------------------------------------------------------------------------
 (1) _Freq_Display                                         4     4      0    7873
                                             53 BANK1      4     4      0
                           _lcd_goto
                     _Freq_Available
                            _lcd_bcd
                            ___ftmul
                            ___fttol
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) _lcd_bcd                                             17    15      2     918
                                             36 BANK1     17    15      2
                     _Freq_Available (ARG)
                        _lcd_putchar
                            ___fttol (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     159
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     162
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _lcd_goto                                             2     2      0     132
                                              5 COMMON     2     2      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _SearchDown                                          11    11      0   12691
                                             13 COMMON     1     1      0
                                             36 BANK1     10    10      0
                     _Freq_Available
                          _I2C_Start
                     _I2C_Write_Byte
                       _I2C_Send_ACK
                      _I2C_Send_NACK
                           _I2C_Stop
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) _Freq_Available                                      21    18      3    4182
                                             70 BANK0      3     0      3
                                             18 BANK1     18    18      0
                     _i2c_initialize
                          _I2C_Start
                     _I2C_Write_Byte
                       _I2C_Send_ACK
                      _I2C_Send_NACK
                           _I2C_Stop
                      _I2C_Read_Byte
                            ___aldiv
                           ___altoft
                            ___ftdiv
                            ___ftmul (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___altoft                                             8     4      4    1305
                                             28 BANK0     10     6      4
                           ___ftpack
                            ___aldiv (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     300
                                              0 COMMON    13    13      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) _I2C_Read_Byte                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SearchUp                                            11    11      0    9189
                                             13 COMMON     1     1      0
                                             36 BANK1     10    10      0
                     _Freq_Available
                          _I2C_Start
                     _I2C_Write_Byte
                       _I2C_Send_ACK
                      _I2C_Send_NACK
                           _I2C_Stop
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2045
                                             66 BANK0      4     4      0
                                              0 BANK1     18    12      6
                     _i2c_initialize (ARG)
                          _I2C_Start (ARG)
                     _I2C_Write_Byte (ARG)
                       _I2C_Send_ACK (ARG)
                      _I2C_Send_NACK (ARG)
                           _I2C_Stop (ARG)
                      _I2C_Read_Byte (ARG)
                           ___ftpack
                            ___aldiv (ARG)
                           ___altoft (ARG)
                            ___ftdiv (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) _SetFrequency                                        11     8      3    8479
                                             13 COMMON     1     1      0
                                             70 BANK0      3     0      3
                                             18 BANK1      7     7      0
                          _I2C_Start
                     _I2C_Write_Byte
                       _I2C_Send_ACK
                      _I2C_Send_NACK
                           _I2C_Stop
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    3775
                                             28 BANK0     16    10      6
                           ___ftpack
                            ___ftmul (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_putstr                                           2     2      0     331
                                              7 COMMON     2     2      0
                        _lcd_2ndline
                        _lcd_putchar
 ---------------------------------------------------------------------------------
 (3) _lcd_putchar                                          2     2      0     132
                                              5 COMMON     2     2      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_2ndline                                          1     1      0     110
                                              5 COMMON     1     1      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_home                                             1     1      0     110
                                              5 COMMON     1     1      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_initialize                                       2     2      0     242
                                              5 COMMON     2     2      0
                          _lcd_clear
                          _set_lcd_e
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            0     0      0     110
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (4) _send_lcd_data                                        4     3      1     110
                                              1 COMMON     4     3      1
                          _set_lcd_e
                         _set_lcd_rs
                       _set_lcd_data
 ---------------------------------------------------------------------------------
 (5) _set_lcd_data                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _set_lcd_rs                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _set_lcd_e                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     252
                                              8 BANK0     20    16      4
                     _i2c_initialize (ARG)
                          _I2C_Start (ARG)
                     _I2C_Write_Byte (ARG)
                       _I2C_Send_ACK (ARG)
                      _I2C_Send_NACK (ARG)
                           _I2C_Stop (ARG)
                      _I2C_Read_Byte (ARG)
                           ___ftpack (ARG)
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    1875
                                             44 BANK0     22    16      6
                           ___ftpack
                            ___ftadd (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5     795
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Byte                                       1     1      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Send_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Send_ACK                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _i2c_initialize
   _lcd_initialize
     _lcd_clear
       _send_lcd_data
         _set_lcd_e
         _set_lcd_rs
         _set_lcd_data
     _set_lcd_e
     _send_lcd_data
       _set_lcd_e
       _set_lcd_rs
       _set_lcd_data
   _lcd_clear
     _send_lcd_data
       _set_lcd_e
       _set_lcd_rs
       _set_lcd_data
   _lcd_home
     _send_lcd_data
       _set_lcd_e
       _set_lcd_rs
       _set_lcd_data
   _lcd_putstr
     _lcd_2ndline
       _send_lcd_data
         _set_lcd_e
         _set_lcd_rs
         _set_lcd_data
     _lcd_putchar
       _send_lcd_data
         _set_lcd_e
         _set_lcd_rs
         _set_lcd_data
   _SetFrequency
     _I2C_Start
     _I2C_Write_Byte
     _I2C_Send_ACK
     _I2C_Send_NACK
     _I2C_Stop
     ___ftadd
       ___ftpack
       ___ftmul (ARG)
         _i2c_initialize (ARG)
         _I2C_Start (ARG)
         _I2C_Write_Byte (ARG)
         _I2C_Send_ACK (ARG)
         _I2C_Send_NACK (ARG)
         _I2C_Stop (ARG)
         _I2C_Read_Byte (ARG)
         ___ftpack (ARG)
         ___aldiv (ARG)
         ___altoft (ARG)
           ___ftpack
           ___aldiv (ARG)
           ___fttol (ARG)
             _i2c_initialize (ARG)
             _I2C_Start (ARG)
             _I2C_Write_Byte (ARG)
             _I2C_Send_ACK (ARG)
             _I2C_Send_NACK (ARG)
             _I2C_Stop (ARG)
             _I2C_Read_Byte (ARG)
             ___ftpack (ARG)
             ___aldiv (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___fttol (ARG)
             _i2c_initialize (ARG)
             _I2C_Start (ARG)
             _I2C_Write_Byte (ARG)
             _I2C_Send_ACK (ARG)
             _I2C_Send_NACK (ARG)
             _I2C_Stop (ARG)
             _I2C_Read_Byte (ARG)
             ___ftpack (ARG)
             ___aldiv (ARG)
         ___fttol (ARG)
           _i2c_initialize (ARG)
           _I2C_Start (ARG)
           _I2C_Write_Byte (ARG)
           _I2C_Send_ACK (ARG)
           _I2C_Send_NACK (ARG)
           _I2C_Stop (ARG)
           _I2C_Read_Byte (ARG)
           ___ftpack (ARG)
           ___aldiv (ARG)
       ___fttol (ARG)
         _i2c_initialize (ARG)
         _I2C_Start (ARG)
         _I2C_Write_Byte (ARG)
         _I2C_Send_ACK (ARG)
         _I2C_Send_NACK (ARG)
         _I2C_Stop (ARG)
         _I2C_Read_Byte (ARG)
         ___ftpack (ARG)
         ___aldiv (ARG)
     ___ftdiv
       ___ftpack
       ___ftadd (ARG)
         ___ftpack
         ___ftmul (ARG)
           _i2c_initialize (ARG)
           _I2C_Start (ARG)
           _I2C_Write_Byte (ARG)
           _I2C_Send_ACK (ARG)
           _I2C_Send_NACK (ARG)
           _I2C_Stop (ARG)
           _I2C_Read_Byte (ARG)
           ___ftpack (ARG)
           ___aldiv (ARG)
           ___altoft (ARG)
             ___ftpack
             ___aldiv (ARG)
             ___fttol (ARG)
               _i2c_initialize (ARG)
               _I2C_Start (ARG)
               _I2C_Write_Byte (ARG)
               _I2C_Send_ACK (ARG)
               _I2C_Send_NACK (ARG)
               _I2C_Stop (ARG)
               _I2C_Read_Byte (ARG)
               ___ftpack (ARG)
               ___aldiv (ARG)
           ___fttol (ARG)
             _i2c_initialize (ARG)
             _I2C_Start (ARG)
             _I2C_Write_Byte (ARG)
             _I2C_Send_ACK (ARG)
             _I2C_Send_NACK (ARG)
             _I2C_Stop (ARG)
             _I2C_Read_Byte (ARG)
             ___ftpack (ARG)
             ___aldiv (ARG)
         ___fttol (ARG)
           _i2c_initialize (ARG)
           _I2C_Start (ARG)
           _I2C_Write_Byte (ARG)
           _I2C_Send_ACK (ARG)
           _I2C_Send_NACK (ARG)
           _I2C_Stop (ARG)
           _I2C_Read_Byte (ARG)
           ___ftpack (ARG)
           ___aldiv (ARG)
       ___fttol (ARG)
         _i2c_initialize (ARG)
         _I2C_Start (ARG)
         _I2C_Write_Byte (ARG)
         _I2C_Send_ACK (ARG)
         _I2C_Send_NACK (ARG)
         _I2C_Stop (ARG)
         _I2C_Read_Byte (ARG)
         ___ftpack (ARG)
         ___aldiv (ARG)
     ___ftmul
       _i2c_initialize (ARG)
       _I2C_Start (ARG)
       _I2C_Write_Byte (ARG)
       _I2C_Send_ACK (ARG)
       _I2C_Send_NACK (ARG)
       _I2C_Stop (ARG)
       _I2C_Read_Byte (ARG)
       ___ftpack (ARG)
       ___aldiv (ARG)
       ___altoft (ARG)
         ___ftpack
         ___aldiv (ARG)
         ___fttol (ARG)
           _i2c_initialize (ARG)
           _I2C_Start (ARG)
           _I2C_Write_Byte (ARG)
           _I2C_Send_ACK (ARG)
           _I2C_Send_NACK (ARG)
           _I2C_Stop (ARG)
           _I2C_Read_Byte (ARG)
           ___ftpack (ARG)
           ___aldiv (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___ftadd (ARG)
           ___ftpack
           ___fttol (ARG)
             _i2c_initialize (ARG)
             _I2C_Start (ARG)
             _I2C_Write_Byte (ARG)
             _I2C_Send_ACK (ARG)
             _I2C_Send_NACK (ARG)
             _I2C_Stop (ARG)
             _I2C_Read_Byte (ARG)
             ___ftpack (ARG)
             ___aldiv (ARG)
         ___fttol (ARG)
           _i2c_initialize (ARG)
           _I2C_Start (ARG)
           _I2C_Write_Byte (ARG)
           _I2C_Send_ACK (ARG)
           _I2C_Send_NACK (ARG)
           _I2C_Stop (ARG)
           _I2C_Read_Byte (ARG)
           ___ftpack (ARG)
           ___aldiv (ARG)
       ___fttol (ARG)
         _i2c_initialize (ARG)
         _I2C_Start (ARG)
         _I2C_Write_Byte (ARG)
         _I2C_Send_ACK (ARG)
         _I2C_Send_NACK (ARG)
         _I2C_Stop (ARG)
         _I2C_Read_Byte (ARG)
         ___ftpack (ARG)
         ___aldiv (ARG)
     ___fttol
       _i2c_initialize (ARG)
       _I2C_Start (ARG)
       _I2C_Write_Byte (ARG)
       _I2C_Send_ACK (ARG)
       _I2C_Send_NACK (ARG)
       _I2C_Stop (ARG)
       _I2C_Read_Byte (ARG)
       ___ftpack (ARG)
       ___aldiv (ARG)
   _SearchUp
     _Freq_Available
       _i2c_initialize
       _I2C_Start
       _I2C_Write_Byte
       _I2C_Send_ACK
       _I2C_Send_NACK
       _I2C_Stop
       _I2C_Read_Byte
       ___aldiv
       ___altoft
         ___ftpack
         ___aldiv (ARG)
         ___fttol (ARG)
           _i2c_initialize (ARG)
           _I2C_Start (ARG)
           _I2C_Write_Byte (ARG)
           _I2C_Send_ACK (ARG)
           _I2C_Send_NACK (ARG)
           _I2C_Stop (ARG)
           _I2C_Read_Byte (ARG)
           ___ftpack (ARG)
           ___aldiv (ARG)
       ___ftdiv
         ___ftpack
         ___ftadd (ARG)
           ___ftpack
           ___ftmul (ARG)
             _i2c_initialize (ARG)
             _I2C_Start (ARG)
             _I2C_Write_Byte (ARG)
             _I2C_Send_ACK (ARG)
             _I2C_Send_NACK (ARG)
             _I2C_Stop (ARG)
             _I2C_Read_Byte (ARG)
             ___ftpack (ARG)
             ___aldiv (ARG)
             ___altoft (ARG)
               ___ftpack
               ___aldiv (ARG)
               ___fttol (ARG)
                 _i2c_initialize (ARG)
                 _I2C_Start (ARG)
                 _I2C_Write_Byte (ARG)
                 _I2C_Send_ACK (ARG)
                 _I2C_Send_NACK (ARG)
                 _I2C_Stop (ARG)
                 _I2C_Read_Byte (ARG)
                 ___ftpack (ARG)
                 ___aldiv (ARG)
             ___fttol (ARG)
               _i2c_initialize (ARG)
               _I2C_Start (ARG)
               _I2C_Write_Byte (ARG)
               _I2C_Send_ACK (ARG)
               _I2C_Send_NACK (ARG)
               _I2C_Stop (ARG)
               _I2C_Read_Byte (ARG)
               ___ftpack (ARG)
               ___aldiv (ARG)
           ___fttol (ARG)
             _i2c_initialize (ARG)
             _I2C_Start (ARG)
             _I2C_Write_Byte (ARG)
             _I2C_Send_ACK (ARG)
             _I2C_Send_NACK (ARG)
             _I2C_Stop (ARG)
             _I2C_Read_Byte (ARG)
             ___ftpack (ARG)
             ___aldiv (ARG)
         ___fttol (ARG)
           _i2c_initialize (ARG)
           _I2C_Start (ARG)
           _I2C_Write_Byte (ARG)
           _I2C_Send_ACK (ARG)
           _I2C_Send_NACK (ARG)
           _I2C_Stop (ARG)
           _I2C_Read_Byte (ARG)
           ___ftpack (ARG)
           ___aldiv (ARG)
       ___ftmul (ARG)
         _i2c_initialize (ARG)
         _I2C_Start (ARG)
         _I2C_Write_Byte (ARG)
         _I2C_Send_ACK (ARG)
         _I2C_Send_NACK (ARG)
         _I2C_Stop (ARG)
         _I2C_Read_Byte (ARG)
         ___ftpack (ARG)
         ___aldiv (ARG)
         ___altoft (ARG)
           ___ftpack
           ___aldiv (ARG)
           ___fttol (ARG)
             _i2c_initialize (ARG)
             _I2C_Start (ARG)
             _I2C_Write_Byte (ARG)
             _I2C_Send_ACK (ARG)
             _I2C_Send_NACK (ARG)
             _I2C_Stop (ARG)
             _I2C_Read_Byte (ARG)
             ___ftpack (ARG)
             ___aldiv (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___ftadd (ARG)
             ___ftpack
             ___fttol (ARG)
               _i2c_initialize (ARG)
               _I2C_Start (ARG)
               _I2C_Write_Byte (ARG)
               _I2C_Send_ACK (ARG)
               _I2C_Send_NACK (ARG)
               _I2C_Stop (ARG)
               _I2C_Read_Byte (ARG)
               ___ftpack (ARG)
               ___aldiv (ARG)
           ___fttol (ARG)
             _i2c_initialize (ARG)
             _I2C_Start (ARG)
             _I2C_Write_Byte (ARG)
             _I2C_Send_ACK (ARG)
             _I2C_Send_NACK (ARG)
             _I2C_Stop (ARG)
             _I2C_Read_Byte (ARG)
             ___ftpack (ARG)
             ___aldiv (ARG)
         ___fttol (ARG)
           _i2c_initialize (ARG)
           _I2C_Start (ARG)
           _I2C_Write_Byte (ARG)
           _I2C_Send_ACK (ARG)
           _I2C_Send_NACK (ARG)
           _I2C_Stop (ARG)
           _I2C_Read_Byte (ARG)
           ___ftpack (ARG)
           ___aldiv (ARG)
       ___fttol (ARG)
         _i2c_initialize (ARG)
         _I2C_Start (ARG)
         _I2C_Write_Byte (ARG)
         _I2C_Send_ACK (ARG)
         _I2C_Send_NACK (ARG)
         _I2C_Stop (ARG)
         _I2C_Read_Byte (ARG)
         ___ftpack (ARG)
         ___aldiv (ARG)
     _I2C_Start
     _I2C_Write_Byte
     _I2C_Send_ACK
     _I2C_Send_NACK
     _I2C_Stop
     ___ftadd
       ___ftpack
       ___ftmul (ARG)
         _i2c_initialize (ARG)
         _I2C_Start (ARG)
         _I2C_Write_Byte (ARG)
         _I2C_Send_ACK (ARG)
         _I2C_Send_NACK (ARG)
         _I2C_Stop (ARG)
         _I2C_Read_Byte (ARG)
         ___ftpack (ARG)
         ___aldiv (ARG)
         ___altoft (ARG)
           ___ftpack
           ___aldiv (ARG)
           ___fttol (ARG)
             _i2c_initialize (ARG)
             _I2C_Start (ARG)
             _I2C_Write_Byte (ARG)
             _I2C_Send_ACK (ARG)
             _I2C_Send_NACK (ARG)
             _I2C_Stop (ARG)
             _I2C_Read_Byte (ARG)
             ___ftpack (ARG)
             ___aldiv (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___fttol (ARG)
             _i2c_initialize (ARG)
             _I2C_Start (ARG)
             _I2C_Write_Byte (ARG)
             _I2C_Send_ACK (ARG)
             _I2C_Send_NACK (ARG)
             _I2C_Stop (ARG)
             _I2C_Read_Byte (ARG)
             ___ftpack (ARG)
             ___aldiv (ARG)
         ___fttol (ARG)
           _i2c_initialize (ARG)
           _I2C_Start (ARG)
           _I2C_Write_Byte (ARG)
           _I2C_Send_ACK (ARG)
           _I2C_Send_NACK (ARG)
           _I2C_Stop (ARG)
           _I2C_Read_Byte (ARG)
           ___ftpack (ARG)
           ___aldiv (ARG)
       ___fttol (ARG)
         _i2c_initialize (ARG)
         _I2C_Start (ARG)
         _I2C_Write_Byte (ARG)
         _I2C_Send_ACK (ARG)
         _I2C_Send_NACK (ARG)
         _I2C_Stop (ARG)
         _I2C_Read_Byte (ARG)
         ___ftpack (ARG)
         ___aldiv (ARG)
     ___ftdiv
       ___ftpack
       ___ftadd (ARG)
         ___ftpack
         ___ftmul (ARG)
           _i2c_initialize (ARG)
           _I2C_Start (ARG)
           _I2C_Write_Byte (ARG)
           _I2C_Send_ACK (ARG)
           _I2C_Send_NACK (ARG)
           _I2C_Stop (ARG)
           _I2C_Read_Byte (ARG)
           ___ftpack (ARG)
           ___aldiv (ARG)
           ___altoft (ARG)
             ___ftpack
             ___aldiv (ARG)
             ___fttol (ARG)
               _i2c_initialize (ARG)
               _I2C_Start (ARG)
               _I2C_Write_Byte (ARG)
               _I2C_Send_ACK (ARG)
               _I2C_Send_NACK (ARG)
               _I2C_Stop (ARG)
               _I2C_Read_Byte (ARG)
               ___ftpack (ARG)
               ___aldiv (ARG)
           ___fttol (ARG)
             _i2c_initialize (ARG)
             _I2C_Start (ARG)
             _I2C_Write_Byte (ARG)
             _I2C_Send_ACK (ARG)
             _I2C_Send_NACK (ARG)
             _I2C_Stop (ARG)
             _I2C_Read_Byte (ARG)
             ___ftpack (ARG)
             ___aldiv (ARG)
         ___fttol (ARG)
           _i2c_initialize (ARG)
           _I2C_Start (ARG)
           _I2C_Write_Byte (ARG)
           _I2C_Send_ACK (ARG)
           _I2C_Send_NACK (ARG)
           _I2C_Stop (ARG)
           _I2C_Read_Byte (ARG)
           ___ftpack (ARG)
           ___aldiv (ARG)
       ___fttol (ARG)
         _i2c_initialize (ARG)
         _I2C_Start (ARG)
         _I2C_Write_Byte (ARG)
         _I2C_Send_ACK (ARG)
         _I2C_Send_NACK (ARG)
         _I2C_Stop (ARG)
         _I2C_Read_Byte (ARG)
         ___ftpack (ARG)
         ___aldiv (ARG)
     ___ftmul
       _i2c_initialize (ARG)
       _I2C_Start (ARG)
       _I2C_Write_Byte (ARG)
       _I2C_Send_ACK (ARG)
       _I2C_Send_NACK (ARG)
       _I2C_Stop (ARG)
       _I2C_Read_Byte (ARG)
       ___ftpack (ARG)
       ___aldiv (ARG)
       ___altoft (ARG)
         ___ftpack
         ___aldiv (ARG)
         ___fttol (ARG)
           _i2c_initialize (ARG)
           _I2C_Start (ARG)
           _I2C_Write_Byte (ARG)
           _I2C_Send_ACK (ARG)
           _I2C_Send_NACK (ARG)
           _I2C_Stop (ARG)
           _I2C_Read_Byte (ARG)
           ___ftpack (ARG)
           ___aldiv (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___ftadd (ARG)
           ___ftpack
           ___fttol (ARG)
             _i2c_initialize (ARG)
             _I2C_Start (ARG)
             _I2C_Write_Byte (ARG)
             _I2C_Send_ACK (ARG)
             _I2C_Send_NACK (ARG)
             _I2C_Stop (ARG)
             _I2C_Read_Byte (ARG)
             ___ftpack (ARG)
             ___aldiv (ARG)
         ___fttol (ARG)
           _i2c_initialize (ARG)
           _I2C_Start (ARG)
           _I2C_Write_Byte (ARG)
           _I2C_Send_ACK (ARG)
           _I2C_Send_NACK (ARG)
           _I2C_Stop (ARG)
           _I2C_Read_Byte (ARG)
           ___ftpack (ARG)
           ___aldiv (ARG)
       ___fttol (ARG)
         _i2c_initialize (ARG)
         _I2C_Start (ARG)
         _I2C_Write_Byte (ARG)
         _I2C_Send_ACK (ARG)
         _I2C_Send_NACK (ARG)
         _I2C_Stop (ARG)
         _I2C_Read_Byte (ARG)
         ___ftpack (ARG)
         ___aldiv (ARG)
     ___fttol
       _i2c_initialize (ARG)
       _I2C_Start (ARG)
       _I2C_Write_Byte (ARG)
       _I2C_Send_ACK (ARG)
       _I2C_Send_NACK (ARG)
       _I2C_Stop (ARG)
       _I2C_Read_Byte (ARG)
       ___ftpack (ARG)
       ___aldiv (ARG)
   _SearchDown
     _Freq_Available
       _i2c_initialize
       _I2C_Start
       _I2C_Write_Byte
       _I2C_Send_ACK
       _I2C_Send_NACK
       _I2C_Stop
       _I2C_Read_Byte
       ___aldiv
       ___altoft
         ___ftpack
         ___aldiv (ARG)
         ___fttol (ARG)
           _i2c_initialize (ARG)
           _I2C_Start (ARG)
           _I2C_Write_Byte (ARG)
           _I2C_Send_ACK (ARG)
           _I2C_Send_NACK (ARG)
           _I2C_Stop (ARG)
           _I2C_Read_Byte (ARG)
           ___ftpack (ARG)
           ___aldiv (ARG)
       ___ftdiv
         ___ftpack
         ___ftadd (ARG)
           ___ftpack
           ___ftmul (ARG)
             _i2c_initialize (ARG)
             _I2C_Start (ARG)
             _I2C_Write_Byte (ARG)
             _I2C_Send_ACK (ARG)
             _I2C_Send_NACK (ARG)
             _I2C_Stop (ARG)
             _I2C_Read_Byte (ARG)
             ___ftpack (ARG)
             ___aldiv (ARG)
             ___altoft (ARG)
               ___ftpack
               ___aldiv (ARG)
               ___fttol (ARG)
                 _i2c_initialize (ARG)
                 _I2C_Start (ARG)
                 _I2C_Write_Byte (ARG)
                 _I2C_Send_ACK (ARG)
                 _I2C_Send_NACK (ARG)
                 _I2C_Stop (ARG)
                 _I2C_Read_Byte (ARG)
                 ___ftpack (ARG)
                 ___aldiv (ARG)
             ___fttol (ARG)
               _i2c_initialize (ARG)
               _I2C_Start (ARG)
               _I2C_Write_Byte (ARG)
               _I2C_Send_ACK (ARG)
               _I2C_Send_NACK (ARG)
               _I2C_Stop (ARG)
               _I2C_Read_Byte (ARG)
               ___ftpack (ARG)
               ___aldiv (ARG)
           ___fttol (ARG)
             _i2c_initialize (ARG)
             _I2C_Start (ARG)
             _I2C_Write_Byte (ARG)
             _I2C_Send_ACK (ARG)
             _I2C_Send_NACK (ARG)
             _I2C_Stop (ARG)
             _I2C_Read_Byte (ARG)
             ___ftpack (ARG)
             ___aldiv (ARG)
         ___fttol (ARG)
           _i2c_initialize (ARG)
           _I2C_Start (ARG)
           _I2C_Write_Byte (ARG)
           _I2C_Send_ACK (ARG)
           _I2C_Send_NACK (ARG)
           _I2C_Stop (ARG)
           _I2C_Read_Byte (ARG)
           ___ftpack (ARG)
           ___aldiv (ARG)
       ___ftmul (ARG)
         _i2c_initialize (ARG)
         _I2C_Start (ARG)
         _I2C_Write_Byte (ARG)
         _I2C_Send_ACK (ARG)
         _I2C_Send_NACK (ARG)
         _I2C_Stop (ARG)
         _I2C_Read_Byte (ARG)
         ___ftpack (ARG)
         ___aldiv (ARG)
         ___altoft (ARG)
           ___ftpack
           ___aldiv (ARG)
           ___fttol (ARG)
             _i2c_initialize (ARG)
             _I2C_Start (ARG)
             _I2C_Write_Byte (ARG)
             _I2C_Send_ACK (ARG)
             _I2C_Send_NACK (ARG)
             _I2C_Stop (ARG)
             _I2C_Read_Byte (ARG)
             ___ftpack (ARG)
             ___aldiv (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___ftadd (ARG)
             ___ftpack
             ___fttol (ARG)
               _i2c_initialize (ARG)
               _I2C_Start (ARG)
               _I2C_Write_Byte (ARG)
               _I2C_Send_ACK (ARG)
               _I2C_Send_NACK (ARG)
               _I2C_Stop (ARG)
               _I2C_Read_Byte (ARG)
               ___ftpack (ARG)
               ___aldiv (ARG)
           ___fttol (ARG)
             _i2c_initialize (ARG)
             _I2C_Start (ARG)
             _I2C_Write_Byte (ARG)
             _I2C_Send_ACK (ARG)
             _I2C_Send_NACK (ARG)
             _I2C_Stop (ARG)
             _I2C_Read_Byte (ARG)
             ___ftpack (ARG)
             ___aldiv (ARG)
         ___fttol (ARG)
           _i2c_initialize (ARG)
           _I2C_Start (ARG)
           _I2C_Write_Byte (ARG)
           _I2C_Send_ACK (ARG)
           _I2C_Send_NACK (ARG)
           _I2C_Stop (ARG)
           _I2C_Read_Byte (ARG)
           ___ftpack (ARG)
           ___aldiv (ARG)
       ___fttol (ARG)
         _i2c_initialize (ARG)
         _I2C_Start (ARG)
         _I2C_Write_Byte (ARG)
         _I2C_Send_ACK (ARG)
         _I2C_Send_NACK (ARG)
         _I2C_Stop (ARG)
         _I2C_Read_Byte (ARG)
         ___ftpack (ARG)
         ___aldiv (ARG)
     _I2C_Start
     _I2C_Write_Byte
     _I2C_Send_ACK
     _I2C_Send_NACK
     _I2C_Stop
     ___ftadd
       ___ftpack
       ___ftmul (ARG)
         _i2c_initialize (ARG)
         _I2C_Start (ARG)
         _I2C_Write_Byte (ARG)
         _I2C_Send_ACK (ARG)
         _I2C_Send_NACK (ARG)
         _I2C_Stop (ARG)
         _I2C_Read_Byte (ARG)
         ___ftpack (ARG)
         ___aldiv (ARG)
         ___altoft (ARG)
           ___ftpack
           ___aldiv (ARG)
           ___fttol (ARG)
             _i2c_initialize (ARG)
             _I2C_Start (ARG)
             _I2C_Write_Byte (ARG)
             _I2C_Send_ACK (ARG)
             _I2C_Send_NACK (ARG)
             _I2C_Stop (ARG)
             _I2C_Read_Byte (ARG)
             ___ftpack (ARG)
             ___aldiv (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___fttol (ARG)
             _i2c_initialize (ARG)
             _I2C_Start (ARG)
             _I2C_Write_Byte (ARG)
             _I2C_Send_ACK (ARG)
             _I2C_Send_NACK (ARG)
             _I2C_Stop (ARG)
             _I2C_Read_Byte (ARG)
             ___ftpack (ARG)
             ___aldiv (ARG)
         ___fttol (ARG)
           _i2c_initialize (ARG)
           _I2C_Start (ARG)
           _I2C_Write_Byte (ARG)
           _I2C_Send_ACK (ARG)
           _I2C_Send_NACK (ARG)
           _I2C_Stop (ARG)
           _I2C_Read_Byte (ARG)
           ___ftpack (ARG)
           ___aldiv (ARG)
       ___fttol (ARG)
         _i2c_initialize (ARG)
         _I2C_Start (ARG)
         _I2C_Write_Byte (ARG)
         _I2C_Send_ACK (ARG)
         _I2C_Send_NACK (ARG)
         _I2C_Stop (ARG)
         _I2C_Read_Byte (ARG)
         ___ftpack (ARG)
         ___aldiv (ARG)
     ___ftdiv
       ___ftpack
       ___ftadd (ARG)
         ___ftpack
         ___ftmul (ARG)
           _i2c_initialize (ARG)
           _I2C_Start (ARG)
           _I2C_Write_Byte (ARG)
           _I2C_Send_ACK (ARG)
           _I2C_Send_NACK (ARG)
           _I2C_Stop (ARG)
           _I2C_Read_Byte (ARG)
           ___ftpack (ARG)
           ___aldiv (ARG)
           ___altoft (ARG)
             ___ftpack
             ___aldiv (ARG)
             ___fttol (ARG)
               _i2c_initialize (ARG)
               _I2C_Start (ARG)
               _I2C_Write_Byte (ARG)
               _I2C_Send_ACK (ARG)
               _I2C_Send_NACK (ARG)
               _I2C_Stop (ARG)
               _I2C_Read_Byte (ARG)
               ___ftpack (ARG)
               ___aldiv (ARG)
           ___fttol (ARG)
             _i2c_initialize (ARG)
             _I2C_Start (ARG)
             _I2C_Write_Byte (ARG)
             _I2C_Send_ACK (ARG)
             _I2C_Send_NACK (ARG)
             _I2C_Stop (ARG)
             _I2C_Read_Byte (ARG)
             ___ftpack (ARG)
             ___aldiv (ARG)
         ___fttol (ARG)
           _i2c_initialize (ARG)
           _I2C_Start (ARG)
           _I2C_Write_Byte (ARG)
           _I2C_Send_ACK (ARG)
           _I2C_Send_NACK (ARG)
           _I2C_Stop (ARG)
           _I2C_Read_Byte (ARG)
           ___ftpack (ARG)
           ___aldiv (ARG)
       ___fttol (ARG)
         _i2c_initialize (ARG)
         _I2C_Start (ARG)
         _I2C_Write_Byte (ARG)
         _I2C_Send_ACK (ARG)
         _I2C_Send_NACK (ARG)
         _I2C_Stop (ARG)
         _I2C_Read_Byte (ARG)
         ___ftpack (ARG)
         ___aldiv (ARG)
     ___ftmul
       _i2c_initialize (ARG)
       _I2C_Start (ARG)
       _I2C_Write_Byte (ARG)
       _I2C_Send_ACK (ARG)
       _I2C_Send_NACK (ARG)
       _I2C_Stop (ARG)
       _I2C_Read_Byte (ARG)
       ___ftpack (ARG)
       ___aldiv (ARG)
       ___altoft (ARG)
         ___ftpack
         ___aldiv (ARG)
         ___fttol (ARG)
           _i2c_initialize (ARG)
           _I2C_Start (ARG)
           _I2C_Write_Byte (ARG)
           _I2C_Send_ACK (ARG)
           _I2C_Send_NACK (ARG)
           _I2C_Stop (ARG)
           _I2C_Read_Byte (ARG)
           ___ftpack (ARG)
           ___aldiv (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___ftadd (ARG)
           ___ftpack
           ___fttol (ARG)
             _i2c_initialize (ARG)
             _I2C_Start (ARG)
             _I2C_Write_Byte (ARG)
             _I2C_Send_ACK (ARG)
             _I2C_Send_NACK (ARG)
             _I2C_Stop (ARG)
             _I2C_Read_Byte (ARG)
             ___ftpack (ARG)
             ___aldiv (ARG)
         ___fttol (ARG)
           _i2c_initialize (ARG)
           _I2C_Start (ARG)
           _I2C_Write_Byte (ARG)
           _I2C_Send_ACK (ARG)
           _I2C_Send_NACK (ARG)
           _I2C_Stop (ARG)
           _I2C_Read_Byte (ARG)
           ___ftpack (ARG)
           ___aldiv (ARG)
       ___fttol (ARG)
         _i2c_initialize (ARG)
         _I2C_Start (ARG)
         _I2C_Write_Byte (ARG)
         _I2C_Send_ACK (ARG)
         _I2C_Send_NACK (ARG)
         _I2C_Stop (ARG)
         _I2C_Read_Byte (ARG)
         ___ftpack (ARG)
         ___aldiv (ARG)
     ___fttol
       _i2c_initialize (ARG)
       _I2C_Start (ARG)
       _I2C_Write_Byte (ARG)
       _I2C_Send_ACK (ARG)
       _I2C_Send_NACK (ARG)
       _I2C_Stop (ARG)
       _I2C_Read_Byte (ARG)
       ___ftpack (ARG)
       ___aldiv (ARG)
   _Freq_Display
     _lcd_goto
       _send_lcd_data
         _set_lcd_e
         _set_lcd_rs
         _set_lcd_data
     _Freq_Available
       _i2c_initialize
       _I2C_Start
       _I2C_Write_Byte
       _I2C_Send_ACK
       _I2C_Send_NACK
       _I2C_Stop
       _I2C_Read_Byte
       ___aldiv
       ___altoft
         ___ftpack
         ___aldiv (ARG)
         ___fttol (ARG)
           _i2c_initialize (ARG)
           _I2C_Start (ARG)
           _I2C_Write_Byte (ARG)
           _I2C_Send_ACK (ARG)
           _I2C_Send_NACK (ARG)
           _I2C_Stop (ARG)
           _I2C_Read_Byte (ARG)
           ___ftpack (ARG)
           ___aldiv (ARG)
       ___ftdiv
         ___ftpack
         ___ftadd (ARG)
           ___ftpack
           ___ftmul (ARG)
             _i2c_initialize (ARG)
             _I2C_Start (ARG)
             _I2C_Write_Byte (ARG)
             _I2C_Send_ACK (ARG)
             _I2C_Send_NACK (ARG)
             _I2C_Stop (ARG)
             _I2C_Read_Byte (ARG)
             ___ftpack (ARG)
             ___aldiv (ARG)
             ___altoft (ARG)
               ___ftpack
               ___aldiv (ARG)
               ___fttol (ARG)
                 _i2c_initialize (ARG)
                 _I2C_Start (ARG)
                 _I2C_Write_Byte (ARG)
                 _I2C_Send_ACK (ARG)
                 _I2C_Send_NACK (ARG)
                 _I2C_Stop (ARG)
                 _I2C_Read_Byte (ARG)
                 ___ftpack (ARG)
                 ___aldiv (ARG)
             ___fttol (ARG)
               _i2c_initialize (ARG)
               _I2C_Start (ARG)
               _I2C_Write_Byte (ARG)
               _I2C_Send_ACK (ARG)
               _I2C_Send_NACK (ARG)
               _I2C_Stop (ARG)
               _I2C_Read_Byte (ARG)
               ___ftpack (ARG)
               ___aldiv (ARG)
           ___fttol (ARG)
             _i2c_initialize (ARG)
             _I2C_Start (ARG)
             _I2C_Write_Byte (ARG)
             _I2C_Send_ACK (ARG)
             _I2C_Send_NACK (ARG)
             _I2C_Stop (ARG)
             _I2C_Read_Byte (ARG)
             ___ftpack (ARG)
             ___aldiv (ARG)
         ___fttol (ARG)
           _i2c_initialize (ARG)
           _I2C_Start (ARG)
           _I2C_Write_Byte (ARG)
           _I2C_Send_ACK (ARG)
           _I2C_Send_NACK (ARG)
           _I2C_Stop (ARG)
           _I2C_Read_Byte (ARG)
           ___ftpack (ARG)
           ___aldiv (ARG)
       ___ftmul (ARG)
         _i2c_initialize (ARG)
         _I2C_Start (ARG)
         _I2C_Write_Byte (ARG)
         _I2C_Send_ACK (ARG)
         _I2C_Send_NACK (ARG)
         _I2C_Stop (ARG)
         _I2C_Read_Byte (ARG)
         ___ftpack (ARG)
         ___aldiv (ARG)
         ___altoft (ARG)
           ___ftpack
           ___aldiv (ARG)
           ___fttol (ARG)
             _i2c_initialize (ARG)
             _I2C_Start (ARG)
             _I2C_Write_Byte (ARG)
             _I2C_Send_ACK (ARG)
             _I2C_Send_NACK (ARG)
             _I2C_Stop (ARG)
             _I2C_Read_Byte (ARG)
             ___ftpack (ARG)
             ___aldiv (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___ftadd (ARG)
             ___ftpack
             ___fttol (ARG)
               _i2c_initialize (ARG)
               _I2C_Start (ARG)
               _I2C_Write_Byte (ARG)
               _I2C_Send_ACK (ARG)
               _I2C_Send_NACK (ARG)
               _I2C_Stop (ARG)
               _I2C_Read_Byte (ARG)
               ___ftpack (ARG)
               ___aldiv (ARG)
           ___fttol (ARG)
             _i2c_initialize (ARG)
             _I2C_Start (ARG)
             _I2C_Write_Byte (ARG)
             _I2C_Send_ACK (ARG)
             _I2C_Send_NACK (ARG)
             _I2C_Stop (ARG)
             _I2C_Read_Byte (ARG)
             ___ftpack (ARG)
             ___aldiv (ARG)
         ___fttol (ARG)
           _i2c_initialize (ARG)
           _I2C_Start (ARG)
           _I2C_Write_Byte (ARG)
           _I2C_Send_ACK (ARG)
           _I2C_Send_NACK (ARG)
           _I2C_Stop (ARG)
           _I2C_Read_Byte (ARG)
           ___ftpack (ARG)
           ___aldiv (ARG)
       ___fttol (ARG)
         _i2c_initialize (ARG)
         _I2C_Start (ARG)
         _I2C_Write_Byte (ARG)
         _I2C_Send_ACK (ARG)
         _I2C_Send_NACK (ARG)
         _I2C_Stop (ARG)
         _I2C_Read_Byte (ARG)
         ___ftpack (ARG)
         ___aldiv (ARG)
     _lcd_bcd
       _Freq_Available (ARG)
         _i2c_initialize
         _I2C_Start
         _I2C_Write_Byte
         _I2C_Send_ACK
         _I2C_Send_NACK
         _I2C_Stop
         _I2C_Read_Byte
         ___aldiv
         ___altoft
           ___ftpack
           ___aldiv (ARG)
           ___fttol (ARG)
             _i2c_initialize (ARG)
             _I2C_Start (ARG)
             _I2C_Write_Byte (ARG)
             _I2C_Send_ACK (ARG)
             _I2C_Send_NACK (ARG)
             _I2C_Stop (ARG)
             _I2C_Read_Byte (ARG)
             ___ftpack (ARG)
             ___aldiv (ARG)
         ___ftdiv
           ___ftpack
           ___ftadd (ARG)
             ___ftpack
             ___ftmul (ARG)
               _i2c_initialize (ARG)
               _I2C_Start (ARG)
               _I2C_Write_Byte (ARG)
               _I2C_Send_ACK (ARG)
               _I2C_Send_NACK (ARG)
               _I2C_Stop (ARG)
               _I2C_Read_Byte (ARG)
               ___ftpack (ARG)
               ___aldiv (ARG)
               ___altoft (ARG)
                 ___ftpack
                 ___aldiv (ARG)
                 ___fttol (ARG)
                   _i2c_initialize (ARG)
                   _I2C_Start (ARG)
                   _I2C_Write_Byte (ARG)
                   _I2C_Send_ACK (ARG)
                   _I2C_Send_NACK (ARG)
                   _I2C_Stop (ARG)
                   _I2C_Read_Byte (ARG)
                   ___ftpack (ARG)
                   ___aldiv (ARG)
               ___fttol (ARG)
                 _i2c_initialize (ARG)
                 _I2C_Start (ARG)
                 _I2C_Write_Byte (ARG)
                 _I2C_Send_ACK (ARG)
                 _I2C_Send_NACK (ARG)
                 _I2C_Stop (ARG)
                 _I2C_Read_Byte (ARG)
                 ___ftpack (ARG)
                 ___aldiv (ARG)
             ___fttol (ARG)
               _i2c_initialize (ARG)
               _I2C_Start (ARG)
               _I2C_Write_Byte (ARG)
               _I2C_Send_ACK (ARG)
               _I2C_Send_NACK (ARG)
               _I2C_Stop (ARG)
               _I2C_Read_Byte (ARG)
               ___ftpack (ARG)
               ___aldiv (ARG)
           ___fttol (ARG)
             _i2c_initialize (ARG)
             _I2C_Start (ARG)
             _I2C_Write_Byte (ARG)
             _I2C_Send_ACK (ARG)
             _I2C_Send_NACK (ARG)
             _I2C_Stop (ARG)
             _I2C_Read_Byte (ARG)
             ___ftpack (ARG)
             ___aldiv (ARG)
         ___ftmul (ARG)
           _i2c_initialize (ARG)
           _I2C_Start (ARG)
           _I2C_Write_Byte (ARG)
           _I2C_Send_ACK (ARG)
           _I2C_Send_NACK (ARG)
           _I2C_Stop (ARG)
           _I2C_Read_Byte (ARG)
           ___ftpack (ARG)
           ___aldiv (ARG)
           ___altoft (ARG)
             ___ftpack
             ___aldiv (ARG)
             ___fttol (ARG)
               _i2c_initialize (ARG)
               _I2C_Start (ARG)
               _I2C_Write_Byte (ARG)
               _I2C_Send_ACK (ARG)
               _I2C_Send_NACK (ARG)
               _I2C_Stop (ARG)
               _I2C_Read_Byte (ARG)
               ___ftpack (ARG)
               ___aldiv (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___ftadd (ARG)
               ___ftpack
               ___fttol (ARG)
                 _i2c_initialize (ARG)
                 _I2C_Start (ARG)
                 _I2C_Write_Byte (ARG)
                 _I2C_Send_ACK (ARG)
                 _I2C_Send_NACK (ARG)
                 _I2C_Stop (ARG)
                 _I2C_Read_Byte (ARG)
                 ___ftpack (ARG)
                 ___aldiv (ARG)
             ___fttol (ARG)
               _i2c_initialize (ARG)
               _I2C_Start (ARG)
               _I2C_Write_Byte (ARG)
               _I2C_Send_ACK (ARG)
               _I2C_Send_NACK (ARG)
               _I2C_Stop (ARG)
               _I2C_Read_Byte (ARG)
               ___ftpack (ARG)
               ___aldiv (ARG)
           ___fttol (ARG)
             _i2c_initialize (ARG)
             _I2C_Start (ARG)
             _I2C_Write_Byte (ARG)
             _I2C_Send_ACK (ARG)
             _I2C_Send_NACK (ARG)
             _I2C_Stop (ARG)
             _I2C_Read_Byte (ARG)
             ___ftpack (ARG)
             ___aldiv (ARG)
         ___fttol (ARG)
           _i2c_initialize (ARG)
           _I2C_Start (ARG)
           _I2C_Write_Byte (ARG)
           _I2C_Send_ACK (ARG)
           _I2C_Send_NACK (ARG)
           _I2C_Stop (ARG)
           _I2C_Read_Byte (ARG)
           ___ftpack (ARG)
           ___aldiv (ARG)
       _lcd_putchar (ARG)
         _send_lcd_data
           _set_lcd_e
           _set_lcd_rs
           _set_lcd_data
       ___fttol (ARG)
         _i2c_initialize (ARG)
         _I2C_Start (ARG)
         _I2C_Write_Byte (ARG)
         _I2C_Send_ACK (ARG)
         _I2C_Send_NACK (ARG)
         _I2C_Stop (ARG)
         _I2C_Read_Byte (ARG)
         ___ftpack (ARG)
         ___aldiv (ARG)
       ___lwdiv (ARG)
       ___lwmod (ARG)
     ___ftmul
       _i2c_initialize (ARG)
       _I2C_Start (ARG)
       _I2C_Write_Byte (ARG)
       _I2C_Send_ACK (ARG)
       _I2C_Send_NACK (ARG)
       _I2C_Stop (ARG)
       _I2C_Read_Byte (ARG)
       ___ftpack (ARG)
       ___aldiv (ARG)
       ___altoft (ARG)
         ___ftpack
         ___aldiv (ARG)
         ___fttol (ARG)
           _i2c_initialize (ARG)
           _I2C_Start (ARG)
           _I2C_Write_Byte (ARG)
           _I2C_Send_ACK (ARG)
           _I2C_Send_NACK (ARG)
           _I2C_Stop (ARG)
           _I2C_Read_Byte (ARG)
           ___ftpack (ARG)
           ___aldiv (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___ftadd (ARG)
           ___ftpack
           ___fttol (ARG)
             _i2c_initialize (ARG)
             _I2C_Start (ARG)
             _I2C_Write_Byte (ARG)
             _I2C_Send_ACK (ARG)
             _I2C_Send_NACK (ARG)
             _I2C_Stop (ARG)
             _I2C_Read_Byte (ARG)
             ___ftpack (ARG)
             ___aldiv (ARG)
         ___fttol (ARG)
           _i2c_initialize (ARG)
           _I2C_Start (ARG)
           _I2C_Write_Byte (ARG)
           _I2C_Send_ACK (ARG)
           _I2C_Send_NACK (ARG)
           _I2C_Stop (ARG)
           _I2C_Read_Byte (ARG)
           ___ftpack (ARG)
           ___aldiv (ARG)
       ___fttol (ARG)
         _i2c_initialize (ARG)
         _I2C_Start (ARG)
         _I2C_Write_Byte (ARG)
         _I2C_Send_ACK (ARG)
         _I2C_Send_NACK (ARG)
         _I2C_Stop (ARG)
         _I2C_Read_Byte (ARG)
         ___ftpack (ARG)
         ___aldiv (ARG)
     ___fttol
       _i2c_initialize (ARG)
       _I2C_Start (ARG)
       _I2C_Write_Byte (ARG)
       _I2C_Send_ACK (ARG)
       _I2C_Send_NACK (ARG)
       _I2C_Stop (ARG)
       _I2C_Read_Byte (ARG)
       ___ftpack (ARG)
       ___aldiv (ARG)
     ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       5       2        0.0%
ABS                  0      0      9A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     49      49       5       91.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     39      43       7       83.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      9F      12        0.0%


Microchip Technology PIC Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Mon Apr 07 16:34:12 2014

                ___altoft@exp 0044                             pc 0002            __size_of_I2C_Start 0007  
                ?_lcd_putchar 0070                   __CFG_CP$OFF 0000                   _SSPSTATbits 0094  
               ___altoft@sign 0045                            l57 0DD4                            l95 0BCB  
                          fsr 0004                  ___ftadd@exp1 004B                  ___ftadd@exp2 004A  
                ___ftadd@sign 0049                           l113 0C32                           l123 0BE8  
                         l107 0BC4                           l132 0C0B                           l117 0C39  
                         l126 0BEE                           l138 0BFF                           l322 0EE2  
                         l440 0E29                           l434 0E10                           l463 0556  
                         _RB0 0030                           _RB1 0031                           _RB4 0034  
                         _RB5 0035                  __CFG_CPD$OFF 0000                           fsr0 0004  
                         indf 0000            I2C_Write_Byte@Byte 0071                  __CFG_FOSC$HS 0000  
           set_lcd_e@b_output 0070                  __CFG_LVP$OFF 0000                  ___ftdiv@cntr 005C  
                ___ftdiv@sign 0061                          l2002 0F48                          l2020 0D16  
                        l2006 0F56                          l2022 0D24                          l2032 0D45  
                        l2050 0C91                          l2116 0E5C                          l2028 0D3A  
                        l2044 0C75                          l2150 0EC7                          l2142 0EAB  
                        l2134 0E8E                          l2046 0C83                          l2054 0C9C  
                        l2144 0EB6                          l2136 0E9E                          l2320 0CF7  
                        l4000 057A                          l2146 0EB9                          l2322 0CFD  
                        l4010 059D                          l2324 0D09                          l4020 05DB  
                        l2326 0CD9                          l4050 068C                          l4042 0670  
                        l4026 05FD                          l4054 069C                          l4038 0660  
                        l4144 0711                          l4136 06F4                          l4224 0DC2  
                        l2476 0296                          l4228 0DCB                          l1980 0EF3  
                        l3910 009D                          l1990 0F13                          l1988 0F03  
                        l3862 0DE9                          l3918 00BC                          l3950 04D7  
                        l1998 0F3B                          l3872 0E15                          l3864 0DF5  
                        l3960 04ED                          l3936 0D62                          l3874 0E1F  
                        l3866 0DFA                          l3858 0DE2                          l3890 0042  
                        l3954 04DE                          l3938 0D74                          l3980 0528  
                        l3972 0507                          l3990 0546                          l3982 052D  
                        l3896 0058                          l3992 0552                          l3984 0531  
                        l3978 051C                          l3996 0568                          STR_1 0009  
                        u1410 0C23                          u1605 0F2A                          u1390 0C18  
                        u2430 01C9                          u1615 0F3C                          u5100 076E  
                        u5005 0679                          u5101 0771                          u1725 0C78  
                        u5102 0778                          u1575 0F07                          u5103 077B  
                        u1655 0D19                          u1745 0C89                          u1595 0F15  
                        u1675 0D25                          u1755 0C92                          u1925 0EAD  
                        u5045 069D                          u1685 0D31                          u5055 06A5  
                        u1695 0D3B                          u1865 0E63                          u5137 0C48  
                        u4515 0E09                          u5147 0CBA                          u4605 006A  
                        u5157 0CC8                          u4535 0E18                          u4615 007C  
                        u1895 0E8F                          u5095 073E                          u4625 009E  
                        u4635 00AF                          u4565 0E30                          u4645 00BD  
                        u4495 0DEE                          u4815 051D                          u4675 0D67  
                        u4845 0532                          u4785 0508                          u4875 0547  
                        u4955 0617                          u4965 0635                          u4995 0671  
              ??_Freq_Display 007D                  __CFG_WRT$OFF 0000                          _main 0D8E  
                ___ftpack@arg 0070                  ___ftpack@exp 0073                          btemp 007E  
            __end_of_I2C_Stop 0BC8         __size_of_I2C_Send_ACK 000C                          start 0000  
                ___ftmul@cntr 00B0                  ___ftmul@sign 00B1                  ___fttol@exp1 003B  
                ___fttol@lval 0037               __end_of___aldiv 0F5F                         ?_main 0070  
             __end_of___ftadd 05B7                 __CFG_WDTE$OFF 0000               __end_of___ftdiv 00E2  
             __end_of___ftmul 06D0               __end_of___fttol 0ED0               __end_of___lwdiv 0D4C  
             __end_of___lwmod 0CA3                         _PORTB 0006                         _PORTC 0007  
                       _PORTD 0008                         _TRISB 0086                         _TRISD 0088  
        send_lcd_data@uc_data 0071               __end_of_lcd_bcd 02AC                _i2c_initialize 001A  
      __size_of_I2C_Read_Byte 000A                  _I2C_Send_ACK 0C32                 ___ftpack@sign 0074  
           __end_of_I2C_Start 0BCF                __CFG_BOREN$OFF 0000                         pclath 000A  
        SearchDown@frequencyB 00CC          SearchDown@frequencyH 00CA          SearchDown@frequencyL 00CB  
      __size_of_I2C_Send_NACK 000A                         status 0003                         wtemp0 007E  
            _SetFrequency$809 00B2         SetFrequency@frequency 0066               __initialization 07F0  
           send_lcd_data@b_rs 0074                  __end_of_main 0DDA  Freq_Available@freq_available 00C0  
        __size_of_lcd_2ndline 0009         __end_of_send_lcd_data 0CD8              __end_of_SearchUp 03AD  
                      ??_main 007E                 ___fttol@sign1 0036        __end_of_i2c_initialize 002A  
                  _SearchDown 03AD              __end_of___altoft 0D8E              __end_of___ftpack 0E42  
                      _ANSELH 0189              ??_Freq_Available 00B2                        _SSPADD 0093  
                      _SSPBUF 0013                __CFG_PWRTE$OFF 0000              __end_of_lcd_home 0BDF  
            __end_of_lcd_goto 0C32                 _I2C_Read_Byte 0BFC                     ??___aldiv 0070  
                   ??___ftadd 0042                     ??___ftdiv 0052                     ??___ftmul 0062  
                   ??___fttol 002C                     ??___lwdiv 0074                     ??___lwmod 0074  
        __end_of_Freq_Display 1000                 _I2C_Send_NACK 0BE8                     ??_lcd_bcd 00C6  
        __size_of_lcd_putchar 000A         ___ftmul@f3_as_product 00AD          Freq_Available@buffer 00BB  
               ?_SetFrequency 0066                     ?_I2C_Stop 0070               ?_i2c_initialize 0070  
            _Freq_Display$808 00D5              ??_lcd_initialize 0075       __end_of__initialization 07FC  
                  ___altoft@c 003C                    ___ftadd@f1 003C                    ___ftadd@f2 003F  
                  ___ftdiv@f1 004F                    ___ftdiv@f2 004C                    ___ftdiv@f3 005E  
      SetFrequency@frequencyB 00B7        SetFrequency@frequencyH 00B5        SetFrequency@frequencyL 00B6  
                  ___ftmul@f1 00A0                    ___ftmul@f2 00A3                ?_I2C_Read_Byte 0070  
                  ___fttol@f1 0028                __pcstackCOMMON 0070                ?_I2C_Send_NACK 0070  
             Freq_Available@i 00C3                ??_SetFrequency 007D                    ??_I2C_Stop 0070  
          __size_of_lcd_clear 0007                   ?_SearchDown 0070                    __pbssBANK1 00D9  
                   ?_SearchUp 0070                    __pmaintext 0D8E             SearchUp@frequency 00C7  
                   ?___altoft 003C       __size_of_I2C_Write_Byte 000B                     ?___ftpack 0070  
          __size_of_set_lcd_e 000B                    _lcd_putstr 0CD8                     ?_lcd_home 0070  
                   ?_lcd_goto 0070                    __stringtab 0003                 ?_set_lcd_data 0070  
                   _I2C_Start 0BC8                    ??_SearchUp 007D               ??_I2C_Read_Byte 0070  
           __end_of_lcd_clear 0BD6         __size_of_Freq_Display 00A1           __size_of_SearchDown 0101  
                     ___aldiv 0ED0               ??_I2C_Send_NACK 0070                       ___ftadd 04AE  
                     ___ftdiv 002A                       ___ftmul 05B7                       ___fttol 0E42  
                     ___lwdiv 0D0E                       ___lwmod 0C6F                    ??___altoft 0040  
                  ??___ftpack 0075                       __ptext1 0F5F                       __ptext2 01BE  
                     __ptext3 0C6F                       __ptext4 0D0E                       __ptext5 0C27  
                     __ptext6 03AD                       __ptext7 06D0                       __ptext8 0D4C  
                     __ptext9 0ED0                       _lcd_bcd 01BE              ___aldiv@dividend 0024  
                  ??_lcd_home 0075                    ??_lcd_goto 0075          end_of_initialization 07FC  
           lcd_bcd@ui_decimal 00CA                ??_set_lcd_data 0070             __end_of_set_lcd_e 0C1C  
                _Freq_Display 0F5F                    ?_I2C_Start 0070          __end_of_SetFrequency 01BE  
                  _set_lcd_rs 0C1C                 ??_lcd_2ndline 0075              ___aldiv@quotient 0079  
            ??_i2c_initialize 0070                     _TRISCbits 0087             __size_of_I2C_Stop 0007  
                 ?_lcd_putstr 0070                   ___ftdiv@exp 005D        __size_of_send_lcd_data 0035  
                 ___ftmul@exp 00AC                 ??_lcd_putchar 0075                _I2C_Write_Byte 0C06  
           lcd_putchar@c_data 0076           __end_of_lcd_2ndline 0BE8           SearchDown@frequency 00C7  
         start_initialization 07F0            set_lcd_rs@b_output 0070                  ??_SearchDown 007D  
        lcd_putstr@csz_string 0078           lcd_goto@uc_position 0076                   ??_I2C_Start 0070  
                 ?_set_lcd_rs 0070             __size_of_SearchUp 0101        __end_of_I2C_Write_Byte 0C11  
     __size_of_Freq_Available 0120            __end_of_SearchDown 04AE           __size_of_lcd_putstr 0036  
               _send_lcd_data 0CA3          __end_of_set_lcd_data 001A             __size_of___altoft 0042  
           __size_of___ftpack 0068           __end_of_lcd_putchar 0BFC                 __pcstackBANK0 0020  
               __pcstackBANK1 00A0           __end_of__stringdata 0014                 ?_I2C_Send_ACK 0070  
       __size_of_SetFrequency 00DC             __size_of_lcd_home 0009             __size_of_lcd_goto 000B  
                _SearchUp$810 00C4       __size_of_lcd_initialize 0031              ___lwdiv@dividend 0072  
              _SearchDown$811 00C4               ?_I2C_Write_Byte 0070                      ?___aldiv 0020  
                 _lcd_2ndline 0BDF                      ?___ftadd 003C                      ?___ftdiv 004C  
                    ?___ftmul 00A0                      ?___fttol 0028                      ?___lwdiv 0070  
                    ?___lwmod 0070            SearchUp@frequencyB 00CC            SearchUp@frequencyH 00CA  
          SearchUp@frequencyL 00CB                     _lcd_clear 0BCF                ?_send_lcd_data 0071  
                   __pstrings 0003                      ?_lcd_bcd 00C4                      _I2C_Stop 0BC1  
                _SetFrequency 00E2           __size_of_set_lcd_rs 000B                ??_I2C_Send_ACK 0070  
            ___lwdiv@quotient 0075           set_lcd_data@uc_data 0070               ___aldiv@divisor 0020  
             ___aldiv@counter 0077                     _set_lcd_e 0C11         __end_of_I2C_Read_Byte 0C06  
            lcd_bcd@ui_number 00C4                   _lcd_putchar 0BF2                    ?_lcd_clear 0070  
       __end_of_I2C_Send_NACK 0BF2                   __stringbase 0008                   __stringdata 0009  
                ??_lcd_putstr 0077    Freq_Display@freq_available 00D7                      _SearchUp 02AC  
                  ?_set_lcd_e 0070                _Freq_Available 06D0         __size_of_set_lcd_data 0006  
             ??_send_lcd_data 0072              __size_of___aldiv 008F              __size_of___ftadd 0109  
            __size_of___ftdiv 00B8                      ___altoft 0D4C              __size_of___ftmul 0119  
            __size_of___fttol 008E              __size_of___lwdiv 003E            __end_of_lcd_putstr 0D0E  
            __size_of___lwmod 0034                      ___ftpack 0DDA            __end_of__stringtab 0009  
            __size_of_lcd_bcd 00EE               ___lwdiv@divisor 0070               ___lwdiv@counter 0077  
                    __ptext10 0BFC                      __ptext11 001A                      __ptext20 0C3E  
                    __ptext12 02AC                      __ptext21 0BCF                      __ptext13 05B7  
                    __ptext30 0BC8                      __ptext22 0CA3                      __ptext14 00E2  
                    __ptext31 0BC1                      __ptext23 0014                      __ptext15 04AE  
                    __ptext32 0BE8                      __ptext24 0C1C                      __ptext16 0CD8  
                    __ptext33 0C32                      __ptext25 0C11                      __ptext17 0BF2  
                    __ptext26 0E42                      __ptext18 0BDF                      __ptext27 002A  
                    __ptext19 0BD6                      __ptext28 0DDA                      __ptext29 0C06  
                    _lcd_home 0BD6                      _lcd_goto 0C27                 __size_of_main 004C  
             lcd_bcd@uc_digit 00D4                  _set_lcd_data 0014        __end_of_Freq_Available 07F0  
              _lcd_initialize 0C3E                  ??_set_lcd_rs 0070          __end_of_I2C_Send_ACK 0C3E  
                 ??_lcd_clear 0075       __size_of_i2c_initialize 0010            __end_of_set_lcd_rs 0C27  
            ___lwmod@dividend 0072        __end_of_lcd_initialize 0C6F              ??_I2C_Write_Byte 0070  
             ?_Freq_Available 0066                     stringcode 0003                   ??_set_lcd_e 0070  
                ?_lcd_2ndline 0070                  lcd_bcd@F1677 00D9               ___lwmod@divisor 0070  
             ___lwmod@counter 0075                      stringdir 0003                      stringtab 0003  
                ___aldiv@sign 0078                   _SSPCON2bits 0091                 ?_Freq_Display 0070  
             ?_lcd_initialize 0070                    _SSPCONbits 0014  
